{"id":"bffde16e2fb36e4e1f5d83f61125ee25","_format":"hh-sol-build-info-1","solcVersion":"0.6.12","solcLongVersion":"0.6.12+commit.27d51765","input":{"language":"Solidity","sources":{"contracts/core/dao/PopLocker.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\n// Docgen-SOLC: 0.6.12\n\nimport \"openzeppelin-v3/token/ERC20/IERC20.sol\";\nimport \"openzeppelin-v3/token/ERC20/SafeERC20.sol\";\nimport \"openzeppelin-v3/math/Math.sol\";\nimport \"openzeppelin-v3/access/Ownable.sol\";\nimport \"openzeppelin-v3/utils/ReentrancyGuard.sol\";\n\nimport \"../libraries/BoringMath.sol\";\nimport \"../interfaces/IRewardsEscrow.sol\";\n\npragma solidity 0.6.12;\npragma experimental ABIEncoderV2;\n\n// POP locked in this contract will be entitled to voting rights for popcorn.network\n// Based on CVX Locking contract for https://www.convexfinance.com/\n// Based on EPS Staking contract for http://ellipsis.finance/\n// Based on SNX MultiRewards by iamdefinitelyahuman - https://github.com/iamdefinitelyahuman/multi-rewards\n\ncontract PopLocker is ReentrancyGuard, Ownable {\n  using BoringMath for uint256;\n  using BoringMath224 for uint224;\n  using BoringMath112 for uint112;\n  using BoringMath32 for uint32;\n  using SafeERC20 for IERC20;\n\n  /* ========== STATE VARIABLES ========== */\n\n  struct Reward {\n    bool useBoost;\n    uint40 periodFinish;\n    uint208 rewardRate;\n    uint40 lastUpdateTime;\n    uint208 rewardPerTokenStored;\n  }\n  struct Balances {\n    uint112 locked;\n    uint112 boosted;\n    uint32 nextUnlockIndex;\n  }\n  struct LockedBalance {\n    uint112 amount;\n    uint112 boosted;\n    uint32 unlockTime;\n  }\n  struct EarnedData {\n    address token;\n    uint256 amount;\n  }\n  struct Epoch {\n    uint224 supply; //epoch boosted supply\n    uint32 date; //epoch start date\n  }\n\n  //token constants\n  IERC20 public stakingToken;\n  IRewardsEscrow public rewardsEscrow;\n\n  //rewards\n  address[] public rewardTokens;\n  mapping(address => Reward) public rewardData;\n\n  // duration in seconds for rewards to be held in escrow\n  uint256 public escrowDuration;\n\n  // Duration that rewards are streamed over\n  uint256 public constant rewardsDuration = 7 days;\n\n  // Duration of lock/earned penalty period\n  uint256 public constant lockDuration = rewardsDuration * 12;\n\n  // reward token -> distributor -> is approved to add rewards\n  mapping(address => mapping(address => bool)) public rewardDistributors;\n\n  // user -> reward token -> amount\n  mapping(address => mapping(address => uint256)) public userRewardPerTokenPaid;\n  mapping(address => mapping(address => uint256)) public rewards;\n\n  //supplies and epochs\n  uint256 public lockedSupply;\n  uint256 public boostedSupply;\n  Epoch[] public epochs;\n\n  //mappings for balance data\n  mapping(address => Balances) public balances;\n  mapping(address => LockedBalance[]) public userLocks;\n\n  //boost\n  address public boostPayment;\n  uint256 public maximumBoostPayment = 0;\n  uint256 public boostRate = 10000;\n  uint256 public nextMaximumBoostPayment = 0;\n  uint256 public nextBoostRate = 10000;\n  uint256 public constant denominator = 10000;\n\n  //management\n  uint256 public kickRewardPerEpoch = 100;\n  uint256 public kickRewardEpochDelay = 4;\n\n  //shutdown\n  bool public isShutdown = false;\n\n  //erc20-like interface\n  string private _name;\n  string private _symbol;\n  uint8 private immutable _decimals;\n\n  /* ========== CONSTRUCTOR ========== */\n\n  constructor(IERC20 _stakingToken, IRewardsEscrow _rewardsEscrow) public Ownable() {\n    _name = \"Vote Locked POP Token\";\n    _symbol = \"vlPOP\";\n    _decimals = 18;\n\n    stakingToken = _stakingToken;\n    rewardsEscrow = _rewardsEscrow;\n    escrowDuration = 365 days;\n\n    uint256 currentEpoch = block.timestamp.div(rewardsDuration).mul(rewardsDuration);\n    epochs.push(Epoch({ supply: 0, date: uint32(currentEpoch) }));\n  }\n\n  function decimals() public view returns (uint8) {\n    return _decimals;\n  }\n\n  function name() public view returns (string memory) {\n    return _name;\n  }\n\n  function symbol() public view returns (string memory) {\n    return _symbol;\n  }\n\n  /* ========== ADMIN CONFIGURATION ========== */\n\n  // Add a new reward token to be distributed to stakers\n  function addReward(\n    address _rewardsToken,\n    address _distributor,\n    bool _useBoost\n  ) public onlyOwner {\n    require(rewardData[_rewardsToken].lastUpdateTime == 0);\n    rewardTokens.push(_rewardsToken);\n    rewardData[_rewardsToken].lastUpdateTime = uint40(block.timestamp);\n    rewardData[_rewardsToken].periodFinish = uint40(block.timestamp);\n    rewardData[_rewardsToken].useBoost = _useBoost;\n    rewardDistributors[_rewardsToken][_distributor] = true;\n  }\n\n  // Modify approval for an address to call notifyRewardAmount\n  function approveRewardDistributor(\n    address _rewardsToken,\n    address _distributor,\n    bool _approved\n  ) external onlyOwner {\n    require(rewardData[_rewardsToken].lastUpdateTime > 0, \"rewards token does not exist\");\n    rewardDistributors[_rewardsToken][_distributor] = _approved;\n  }\n\n  //set boost parameters\n  function setBoost(\n    uint256 _max,\n    uint256 _rate,\n    address _receivingAddress\n  ) external onlyOwner {\n    require(_max < 1500, \"over max payment\"); //max 15%\n    require(_rate < 30000, \"over max rate\"); //max 3x\n    require(_receivingAddress != address(0), \"invalid address\"); //must point somewhere valid\n    nextMaximumBoostPayment = _max;\n    nextBoostRate = _rate;\n    boostPayment = _receivingAddress;\n  }\n\n  function setEscrowDuration(uint256 duration) external onlyOwner {\n    emit EscrowDurationUpdated(escrowDuration, duration);\n    escrowDuration = duration;\n  }\n\n  //set kick incentive\n  function setKickIncentive(uint256 _rate, uint256 _delay) external onlyOwner {\n    require(_rate <= 500, \"over max rate\"); //max 5% per epoch\n    require(_delay >= 2, \"min delay\"); //minimum 2 epochs of grace\n    kickRewardPerEpoch = _rate;\n    kickRewardEpochDelay = _delay;\n  }\n\n  //shutdown the contract.\n  function shutdown() external onlyOwner {\n    isShutdown = true;\n  }\n\n  //set approvals for rewards escrow\n  function setApprovals() external {\n    IERC20(stakingToken).safeApprove(address(rewardsEscrow), 0);\n    IERC20(stakingToken).safeApprove(address(rewardsEscrow), uint256(-1));\n  }\n\n  /* ========== VIEWS ========== */\n\n  function _rewardPerToken(address _rewardsToken) internal view returns (uint256) {\n    if (boostedSupply == 0) {\n      return rewardData[_rewardsToken].rewardPerTokenStored;\n    }\n    return\n      uint256(rewardData[_rewardsToken].rewardPerTokenStored).add(\n        _lastTimeRewardApplicable(rewardData[_rewardsToken].periodFinish)\n          .sub(rewardData[_rewardsToken].lastUpdateTime)\n          .mul(rewardData[_rewardsToken].rewardRate)\n          .mul(1e18)\n          .div(rewardData[_rewardsToken].useBoost ? boostedSupply : lockedSupply)\n      );\n  }\n\n  function _earned(\n    address _user,\n    address _rewardsToken,\n    uint256 _balance\n  ) internal view returns (uint256) {\n    return\n      _balance.mul(_rewardPerToken(_rewardsToken).sub(userRewardPerTokenPaid[_user][_rewardsToken])).div(1e18).add(\n        rewards[_user][_rewardsToken]\n      );\n  }\n\n  function _lastTimeRewardApplicable(uint256 _finishTime) internal view returns (uint256) {\n    return Math.min(block.timestamp, _finishTime);\n  }\n\n  function lastTimeRewardApplicable(address _rewardsToken) public view returns (uint256) {\n    return _lastTimeRewardApplicable(rewardData[_rewardsToken].periodFinish);\n  }\n\n  function rewardPerToken(address _rewardsToken) external view returns (uint256) {\n    return _rewardPerToken(_rewardsToken);\n  }\n\n  function getRewardForDuration(address _rewardsToken) external view returns (uint256) {\n    return uint256(rewardData[_rewardsToken].rewardRate).mul(rewardsDuration);\n  }\n\n  // Address and claimable amount of all reward tokens for the given account\n  function claimableRewards(address _account) external view returns (EarnedData[] memory userRewards) {\n    userRewards = new EarnedData[](rewardTokens.length);\n    Balances storage userBalance = balances[_account];\n    uint256 boostedBal = userBalance.boosted;\n    for (uint256 i = 0; i < userRewards.length; i++) {\n      address token = rewardTokens[i];\n      userRewards[i].token = token;\n      userRewards[i].amount = _earned(_account, token, rewardData[token].useBoost ? boostedBal : userBalance.locked);\n    }\n    return userRewards;\n  }\n\n  // Total BOOSTED balance of an account, including unlocked but not withdrawn tokens\n  function rewardWeightOf(address _user) external view returns (uint256 amount) {\n    return balances[_user].boosted;\n  }\n\n  // total token balance of an account, including unlocked but not withdrawn tokens\n  function lockedBalanceOf(address _user) external view returns (uint256 amount) {\n    return balances[_user].locked;\n  }\n\n  //BOOSTED balance of an account which only includes properly locked tokens as of the most recent eligible epoch\n  function balanceOf(address _user) external view returns (uint256 amount) {\n    LockedBalance[] storage locks = userLocks[_user];\n    Balances storage userBalance = balances[_user];\n    uint256 nextUnlockIndex = userBalance.nextUnlockIndex;\n\n    //start with current boosted amount\n    amount = balances[_user].boosted;\n\n    uint256 locksLength = locks.length;\n    //remove old records only (will be better gas-wise than adding up)\n    for (uint256 i = nextUnlockIndex; i < locksLength; i++) {\n      if (locks[i].unlockTime <= block.timestamp) {\n        amount = amount.sub(locks[i].boosted);\n      } else {\n        //stop now as no futher checks are needed\n        break;\n      }\n    }\n\n    //also remove amount in the current epoch\n    uint256 currentEpoch = block.timestamp.div(rewardsDuration).mul(rewardsDuration);\n    if (locksLength > 0 && uint256(locks[locksLength - 1].unlockTime).sub(lockDuration) == currentEpoch) {\n      amount = amount.sub(locks[locksLength - 1].boosted);\n    }\n\n    return amount;\n  }\n\n  //BOOSTED balance of an account which only includes properly locked tokens at the given epoch\n  function balanceAtEpochOf(uint256 _epoch, address _user) external view returns (uint256 amount) {\n    LockedBalance[] storage locks = userLocks[_user];\n\n    //get timestamp of given epoch index\n    uint256 epochTime = epochs[_epoch].date;\n    //get timestamp of first non-inclusive epoch\n    uint256 cutoffEpoch = epochTime.sub(lockDuration);\n\n    //current epoch is not counted\n    uint256 currentEpoch = block.timestamp.div(rewardsDuration).mul(rewardsDuration);\n\n    //need to add up since the range could be in the middle somewhere\n    //traverse inversely to make more current queries more gas efficient\n    for (uint256 i = locks.length - 1; i + 1 != 0; i--) {\n      uint256 lockEpoch = uint256(locks[i].unlockTime).sub(lockDuration);\n      //lock epoch must be less or equal to the epoch we're basing from.\n      //also not include the current epoch\n      if (lockEpoch <= epochTime && lockEpoch < currentEpoch) {\n        if (lockEpoch > cutoffEpoch) {\n          amount = amount.add(locks[i].boosted);\n        } else {\n          //stop now as no futher checks matter\n          break;\n        }\n      }\n    }\n\n    return amount;\n  }\n\n  //supply of all properly locked BOOSTED balances at most recent eligible epoch\n  function totalSupply() external view returns (uint256 supply) {\n    uint256 currentEpoch = block.timestamp.div(rewardsDuration).mul(rewardsDuration);\n    uint256 cutoffEpoch = currentEpoch.sub(lockDuration);\n    uint256 epochindex = epochs.length;\n\n    //do not include current epoch's supply\n    if (uint256(epochs[epochindex - 1].date) == currentEpoch) {\n      epochindex--;\n    }\n\n    //traverse inversely to make more current queries more gas efficient\n    for (uint256 i = epochindex - 1; i + 1 != 0; i--) {\n      Epoch storage e = epochs[i];\n      if (uint256(e.date) <= cutoffEpoch) {\n        break;\n      }\n      supply = supply.add(e.supply);\n    }\n\n    return supply;\n  }\n\n  //supply of all properly locked BOOSTED balances at the given epoch\n  function totalSupplyAtEpoch(uint256 _epoch) external view returns (uint256 supply) {\n    uint256 epochStart = uint256(epochs[_epoch].date).div(rewardsDuration).mul(rewardsDuration);\n    uint256 cutoffEpoch = epochStart.sub(lockDuration);\n    uint256 currentEpoch = block.timestamp.div(rewardsDuration).mul(rewardsDuration);\n\n    //do not include current epoch's supply\n    if (uint256(epochs[_epoch].date) == currentEpoch) {\n      _epoch--;\n    }\n\n    //traverse inversely to make more current queries more gas efficient\n    for (uint256 i = _epoch; i + 1 != 0; i--) {\n      Epoch storage e = epochs[i];\n      if (uint256(e.date) <= cutoffEpoch) {\n        break;\n      }\n      supply = supply.add(epochs[i].supply);\n    }\n\n    return supply;\n  }\n\n  //find an epoch index based on timestamp\n  function findEpochId(uint256 _time) external view returns (uint256 epoch) {\n    uint256 max = epochs.length - 1;\n    uint256 min = 0;\n\n    //convert to start point\n    _time = _time.div(rewardsDuration).mul(rewardsDuration);\n\n    for (uint256 i = 0; i < 128; i++) {\n      if (min >= max) break;\n\n      uint256 mid = (min + max + 1) / 2;\n      uint256 midEpochBlock = epochs[mid].date;\n      if (midEpochBlock == _time) {\n        //found\n        return mid;\n      } else if (midEpochBlock < _time) {\n        min = mid;\n      } else {\n        max = mid - 1;\n      }\n    }\n    return min;\n  }\n\n  // Information on a user's locked balances\n  function lockedBalances(address _user)\n    external\n    view\n    returns (\n      uint256 total,\n      uint256 unlockable,\n      uint256 locked,\n      LockedBalance[] memory lockData\n    )\n  {\n    LockedBalance[] storage locks = userLocks[_user];\n    Balances storage userBalance = balances[_user];\n    uint256 nextUnlockIndex = userBalance.nextUnlockIndex;\n    uint256 idx;\n    for (uint256 i = nextUnlockIndex; i < locks.length; i++) {\n      if (locks[i].unlockTime > block.timestamp) {\n        if (idx == 0) {\n          lockData = new LockedBalance[](locks.length - i);\n        }\n        lockData[idx] = locks[i];\n        idx++;\n        locked = locked.add(locks[i].amount);\n      } else {\n        unlockable = unlockable.add(locks[i].amount);\n      }\n    }\n    return (userBalance.locked, unlockable, locked, lockData);\n  }\n\n  //number of epochs\n  function epochCount() external view returns (uint256) {\n    return epochs.length;\n  }\n\n  /* ========== MUTATIVE FUNCTIONS ========== */\n\n  function checkpointEpoch() external {\n    _checkpointEpoch();\n  }\n\n  //insert a new epoch if needed. fill in any gaps\n  function _checkpointEpoch() internal {\n    uint256 currentEpoch = block.timestamp.div(rewardsDuration).mul(rewardsDuration);\n    uint256 epochindex = epochs.length;\n\n    //first epoch add in constructor, no need to check 0 length\n\n    //check to add\n    if (epochs[epochindex - 1].date < currentEpoch) {\n      //fill any epoch gaps\n      while (epochs[epochs.length - 1].date != currentEpoch) {\n        uint256 nextEpochDate = uint256(epochs[epochs.length - 1].date).add(rewardsDuration);\n        epochs.push(Epoch({ supply: 0, date: uint32(nextEpochDate) }));\n      }\n\n      //update boost parameters on a new epoch\n      if (boostRate != nextBoostRate) {\n        boostRate = nextBoostRate;\n      }\n      if (maximumBoostPayment != nextMaximumBoostPayment) {\n        maximumBoostPayment = nextMaximumBoostPayment;\n      }\n    }\n  }\n\n  // Locked tokens cannot be withdrawn for lockDuration and are eligible to receive stakingReward rewards\n  function lock(\n    address _account,\n    uint256 _amount,\n    uint256 _spendRatio\n  ) external nonReentrant {\n    //pull tokens\n    stakingToken.safeTransferFrom(msg.sender, address(this), _amount);\n\n    //lock\n    _lock(_account, _amount, _spendRatio);\n  }\n\n  //lock tokens\n  function _lock(\n    address _account,\n    uint256 _amount,\n    uint256 _spendRatio\n  ) internal updateReward(_account) {\n    require(_amount > 0, \"Cannot stake 0\");\n    require(_spendRatio <= maximumBoostPayment, \"over max spend\");\n    require(!isShutdown, \"shutdown\");\n\n    Balances storage bal = balances[_account];\n\n    //must try check pointing epoch first\n    _checkpointEpoch();\n\n    //calc lock and boosted amount\n    uint256 spendAmount = _amount.mul(_spendRatio).div(denominator);\n    uint256 boostRatio = boostRate.mul(_spendRatio).div(maximumBoostPayment == 0 ? 1 : maximumBoostPayment);\n    uint112 lockAmount = _amount.sub(spendAmount).to112();\n    uint112 boostedAmount = _amount.add(_amount.mul(boostRatio).div(denominator)).to112();\n\n    //add user balances\n    bal.locked = bal.locked.add(lockAmount);\n    bal.boosted = bal.boosted.add(boostedAmount);\n\n    //add to total supplies\n    lockedSupply = lockedSupply.add(lockAmount);\n    boostedSupply = boostedSupply.add(boostedAmount);\n\n    //add user lock records or add to current\n    uint256 currentEpoch = block.timestamp.div(rewardsDuration).mul(rewardsDuration);\n    uint256 unlockTime = currentEpoch.add(lockDuration);\n    uint256 idx = userLocks[_account].length;\n    if (idx == 0 || userLocks[_account][idx - 1].unlockTime < unlockTime) {\n      userLocks[_account].push(\n        LockedBalance({ amount: lockAmount, boosted: boostedAmount, unlockTime: uint32(unlockTime) })\n      );\n    } else {\n      LockedBalance storage userL = userLocks[_account][idx - 1];\n      userL.amount = userL.amount.add(lockAmount);\n      userL.boosted = userL.boosted.add(boostedAmount);\n    }\n\n    //update epoch supply, epoch checkpointed above so safe to add to latest\n    Epoch storage e = epochs[epochs.length - 1];\n    e.supply = e.supply.add(uint224(boostedAmount));\n\n    //send boost payment\n    if (spendAmount > 0) {\n      stakingToken.safeTransfer(boostPayment, spendAmount);\n    }\n\n    emit Staked(_account, _amount, lockAmount, boostedAmount);\n  }\n\n  // Withdraw all currently locked tokens where the unlock time has passed\n  function _processExpiredLocks(\n    address _account,\n    bool _relock,\n    uint256 _spendRatio,\n    address _withdrawTo,\n    address _rewardAddress,\n    uint256 _checkDelay\n  ) internal updateReward(_account) {\n    LockedBalance[] storage locks = userLocks[_account];\n    Balances storage userBalance = balances[_account];\n    uint112 locked;\n    uint112 boostedAmount;\n    uint256 length = locks.length;\n    uint256 reward = 0;\n\n    if (isShutdown || locks[length - 1].unlockTime <= block.timestamp.sub(_checkDelay)) {\n      //if time is beyond last lock, can just bundle everything together\n      locked = userBalance.locked;\n      boostedAmount = userBalance.boosted;\n\n      //dont delete, just set next index\n      userBalance.nextUnlockIndex = length.to32();\n\n      //check for kick reward\n      //this wont have the exact reward rate that you would get if looped through\n      //but this section is supposed to be for quick and easy low gas processing of all locks\n      //we'll assume that if the reward was good enough someone would have processed at an earlier epoch\n      if (_checkDelay > 0) {\n        reward = _getDelayAdjustedReward(_checkDelay, locks[length - 1]);\n      }\n    } else {\n      //use a processed index(nextUnlockIndex) to not loop as much\n      //deleting does not change array length\n      uint32 nextUnlockIndex = userBalance.nextUnlockIndex;\n      for (uint256 i = nextUnlockIndex; i < length; i++) {\n        //unlock time must be less or equal to time\n        if (locks[i].unlockTime > block.timestamp.sub(_checkDelay)) break;\n\n        //add to cumulative amounts\n        locked = locked.add(locks[i].amount);\n        boostedAmount = boostedAmount.add(locks[i].boosted);\n\n        //check for kick reward\n        //each epoch over due increases reward\n        if (_checkDelay > 0) {\n          reward = reward.add(_getDelayAdjustedReward(_checkDelay, locks[i]));\n        }\n        //set next unlock index\n        nextUnlockIndex++;\n      }\n      //update next unlock index\n      userBalance.nextUnlockIndex = nextUnlockIndex;\n    }\n    require(locked > 0, \"no exp locks\");\n\n    //update user balances and total supplies\n    userBalance.locked = userBalance.locked.sub(locked);\n    userBalance.boosted = userBalance.boosted.sub(boostedAmount);\n    lockedSupply = lockedSupply.sub(locked);\n    boostedSupply = boostedSupply.sub(boostedAmount);\n\n    //send process incentive\n    if (reward > 0) {\n      //if theres a reward(kicked), it will always be a withdraw only\n\n      //reduce return amount by the kick reward\n      locked = locked.sub(reward.to112());\n\n      //transfer reward\n      stakingToken.safeTransfer(_rewardAddress, reward);\n\n      emit KickReward(_rewardAddress, _account, reward);\n    }\n\n    //relock or return to user\n    if (_relock) {\n      _lock(_withdrawTo, locked, _spendRatio);\n      emit Relocked(_account, locked);\n    } else {\n      stakingToken.safeTransfer(_withdrawTo, locked);\n      emit Withdrawn(_account, locked);\n    }\n  }\n\n  function _getDelayAdjustedReward(uint256 _checkDelay, LockedBalance storage lockedBalance)\n    internal\n    view\n    returns (uint256)\n  {\n    uint256 currentEpoch = block.timestamp.sub(_checkDelay).div(rewardsDuration).mul(rewardsDuration);\n    uint256 epochsover = currentEpoch.sub(uint256(lockedBalance.unlockTime)).div(rewardsDuration);\n    uint256 rRate = Math.min(kickRewardPerEpoch.mul(epochsover + 1), denominator);\n    return uint256(lockedBalance.amount).mul(rRate).div(denominator);\n  }\n\n  // Withdraw/relock all currently locked tokens where the unlock time has passed\n  function processExpiredLocks(\n    bool _relock,\n    uint256 _spendRatio,\n    address _withdrawTo\n  ) external nonReentrant {\n    _processExpiredLocks(msg.sender, _relock, _spendRatio, _withdrawTo, msg.sender, 0);\n  }\n\n  // Withdraw/relock all currently locked tokens where the unlock time has passed\n  function processExpiredLocks(bool _relock) external nonReentrant {\n    _processExpiredLocks(msg.sender, _relock, 0, msg.sender, msg.sender, 0);\n  }\n\n  function kickExpiredLocks(address _account) external nonReentrant {\n    //allow kick after grace period of 'kickRewardEpochDelay'\n    _processExpiredLocks(_account, false, 0, _account, msg.sender, rewardsDuration.mul(kickRewardEpochDelay));\n  }\n\n  // Claim all pending rewards\n  function getReward(address _account) public nonReentrant updateReward(_account) {\n    for (uint256 i; i < rewardTokens.length; i++) {\n      address _rewardsToken = rewardTokens[i];\n      uint256 reward = rewards[_account][_rewardsToken];\n      if (reward > 0) {\n        rewards[_account][_rewardsToken] = 0;\n        uint256 payout = reward.div(uint256(10));\n        uint256 escrowed = payout.mul(uint256(9));\n        IERC20(_rewardsToken).safeTransfer(_account, payout);\n        IRewardsEscrow(rewardsEscrow).lock(_account, escrowed, escrowDuration);\n        emit RewardPaid(_account, _rewardsToken, reward);\n      }\n    }\n  }\n\n  /* ========== RESTRICTED FUNCTIONS ========== */\n\n  function _notifyReward(address _rewardsToken, uint256 _reward) internal {\n    Reward storage rdata = rewardData[_rewardsToken];\n\n    if (block.timestamp >= rdata.periodFinish) {\n      rdata.rewardRate = _reward.div(rewardsDuration).to208();\n    } else {\n      uint256 remaining = uint256(rdata.periodFinish).sub(block.timestamp);\n      uint256 leftover = remaining.mul(rdata.rewardRate);\n      rdata.rewardRate = _reward.add(leftover).div(rewardsDuration).to208();\n    }\n\n    rdata.lastUpdateTime = block.timestamp.to40();\n    rdata.periodFinish = block.timestamp.add(rewardsDuration).to40();\n  }\n\n  function notifyRewardAmount(address _rewardsToken, uint256 _reward) external updateReward(address(0)) {\n    require(rewardDistributors[_rewardsToken][msg.sender], \"not authorized\");\n    require(_reward > 0, \"No reward\");\n\n    _notifyReward(_rewardsToken, _reward);\n\n    // handle the transfer of reward tokens via `transferFrom` to reduce the number\n    // of transactions required and ensure correctness of the _reward amount\n    IERC20(_rewardsToken).safeTransferFrom(msg.sender, address(this), _reward);\n\n    emit RewardAdded(_rewardsToken, _reward);\n  }\n\n  function setRewardsEscrow(address _rewardsEscrow) external onlyOwner {\n    emit RewardsEscrowUpdated(address(rewardsEscrow), _rewardsEscrow);\n    rewardsEscrow = IRewardsEscrow(_rewardsEscrow);\n  }\n\n  // Added to support recovering LP Rewards from other systems such as BAL to be distributed to holders\n  function recoverERC20(address _tokenAddress, uint256 _tokenAmount) external onlyOwner {\n    require(_tokenAddress != address(stakingToken), \"Cannot withdraw staking token\");\n    require(rewardData[_tokenAddress].lastUpdateTime == 0, \"Cannot withdraw reward token\");\n    IERC20(_tokenAddress).safeTransfer(owner(), _tokenAmount);\n    emit Recovered(_tokenAddress, _tokenAmount);\n  }\n\n  /* ========== MODIFIERS ========== */\n\n  modifier updateReward(address _account) {\n    {\n      //stack too deep\n      Balances storage userBalance = balances[_account];\n      uint256 boostedBal = userBalance.boosted;\n      for (uint256 i = 0; i < rewardTokens.length; i++) {\n        address token = rewardTokens[i];\n        rewardData[token].rewardPerTokenStored = _rewardPerToken(token).to208();\n        rewardData[token].lastUpdateTime = _lastTimeRewardApplicable(rewardData[token].periodFinish).to40();\n        if (_account != address(0)) {\n          //check if reward is boostable or not. use boosted or locked balance accordingly\n          rewards[_account][token] = _earned(\n            _account,\n            token,\n            rewardData[token].useBoost ? boostedBal : userBalance.locked\n          );\n          userRewardPerTokenPaid[_account][token] = rewardData[token].rewardPerTokenStored;\n        }\n      }\n    }\n    _;\n  }\n\n  /* ========== EVENTS ========== */\n  event RewardAdded(address indexed _token, uint256 _reward);\n  event RewardsEscrowUpdated(address _previous, address _new);\n  event Staked(address indexed _user, uint256 _paidAmount, uint256 _lockedAmount, uint256 _boostedAmount);\n  event Withdrawn(address indexed _user, uint256 _amount);\n  event Relocked(address indexed _user, uint256 _amount);\n  event EscrowDurationUpdated(uint256 _previousDuration, uint256 _newDuration);\n  event KickReward(address indexed _user, address indexed _kicked, uint256 _reward);\n  event RewardPaid(address indexed _user, address indexed _rewardsToken, uint256 _reward);\n  event Recovered(address _token, uint256 _amount);\n}\n"},"contracts/core/interfaces/IRewardsEscrow.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\n// Docgen-SOLC: 0.8.0\n\npragma solidity >0.6.0;\n\ninterface IRewardsEscrow {\n  function lock(\n    address _address,\n    uint256 _amount,\n    uint256 duration\n  ) external;\n\n  function addAuthorizedContract(address _staking) external;\n\n  function removeAuthorizedContract(address _staking) external;\n}\n"},"contracts/core/libraries/BoringMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// Docgen-SOLC: 0.6.12\n\npragma solidity 0.6.12;\n\n/// @notice A library for performing overflow-/underflow-safe math,\n/// updated with awesomeness from of DappHub (https://github.com/dapphub/ds-math).\nlibrary BoringMath {\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    require((c = a + b) >= b, \"BoringMath: Add Overflow\");\n  }\n\n  function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    require((c = a - b) <= a, \"BoringMath: Underflow\");\n  }\n\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    require(b == 0 || (c = a * b) / b == a, \"BoringMath: Mul Overflow\");\n  }\n\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b > 0, \"BoringMath: division by zero\");\n    return a / b;\n  }\n\n  function to128(uint256 a) internal pure returns (uint128 c) {\n    require(a <= uint128(-1), \"BoringMath: uint128 Overflow\");\n    c = uint128(a);\n  }\n\n  function to64(uint256 a) internal pure returns (uint64 c) {\n    require(a <= uint64(-1), \"BoringMath: uint64 Overflow\");\n    c = uint64(a);\n  }\n\n  function to32(uint256 a) internal pure returns (uint32 c) {\n    require(a <= uint32(-1), \"BoringMath: uint32 Overflow\");\n    c = uint32(a);\n  }\n\n  function to40(uint256 a) internal pure returns (uint40 c) {\n    require(a <= uint40(-1), \"BoringMath: uint40 Overflow\");\n    c = uint40(a);\n  }\n\n  function to112(uint256 a) internal pure returns (uint112 c) {\n    require(a <= uint112(-1), \"BoringMath: uint112 Overflow\");\n    c = uint112(a);\n  }\n\n  function to224(uint256 a) internal pure returns (uint224 c) {\n    require(a <= uint224(-1), \"BoringMath: uint224 Overflow\");\n    c = uint224(a);\n  }\n\n  function to208(uint256 a) internal pure returns (uint208 c) {\n    require(a <= uint208(-1), \"BoringMath: uint208 Overflow\");\n    c = uint208(a);\n  }\n\n  function to216(uint256 a) internal pure returns (uint216 c) {\n    require(a <= uint216(-1), \"BoringMath: uint216 Overflow\");\n    c = uint216(a);\n  }\n}\n\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint128.\nlibrary BoringMath128 {\n  function add(uint128 a, uint128 b) internal pure returns (uint128 c) {\n    require((c = a + b) >= b, \"BoringMath: Add Overflow\");\n  }\n\n  function sub(uint128 a, uint128 b) internal pure returns (uint128 c) {\n    require((c = a - b) <= a, \"BoringMath: Underflow\");\n  }\n}\n\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint64.\nlibrary BoringMath64 {\n  function add(uint64 a, uint64 b) internal pure returns (uint64 c) {\n    require((c = a + b) >= b, \"BoringMath: Add Overflow\");\n  }\n\n  function sub(uint64 a, uint64 b) internal pure returns (uint64 c) {\n    require((c = a - b) <= a, \"BoringMath: Underflow\");\n  }\n}\n\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint32.\nlibrary BoringMath32 {\n  function add(uint32 a, uint32 b) internal pure returns (uint32 c) {\n    require((c = a + b) >= b, \"BoringMath: Add Overflow\");\n  }\n\n  function sub(uint32 a, uint32 b) internal pure returns (uint32 c) {\n    require((c = a - b) <= a, \"BoringMath: Underflow\");\n  }\n\n  function mul(uint32 a, uint32 b) internal pure returns (uint32 c) {\n    require(b == 0 || (c = a * b) / b == a, \"BoringMath: Mul Overflow\");\n  }\n\n  function div(uint32 a, uint32 b) internal pure returns (uint32) {\n    require(b > 0, \"BoringMath: division by zero\");\n    return a / b;\n  }\n}\n\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint112.\nlibrary BoringMath112 {\n  function add(uint112 a, uint112 b) internal pure returns (uint112 c) {\n    require((c = a + b) >= b, \"BoringMath: Add Overflow\");\n  }\n\n  function sub(uint112 a, uint112 b) internal pure returns (uint112 c) {\n    require((c = a - b) <= a, \"BoringMath: Underflow\");\n  }\n\n  function mul(uint112 a, uint112 b) internal pure returns (uint112 c) {\n    require(b == 0 || (c = a * b) / b == a, \"BoringMath: Mul Overflow\");\n  }\n\n  function div(uint112 a, uint112 b) internal pure returns (uint112) {\n    require(b > 0, \"BoringMath: division by zero\");\n    return a / b;\n  }\n}\n\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint224.\nlibrary BoringMath224 {\n  function add(uint224 a, uint224 b) internal pure returns (uint224 c) {\n    require((c = a + b) >= b, \"BoringMath: Add Overflow\");\n  }\n\n  function sub(uint224 a, uint224 b) internal pure returns (uint224 c) {\n    require((c = a - b) <= a, \"BoringMath: Underflow\");\n  }\n\n  function mul(uint224 a, uint224 b) internal pure returns (uint224 c) {\n    require(b == 0 || (c = a * b) / b == a, \"BoringMath: Mul Overflow\");\n  }\n\n  function div(uint224 a, uint224 b) internal pure returns (uint224) {\n    require(b > 0, \"BoringMath: division by zero\");\n    return a / b;\n  }\n}\n"},"openzeppelin-v3/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../utils/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"},"openzeppelin-v3/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow, so we distribute\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\n    }\n}\n"},"openzeppelin-v3/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n"},"openzeppelin-v3/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"},"openzeppelin-v3/token/ERC20/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"},"openzeppelin-v3/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2 <0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"openzeppelin-v3/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"},"openzeppelin-v3/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor () internal {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and make it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":100},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"contracts/core/dao/PopLocker.sol":{"ast":{"absolutePath":"contracts/core/dao/PopLocker.sol","exportedSymbols":{"PopLocker":[2569]},"id":2570,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"absolutePath":"openzeppelin-v3/token/ERC20/IERC20.sol","file":"openzeppelin-v3/token/ERC20/IERC20.sol","id":1,"nodeType":"ImportDirective","scope":2570,"sourceUnit":3890,"src":"60:48:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-v3/token/ERC20/SafeERC20.sol","file":"openzeppelin-v3/token/ERC20/SafeERC20.sol","id":2,"nodeType":"ImportDirective","scope":2570,"sourceUnit":4103,"src":"109:51:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-v3/math/Math.sol","file":"openzeppelin-v3/math/Math.sol","id":3,"nodeType":"ImportDirective","scope":2570,"sourceUnit":3457,"src":"161:39:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-v3/access/Ownable.sol","file":"openzeppelin-v3/access/Ownable.sol","id":4,"nodeType":"ImportDirective","scope":2570,"sourceUnit":3384,"src":"201:44:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-v3/utils/ReentrancyGuard.sol","file":"openzeppelin-v3/utils/ReentrancyGuard.sol","id":5,"nodeType":"ImportDirective","scope":2570,"sourceUnit":4462,"src":"246:51:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/core/libraries/BoringMath.sol","file":"../libraries/BoringMath.sol","id":6,"nodeType":"ImportDirective","scope":2570,"sourceUnit":3274,"src":"299:37:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/core/interfaces/IRewardsEscrow.sol","file":"../interfaces/IRewardsEscrow.sol","id":7,"nodeType":"ImportDirective","scope":2570,"sourceUnit":2592,"src":"337:42:0","symbolAliases":[],"unitAlias":""},{"id":8,"literals":["solidity","0.6",".12"],"nodeType":"PragmaDirective","src":"381:23:0"},{"id":9,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"405:33:0"},{"abstract":false,"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":10,"name":"ReentrancyGuard","nodeType":"UserDefinedTypeName","referencedDeclaration":4461,"src":"785:15:0","typeDescriptions":{"typeIdentifier":"t_contract$_ReentrancyGuard_$4461","typeString":"contract ReentrancyGuard"}},"id":11,"nodeType":"InheritanceSpecifier","src":"785:15:0"},{"arguments":null,"baseName":{"contractScope":null,"id":12,"name":"Ownable","nodeType":"UserDefinedTypeName","referencedDeclaration":3383,"src":"802:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Ownable_$3383","typeString":"contract Ownable"}},"id":13,"nodeType":"InheritanceSpecifier","src":"802:7:0"}],"contractDependencies":[3383,4421,4461],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":2569,"linearizedBaseContracts":[2569,3383,4421,4461],"name":"PopLocker","nodeType":"ContractDefinition","nodes":[{"id":16,"libraryName":{"contractScope":null,"id":14,"name":"BoringMath","nodeType":"UserDefinedTypeName","referencedDeclaration":2896,"src":"820:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_BoringMath_$2896","typeString":"library BoringMath"}},"nodeType":"UsingForDirective","src":"814:29:0","typeName":{"id":15,"name":"uint256","nodeType":"ElementaryTypeName","src":"835:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":19,"libraryName":{"contractScope":null,"id":17,"name":"BoringMath224","nodeType":"UserDefinedTypeName","referencedDeclaration":3273,"src":"852:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_BoringMath224_$3273","typeString":"library BoringMath224"}},"nodeType":"UsingForDirective","src":"846:32:0","typeName":{"id":18,"name":"uint224","nodeType":"ElementaryTypeName","src":"870:7:0","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}},{"id":22,"libraryName":{"contractScope":null,"id":20,"name":"BoringMath112","nodeType":"UserDefinedTypeName","referencedDeclaration":3178,"src":"887:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_BoringMath112_$3178","typeString":"library BoringMath112"}},"nodeType":"UsingForDirective","src":"881:32:0","typeName":{"id":21,"name":"uint112","nodeType":"ElementaryTypeName","src":"905:7:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}},{"id":25,"libraryName":{"contractScope":null,"id":23,"name":"BoringMath32","nodeType":"UserDefinedTypeName","referencedDeclaration":3083,"src":"922:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_BoringMath32_$3083","typeString":"library BoringMath32"}},"nodeType":"UsingForDirective","src":"916:30:0","typeName":{"id":24,"name":"uint32","nodeType":"ElementaryTypeName","src":"939:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}},{"id":28,"libraryName":{"contractScope":null,"id":26,"name":"SafeERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":4102,"src":"955:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$4102","typeString":"library SafeERC20"}},"nodeType":"UsingForDirective","src":"949:27:0","typeName":{"contractScope":null,"id":27,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":3889,"src":"969:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}}},{"canonicalName":"PopLocker.Reward","id":39,"members":[{"constant":false,"id":30,"mutability":"mutable","name":"useBoost","nodeType":"VariableDeclaration","overrides":null,"scope":39,"src":"1047:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":29,"name":"bool","nodeType":"ElementaryTypeName","src":"1047:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":32,"mutability":"mutable","name":"periodFinish","nodeType":"VariableDeclaration","overrides":null,"scope":39,"src":"1066:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":31,"name":"uint40","nodeType":"ElementaryTypeName","src":"1066:6:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"value":null,"visibility":"internal"},{"constant":false,"id":34,"mutability":"mutable","name":"rewardRate","nodeType":"VariableDeclaration","overrides":null,"scope":39,"src":"1091:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":33,"name":"uint208","nodeType":"ElementaryTypeName","src":"1091:7:0","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"value":null,"visibility":"internal"},{"constant":false,"id":36,"mutability":"mutable","name":"lastUpdateTime","nodeType":"VariableDeclaration","overrides":null,"scope":39,"src":"1115:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":35,"name":"uint40","nodeType":"ElementaryTypeName","src":"1115:6:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"value":null,"visibility":"internal"},{"constant":false,"id":38,"mutability":"mutable","name":"rewardPerTokenStored","nodeType":"VariableDeclaration","overrides":null,"scope":39,"src":"1142:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":37,"name":"uint208","nodeType":"ElementaryTypeName","src":"1142:7:0","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"value":null,"visibility":"internal"}],"name":"Reward","nodeType":"StructDefinition","scope":2569,"src":"1027:148:0","visibility":"public"},{"canonicalName":"PopLocker.Balances","id":46,"members":[{"constant":false,"id":41,"mutability":"mutable","name":"locked","nodeType":"VariableDeclaration","overrides":null,"scope":46,"src":"1200:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":40,"name":"uint112","nodeType":"ElementaryTypeName","src":"1200:7:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"value":null,"visibility":"internal"},{"constant":false,"id":43,"mutability":"mutable","name":"boosted","nodeType":"VariableDeclaration","overrides":null,"scope":46,"src":"1220:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":42,"name":"uint112","nodeType":"ElementaryTypeName","src":"1220:7:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"value":null,"visibility":"internal"},{"constant":false,"id":45,"mutability":"mutable","name":"nextUnlockIndex","nodeType":"VariableDeclaration","overrides":null,"scope":46,"src":"1241:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":44,"name":"uint32","nodeType":"ElementaryTypeName","src":"1241:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":null,"visibility":"internal"}],"name":"Balances","nodeType":"StructDefinition","scope":2569,"src":"1178:90:0","visibility":"public"},{"canonicalName":"PopLocker.LockedBalance","id":53,"members":[{"constant":false,"id":48,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","overrides":null,"scope":53,"src":"1298:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":47,"name":"uint112","nodeType":"ElementaryTypeName","src":"1298:7:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"value":null,"visibility":"internal"},{"constant":false,"id":50,"mutability":"mutable","name":"boosted","nodeType":"VariableDeclaration","overrides":null,"scope":53,"src":"1318:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":49,"name":"uint112","nodeType":"ElementaryTypeName","src":"1318:7:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"value":null,"visibility":"internal"},{"constant":false,"id":52,"mutability":"mutable","name":"unlockTime","nodeType":"VariableDeclaration","overrides":null,"scope":53,"src":"1339:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":51,"name":"uint32","nodeType":"ElementaryTypeName","src":"1339:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":null,"visibility":"internal"}],"name":"LockedBalance","nodeType":"StructDefinition","scope":2569,"src":"1271:90:0","visibility":"public"},{"canonicalName":"PopLocker.EarnedData","id":58,"members":[{"constant":false,"id":55,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","overrides":null,"scope":58,"src":"1388:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":54,"name":"address","nodeType":"ElementaryTypeName","src":"1388:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":57,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","overrides":null,"scope":58,"src":"1407:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":56,"name":"uint256","nodeType":"ElementaryTypeName","src":"1407:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"name":"EarnedData","nodeType":"StructDefinition","scope":2569,"src":"1364:62:0","visibility":"public"},{"canonicalName":"PopLocker.Epoch","id":63,"members":[{"constant":false,"id":60,"mutability":"mutable","name":"supply","nodeType":"VariableDeclaration","overrides":null,"scope":63,"src":"1448:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":59,"name":"uint224","nodeType":"ElementaryTypeName","src":"1448:7:0","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"value":null,"visibility":"internal"},{"constant":false,"id":62,"mutability":"mutable","name":"date","nodeType":"VariableDeclaration","overrides":null,"scope":63,"src":"1491:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":61,"name":"uint32","nodeType":"ElementaryTypeName","src":"1491:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":null,"visibility":"internal"}],"name":"Epoch","nodeType":"StructDefinition","scope":2569,"src":"1429:97:0","visibility":"public"},{"constant":false,"functionSelector":"72f702f3","id":65,"mutability":"mutable","name":"stakingToken","nodeType":"VariableDeclaration","overrides":null,"scope":2569,"src":"1550:26:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"},"typeName":{"contractScope":null,"id":64,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":3889,"src":"1550:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},"value":null,"visibility":"public"},{"constant":false,"functionSelector":"f2157932","id":67,"mutability":"mutable","name":"rewardsEscrow","nodeType":"VariableDeclaration","overrides":null,"scope":2569,"src":"1580:35:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardsEscrow_$2591","typeString":"contract IRewardsEscrow"},"typeName":{"contractScope":null,"id":66,"name":"IRewardsEscrow","nodeType":"UserDefinedTypeName","referencedDeclaration":2591,"src":"1580:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardsEscrow_$2591","typeString":"contract IRewardsEscrow"}},"value":null,"visibility":"public"},{"constant":false,"functionSelector":"7bb7bed1","id":70,"mutability":"mutable","name":"rewardTokens","nodeType":"VariableDeclaration","overrides":null,"scope":2569,"src":"1632:29:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"1632:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":69,"length":null,"nodeType":"ArrayTypeName","src":"1632:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"public"},{"constant":false,"functionSelector":"48e5d9f8","id":74,"mutability":"mutable","name":"rewardData","nodeType":"VariableDeclaration","overrides":null,"scope":2569,"src":"1665:44:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Reward_$39_storage_$","typeString":"mapping(address => struct PopLocker.Reward)"},"typeName":{"id":73,"keyType":{"id":71,"name":"address","nodeType":"ElementaryTypeName","src":"1673:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1665:26:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Reward_$39_storage_$","typeString":"mapping(address => struct PopLocker.Reward)"},"valueType":{"contractScope":null,"id":72,"name":"Reward","nodeType":"UserDefinedTypeName","referencedDeclaration":39,"src":"1684:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$39_storage_ptr","typeString":"struct PopLocker.Reward"}}},"value":null,"visibility":"public"},{"constant":false,"functionSelector":"57c2c2ba","id":76,"mutability":"mutable","name":"escrowDuration","nodeType":"VariableDeclaration","overrides":null,"scope":2569,"src":"1772:29:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":75,"name":"uint256","nodeType":"ElementaryTypeName","src":"1772:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"public"},{"constant":true,"functionSelector":"386a9525","id":79,"mutability":"constant","name":"rewardsDuration","nodeType":"VariableDeclaration","overrides":null,"scope":2569,"src":"1851:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77,"name":"uint256","nodeType":"ElementaryTypeName","src":"1851:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"hexValue":"37","id":78,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1893:6:0","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_604800_by_1","typeString":"int_const 604800"},"value":"7"},"visibility":"public"},{"constant":true,"functionSelector":"04554443","id":84,"mutability":"constant","name":"lockDuration","nodeType":"VariableDeclaration","overrides":null,"scope":2569,"src":"1948:59:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":80,"name":"uint256","nodeType":"ElementaryTypeName","src":"1948:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":83,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":81,"name":"rewardsDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"1987:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"hexValue":"3132","id":82,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2005:2:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"1987:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"39fc9713","id":90,"mutability":"mutable","name":"rewardDistributors","nodeType":"VariableDeclaration","overrides":null,"scope":2569,"src":"2075:70:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":89,"keyType":{"id":85,"name":"address","nodeType":"ElementaryTypeName","src":"2083:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2075:44:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":88,"keyType":{"id":86,"name":"address","nodeType":"ElementaryTypeName","src":"2102:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2094:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":87,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"value":null,"visibility":"public"},{"constant":false,"functionSelector":"7035ab98","id":96,"mutability":"mutable","name":"userRewardPerTokenPaid","nodeType":"VariableDeclaration","overrides":null,"scope":2569,"src":"2186:77:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":95,"keyType":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2194:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2186:47:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":94,"keyType":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2213:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2205:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":93,"name":"uint256","nodeType":"ElementaryTypeName","src":"2224:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"value":null,"visibility":"public"},{"constant":false,"functionSelector":"e70b9e27","id":102,"mutability":"mutable","name":"rewards","nodeType":"VariableDeclaration","overrides":null,"scope":2569,"src":"2267:62:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":101,"keyType":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2275:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2267:47:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":100,"keyType":{"id":98,"name":"address","nodeType":"ElementaryTypeName","src":"2294:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2286:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":99,"name":"uint256","nodeType":"ElementaryTypeName","src":"2305:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"value":null,"visibility":"public"},{"constant":false,"functionSelector":"ca5c7b91","id":104,"mutability":"mutable","name":"lockedSupply","nodeType":"VariableDeclaration","overrides":null,"scope":2569,"src":"2358:27:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103,"name":"uint256","nodeType":"ElementaryTypeName","src":"2358:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"public"},{"constant":false,"functionSelector":"75aadf61","id":106,"mutability":"mutable","name":"boostedSupply","nodeType":"VariableDeclaration","overrides":null,"scope":2569,"src":"2389:28:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":105,"name":"uint256","nodeType":"ElementaryTypeName","src":"2389:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"public"},{"constant":false,"functionSelector":"c6b61e4c","id":109,"mutability":"mutable","name":"epochs","nodeType":"VariableDeclaration","overrides":null,"scope":2569,"src":"2421:21:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Epoch_$63_storage_$dyn_storage","typeString":"struct PopLocker.Epoch[]"},"typeName":{"baseType":{"contractScope":null,"id":107,"name":"Epoch","nodeType":"UserDefinedTypeName","referencedDeclaration":63,"src":"2421:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Epoch_$63_storage_ptr","typeString":"struct PopLocker.Epoch"}},"id":108,"length":null,"nodeType":"ArrayTypeName","src":"2421:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Epoch_$63_storage_$dyn_storage_ptr","typeString":"struct PopLocker.Epoch[]"}},"value":null,"visibility":"public"},{"constant":false,"functionSelector":"27e235e3","id":113,"mutability":"mutable","name":"balances","nodeType":"VariableDeclaration","overrides":null,"scope":2569,"src":"2477:44:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Balances_$46_storage_$","typeString":"mapping(address => struct PopLocker.Balances)"},"typeName":{"id":112,"keyType":{"id":110,"name":"address","nodeType":"ElementaryTypeName","src":"2485:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2477:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Balances_$46_storage_$","typeString":"mapping(address => struct PopLocker.Balances)"},"valueType":{"contractScope":null,"id":111,"name":"Balances","nodeType":"UserDefinedTypeName","referencedDeclaration":46,"src":"2496:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances"}}},"value":null,"visibility":"public"},{"constant":false,"functionSelector":"aa33fedb","id":118,"mutability":"mutable","name":"userLocks","nodeType":"VariableDeclaration","overrides":null,"scope":2569,"src":"2525:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_$","typeString":"mapping(address => struct PopLocker.LockedBalance[])"},"typeName":{"id":117,"keyType":{"id":114,"name":"address","nodeType":"ElementaryTypeName","src":"2533:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2525:35:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_$","typeString":"mapping(address => struct PopLocker.LockedBalance[])"},"valueType":{"baseType":{"contractScope":null,"id":115,"name":"LockedBalance","nodeType":"UserDefinedTypeName","referencedDeclaration":53,"src":"2544:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage_ptr","typeString":"struct PopLocker.LockedBalance"}},"id":116,"length":null,"nodeType":"ArrayTypeName","src":"2544:15:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_ptr","typeString":"struct PopLocker.LockedBalance[]"}}},"value":null,"visibility":"public"},{"constant":false,"functionSelector":"a98e05bb","id":120,"mutability":"mutable","name":"boostPayment","nodeType":"VariableDeclaration","overrides":null,"scope":2569,"src":"2592:27:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":119,"name":"address","nodeType":"ElementaryTypeName","src":"2592:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"public"},{"constant":false,"functionSelector":"b187bc22","id":123,"mutability":"mutable","name":"maximumBoostPayment","nodeType":"VariableDeclaration","overrides":null,"scope":2569,"src":"2623:38:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":121,"name":"uint256","nodeType":"ElementaryTypeName","src":"2623:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"hexValue":"30","id":122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2660:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"functionSelector":"2e9564e4","id":126,"mutability":"mutable","name":"boostRate","nodeType":"VariableDeclaration","overrides":null,"scope":2569,"src":"2665:32:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":124,"name":"uint256","nodeType":"ElementaryTypeName","src":"2665:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"hexValue":"3130303030","id":125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2692:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"public"},{"constant":false,"functionSelector":"7bd48c7c","id":129,"mutability":"mutable","name":"nextMaximumBoostPayment","nodeType":"VariableDeclaration","overrides":null,"scope":2569,"src":"2701:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":127,"name":"uint256","nodeType":"ElementaryTypeName","src":"2701:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"hexValue":"30","id":128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2742:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"functionSelector":"b5ed7a66","id":132,"mutability":"mutable","name":"nextBoostRate","nodeType":"VariableDeclaration","overrides":null,"scope":2569,"src":"2747:36:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"2747:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"hexValue":"3130303030","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2778:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"public"},{"constant":true,"functionSelector":"96ce0795","id":135,"mutability":"constant","name":"denominator","nodeType":"VariableDeclaration","overrides":null,"scope":2569,"src":"2787:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":133,"name":"uint256","nodeType":"ElementaryTypeName","src":"2787:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"hexValue":"3130303030","id":134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2825:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"public"},{"constant":false,"functionSelector":"9bdc7467","id":138,"mutability":"mutable","name":"kickRewardPerEpoch","nodeType":"VariableDeclaration","overrides":null,"scope":2569,"src":"2850:39:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":136,"name":"uint256","nodeType":"ElementaryTypeName","src":"2850:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"hexValue":"313030","id":137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2886:3:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"public"},{"constant":false,"functionSelector":"e432488d","id":141,"mutability":"mutable","name":"kickRewardEpochDelay","nodeType":"VariableDeclaration","overrides":null,"scope":2569,"src":"2893:39:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":139,"name":"uint256","nodeType":"ElementaryTypeName","src":"2893:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"hexValue":"34","id":140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2931:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"visibility":"public"},{"constant":false,"functionSelector":"bf86d690","id":144,"mutability":"mutable","name":"isShutdown","nodeType":"VariableDeclaration","overrides":null,"scope":2569,"src":"2950:30:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":142,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":{"argumentTypes":null,"hexValue":"66616c7365","id":143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2975:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"visibility":"public"},{"constant":false,"id":146,"mutability":"mutable","name":"_name","nodeType":"VariableDeclaration","overrides":null,"scope":2569,"src":"3010:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":145,"name":"string","nodeType":"ElementaryTypeName","src":"3010:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"private"},{"constant":false,"id":148,"mutability":"mutable","name":"_symbol","nodeType":"VariableDeclaration","overrides":null,"scope":2569,"src":"3034:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":147,"name":"string","nodeType":"ElementaryTypeName","src":"3034:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"private"},{"constant":false,"id":150,"mutability":"immutable","name":"_decimals","nodeType":"VariableDeclaration","overrides":null,"scope":2569,"src":"3060:33:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":149,"name":"uint8","nodeType":"ElementaryTypeName","src":"3060:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"private"},{"body":{"id":206,"nodeType":"Block","src":"3223:341:0","statements":[{"expression":{"argumentTypes":null,"id":161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":159,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"3229:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"566f7465204c6f636b656420504f5020546f6b656e","id":160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3237:23:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_379ecf2f2467425c9a6bca71051f76abccbfe63a8428cd9108302d30f824cfe2","typeString":"literal_string \"Vote Locked POP Token\""},"value":"Vote Locked POP Token"},"src":"3229:31:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":162,"nodeType":"ExpressionStatement","src":"3229:31:0"},{"expression":{"argumentTypes":null,"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":163,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"3266:7:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"766c504f50","id":164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3276:7:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_340e2d7927d160898d5a200d1f6212e76bc88f66d68dc2621a69bb136767e189","typeString":"literal_string \"vlPOP\""},"value":"vlPOP"},"src":"3266:17:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":166,"nodeType":"ExpressionStatement","src":"3266:17:0"},{"expression":{"argumentTypes":null,"id":169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":167,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"3289:9:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"3138","id":168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3301:2:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"3289:14:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":170,"nodeType":"ExpressionStatement","src":"3289:14:0"},{"expression":{"argumentTypes":null,"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":171,"name":"stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"3310:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":172,"name":"_stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"3325:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},"src":"3310:28:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},"id":174,"nodeType":"ExpressionStatement","src":"3310:28:0"},{"expression":{"argumentTypes":null,"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":175,"name":"rewardsEscrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"3344:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardsEscrow_$2591","typeString":"contract IRewardsEscrow"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":176,"name":"_rewardsEscrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"3360:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardsEscrow_$2591","typeString":"contract IRewardsEscrow"}},"src":"3344:30:0","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardsEscrow_$2591","typeString":"contract IRewardsEscrow"}},"id":178,"nodeType":"ExpressionStatement","src":"3344:30:0"},{"expression":{"argumentTypes":null,"id":181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":179,"name":"escrowDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":76,"src":"3380:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"333635","id":180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3397:8:0","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"},"value":"365"},"src":"3380:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":182,"nodeType":"ExpressionStatement","src":"3380:25:0"},{"assignments":[184],"declarations":[{"constant":false,"id":184,"mutability":"mutable","name":"currentEpoch","nodeType":"VariableDeclaration","overrides":null,"scope":206,"src":"3412:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":183,"name":"uint256","nodeType":"ElementaryTypeName","src":"3412:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":193,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":191,"name":"rewardsDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3476:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":188,"name":"rewardsDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3455:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":185,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3435:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3435:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":2687,"src":"3435:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3435:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"3435:40:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3435:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3412:80:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3526:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":201,"name":"currentEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"3542:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3535:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":199,"name":"uint32","nodeType":"ElementaryTypeName","src":"3535:6:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3535:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":197,"name":"Epoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"3510:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Epoch_$63_storage_ptr_$","typeString":"type(struct PopLocker.Epoch storage pointer)"}},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["supply","date"],"nodeType":"FunctionCall","src":"3510:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Epoch_$63_memory_ptr","typeString":"struct PopLocker.Epoch memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Epoch_$63_memory_ptr","typeString":"struct PopLocker.Epoch memory"}],"expression":{"argumentTypes":null,"id":194,"name":"epochs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"3498:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Epoch_$63_storage_$dyn_storage","typeString":"struct PopLocker.Epoch storage ref[] storage ref"}},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3498:11:0","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_struct$_Epoch_$63_storage_$returns$__$","typeString":"function (struct PopLocker.Epoch storage ref)"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3498:61:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":205,"nodeType":"ExpressionStatement","src":"3498:61:0"}]},"documentation":null,"id":207,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[],"id":157,"modifierName":{"argumentTypes":null,"id":156,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"3213:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Ownable_$3383_$","typeString":"type(contract Ownable)"}},"nodeType":"ModifierInvocation","src":"3213:9:0"}],"name":"","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":152,"mutability":"mutable","name":"_stakingToken","nodeType":"VariableDeclaration","overrides":null,"scope":207,"src":"3153:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"},"typeName":{"contractScope":null,"id":151,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":3889,"src":"3153:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},"value":null,"visibility":"internal"},{"constant":false,"id":154,"mutability":"mutable","name":"_rewardsEscrow","nodeType":"VariableDeclaration","overrides":null,"scope":207,"src":"3175:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardsEscrow_$2591","typeString":"contract IRewardsEscrow"},"typeName":{"contractScope":null,"id":153,"name":"IRewardsEscrow","nodeType":"UserDefinedTypeName","referencedDeclaration":2591,"src":"3175:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardsEscrow_$2591","typeString":"contract IRewardsEscrow"}},"value":null,"visibility":"internal"}],"src":"3152:53:0"},"returnParameters":{"id":158,"nodeType":"ParameterList","parameters":[],"src":"3223:0:0"},"scope":2569,"src":"3141:423:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":214,"nodeType":"Block","src":"3616:27:0","statements":[{"expression":{"argumentTypes":null,"id":212,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"3629:9:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":211,"id":213,"nodeType":"Return","src":"3622:16:0"}]},"documentation":null,"functionSelector":"313ce567","id":215,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":208,"nodeType":"ParameterList","parameters":[],"src":"3585:2:0"},"returnParameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":215,"src":"3609:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":209,"name":"uint8","nodeType":"ElementaryTypeName","src":"3609:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"}],"src":"3608:7:0"},"scope":2569,"src":"3568:75:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":222,"nodeType":"Block","src":"3699:23:0","statements":[{"expression":{"argumentTypes":null,"id":220,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"3712:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":219,"id":221,"nodeType":"Return","src":"3705:12:0"}]},"documentation":null,"functionSelector":"06fdde03","id":223,"implemented":true,"kind":"function","modifiers":[],"name":"name","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"3660:2:0"},"returnParameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":223,"src":"3684:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":217,"name":"string","nodeType":"ElementaryTypeName","src":"3684:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"3683:15:0"},"scope":2569,"src":"3647:75:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":230,"nodeType":"Block","src":"3780:25:0","statements":[{"expression":{"argumentTypes":null,"id":228,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"3793:7:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":227,"id":229,"nodeType":"Return","src":"3786:14:0"}]},"documentation":null,"functionSelector":"95d89b41","id":231,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":224,"nodeType":"ParameterList","parameters":[],"src":"3741:2:0"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":231,"src":"3765:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":225,"name":"string","nodeType":"ElementaryTypeName","src":"3765:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"3764:15:0"},"scope":2569,"src":"3726:79:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":294,"nodeType":"Block","src":"4030:357:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint40","typeString":"uint40"},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":243,"name":"rewardData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"4044:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Reward_$39_storage_$","typeString":"mapping(address => struct PopLocker.Reward storage ref)"}},"id":245,"indexExpression":{"argumentTypes":null,"id":244,"name":"_rewardsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"4055:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4044:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$39_storage","typeString":"struct PopLocker.Reward storage ref"}},"id":246,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lastUpdateTime","nodeType":"MemberAccess","referencedDeclaration":36,"src":"4044:40:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4088:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4044:45:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":242,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4036:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4036:54:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":250,"nodeType":"ExpressionStatement","src":"4036:54:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":254,"name":"_rewardsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"4114:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":251,"name":"rewardTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"4096:12:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4096:17:0","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4096:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":256,"nodeType":"ExpressionStatement","src":"4096:32:0"},{"expression":{"argumentTypes":null,"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":257,"name":"rewardData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"4134:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Reward_$39_storage_$","typeString":"mapping(address => struct PopLocker.Reward storage ref)"}},"id":259,"indexExpression":{"argumentTypes":null,"id":258,"name":"_rewardsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"4145:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4134:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$39_storage","typeString":"struct PopLocker.Reward storage ref"}},"id":260,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"lastUpdateTime","nodeType":"MemberAccess","referencedDeclaration":36,"src":"4134:40:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":263,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4184:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4184:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4177:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":261,"name":"uint40","nodeType":"ElementaryTypeName","src":"4177:6:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4177:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"4134:66:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"id":267,"nodeType":"ExpressionStatement","src":"4134:66:0"},{"expression":{"argumentTypes":null,"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":268,"name":"rewardData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"4206:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Reward_$39_storage_$","typeString":"mapping(address => struct PopLocker.Reward storage ref)"}},"id":270,"indexExpression":{"argumentTypes":null,"id":269,"name":"_rewardsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"4217:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4206:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$39_storage","typeString":"struct PopLocker.Reward storage ref"}},"id":271,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"periodFinish","nodeType":"MemberAccess","referencedDeclaration":32,"src":"4206:38:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":274,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4254:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4254:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4247:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":272,"name":"uint40","nodeType":"ElementaryTypeName","src":"4247:6:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4247:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"4206:64:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"id":278,"nodeType":"ExpressionStatement","src":"4206:64:0"},{"expression":{"argumentTypes":null,"id":284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":279,"name":"rewardData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"4276:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Reward_$39_storage_$","typeString":"mapping(address => struct PopLocker.Reward storage ref)"}},"id":281,"indexExpression":{"argumentTypes":null,"id":280,"name":"_rewardsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"4287:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4276:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$39_storage","typeString":"struct PopLocker.Reward storage ref"}},"id":282,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"useBoost","nodeType":"MemberAccess","referencedDeclaration":30,"src":"4276:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":283,"name":"_useBoost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"4313:9:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4276:46:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":285,"nodeType":"ExpressionStatement","src":"4276:46:0"},{"expression":{"argumentTypes":null,"id":292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":286,"name":"rewardDistributors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"4328:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":289,"indexExpression":{"argumentTypes":null,"id":287,"name":"_rewardsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"4347:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4328:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":290,"indexExpression":{"argumentTypes":null,"id":288,"name":"_distributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4362:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4328:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"74727565","id":291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4378:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4328:54:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":293,"nodeType":"ExpressionStatement","src":"4328:54:0"}]},"documentation":null,"functionSelector":"d3c45c76","id":295,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":240,"modifierName":{"argumentTypes":null,"id":239,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"4020:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"4020:9:0"}],"name":"addReward","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":233,"mutability":"mutable","name":"_rewardsToken","nodeType":"VariableDeclaration","overrides":null,"scope":295,"src":"3941:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":232,"name":"address","nodeType":"ElementaryTypeName","src":"3941:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":235,"mutability":"mutable","name":"_distributor","nodeType":"VariableDeclaration","overrides":null,"scope":295,"src":"3968:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":234,"name":"address","nodeType":"ElementaryTypeName","src":"3968:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":237,"mutability":"mutable","name":"_useBoost","nodeType":"VariableDeclaration","overrides":null,"scope":295,"src":"3994:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":236,"name":"bool","nodeType":"ElementaryTypeName","src":"3994:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"3935:77:0"},"returnParameters":{"id":241,"nodeType":"ParameterList","parameters":[],"src":"4030:0:0"},"scope":2569,"src":"3917:470:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":324,"nodeType":"Block","src":"4584:161:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint40","typeString":"uint40"},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":307,"name":"rewardData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"4598:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Reward_$39_storage_$","typeString":"mapping(address => struct PopLocker.Reward storage ref)"}},"id":309,"indexExpression":{"argumentTypes":null,"id":308,"name":"_rewardsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"4609:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4598:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$39_storage","typeString":"struct PopLocker.Reward storage ref"}},"id":310,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lastUpdateTime","nodeType":"MemberAccess","referencedDeclaration":36,"src":"4598:40:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4641:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4598:44:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"7265776172647320746f6b656e20646f6573206e6f74206578697374","id":313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4644:30:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a0efca447eb23e84a73a7a8c80827d52c25efea6cda868427709e2999489fed5","typeString":"literal_string \"rewards token does not exist\""},"value":"rewards token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a0efca447eb23e84a73a7a8c80827d52c25efea6cda868427709e2999489fed5","typeString":"literal_string \"rewards token does not exist\""}],"id":306,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4590:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4590:85:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":315,"nodeType":"ExpressionStatement","src":"4590:85:0"},{"expression":{"argumentTypes":null,"id":322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":316,"name":"rewardDistributors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"4681:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":319,"indexExpression":{"argumentTypes":null,"id":317,"name":"_rewardsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"4700:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4681:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":320,"indexExpression":{"argumentTypes":null,"id":318,"name":"_distributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"4715:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4681:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":321,"name":"_approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"4731:9:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4681:59:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":323,"nodeType":"ExpressionStatement","src":"4681:59:0"}]},"documentation":null,"functionSelector":"6724c910","id":325,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":304,"modifierName":{"argumentTypes":null,"id":303,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"4574:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"4574:9:0"}],"name":"approveRewardDistributor","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":297,"mutability":"mutable","name":"_rewardsToken","nodeType":"VariableDeclaration","overrides":null,"scope":325,"src":"4493:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":296,"name":"address","nodeType":"ElementaryTypeName","src":"4493:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":299,"mutability":"mutable","name":"_distributor","nodeType":"VariableDeclaration","overrides":null,"scope":325,"src":"4520:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"4520:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":301,"mutability":"mutable","name":"_approved","nodeType":"VariableDeclaration","overrides":null,"scope":325,"src":"4546:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":300,"name":"bool","nodeType":"ElementaryTypeName","src":"4546:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"4487:77:0"},"returnParameters":{"id":305,"nodeType":"ParameterList","parameters":[],"src":"4584:0:0"},"scope":2569,"src":"4454:291:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":372,"nodeType":"Block","src":"4883:310:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":337,"name":"_max","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"4897:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"hexValue":"31353030","id":338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4904:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1500_by_1","typeString":"int_const 1500"},"value":"1500"},"src":"4897:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"6f766572206d6178207061796d656e74","id":340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4910:18:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2da7091ab2bb8608539672a3678abf15e214038460a966a340c2c9a829546aa1","typeString":"literal_string \"over max payment\""},"value":"over max payment"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2da7091ab2bb8608539672a3678abf15e214038460a966a340c2c9a829546aa1","typeString":"literal_string \"over max payment\""}],"id":336,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4889:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4889:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":342,"nodeType":"ExpressionStatement","src":"4889:40:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":344,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"4953:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"hexValue":"3330303030","id":345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4961:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_30000_by_1","typeString":"int_const 30000"},"value":"30000"},"src":"4953:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"6f766572206d61782072617465","id":347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4968:15:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_40e71b179d972f5658f5ed010805e384648f30cbd3a508dfbb3557b53cb1e7d2","typeString":"literal_string \"over max rate\""},"value":"over max rate"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_40e71b179d972f5658f5ed010805e384648f30cbd3a508dfbb3557b53cb1e7d2","typeString":"literal_string \"over max rate\""}],"id":343,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4945:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4945:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":349,"nodeType":"ExpressionStatement","src":"4945:39:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":351,"name":"_receivingAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"5007:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5036:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5028:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":352,"name":"address","nodeType":"ElementaryTypeName","src":"5028:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5028:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"5007:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"696e76616c69642061646472657373","id":357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5040:17:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225","typeString":"literal_string \"invalid address\""},"value":"invalid address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225","typeString":"literal_string \"invalid address\""}],"id":350,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4999:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4999:59:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":359,"nodeType":"ExpressionStatement","src":"4999:59:0"},{"expression":{"argumentTypes":null,"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":360,"name":"nextMaximumBoostPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"5093:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":361,"name":"_max","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"5119:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5093:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":363,"nodeType":"ExpressionStatement","src":"5093:30:0"},{"expression":{"argumentTypes":null,"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":364,"name":"nextBoostRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"5129:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":365,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"5145:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5129:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":367,"nodeType":"ExpressionStatement","src":"5129:21:0"},{"expression":{"argumentTypes":null,"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":368,"name":"boostPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"5156:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":369,"name":"_receivingAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"5171:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5156:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":371,"nodeType":"ExpressionStatement","src":"5156:32:0"}]},"documentation":null,"functionSelector":"a81653c9","id":373,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":334,"modifierName":{"argumentTypes":null,"id":333,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"4873:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"4873:9:0"}],"name":"setBoost","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"mutability":"mutable","name":"_max","nodeType":"VariableDeclaration","overrides":null,"scope":373,"src":"4797:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":326,"name":"uint256","nodeType":"ElementaryTypeName","src":"4797:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":329,"mutability":"mutable","name":"_rate","nodeType":"VariableDeclaration","overrides":null,"scope":373,"src":"4815:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":328,"name":"uint256","nodeType":"ElementaryTypeName","src":"4815:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":331,"mutability":"mutable","name":"_receivingAddress","nodeType":"VariableDeclaration","overrides":null,"scope":373,"src":"4834:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"4834:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"4791:72:0"},"returnParameters":{"id":335,"nodeType":"ParameterList","parameters":[],"src":"4883:0:0"},"scope":2569,"src":"4774:419:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":389,"nodeType":"Block","src":"5261:94:0","statements":[{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":381,"name":"escrowDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":76,"src":"5294:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":382,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"5310:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":380,"name":"EscrowDurationUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"5272:21:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5272:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":384,"nodeType":"EmitStatement","src":"5267:52:0"},{"expression":{"argumentTypes":null,"id":387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":385,"name":"escrowDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":76,"src":"5325:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":386,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"5342:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5325:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":388,"nodeType":"ExpressionStatement","src":"5325:25:0"}]},"documentation":null,"functionSelector":"321bc347","id":390,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":378,"modifierName":{"argumentTypes":null,"id":377,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"5251:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"5251:9:0"}],"name":"setEscrowDuration","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":375,"mutability":"mutable","name":"duration","nodeType":"VariableDeclaration","overrides":null,"scope":390,"src":"5224:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":374,"name":"uint256","nodeType":"ElementaryTypeName","src":"5224:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5223:18:0"},"returnParameters":{"id":379,"nodeType":"ParameterList","parameters":[],"src":"5261:0:0"},"scope":2569,"src":"5197:158:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":421,"nodeType":"Block","src":"5458:202:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":400,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"5472:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"hexValue":"353030","id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5481:3:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},"src":"5472:12:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"6f766572206d61782072617465","id":403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5486:15:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_40e71b179d972f5658f5ed010805e384648f30cbd3a508dfbb3557b53cb1e7d2","typeString":"literal_string \"over max rate\""},"value":"over max rate"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_40e71b179d972f5658f5ed010805e384648f30cbd3a508dfbb3557b53cb1e7d2","typeString":"literal_string \"over max rate\""}],"id":399,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5464:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5464:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":405,"nodeType":"ExpressionStatement","src":"5464:38:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":407,"name":"_delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"5535:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"hexValue":"32","id":408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5545:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5535:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"6d696e2064656c6179","id":410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5548:11:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_bd20c4714efc4520b5a22df8b3f6a52de6a21937769c683bcdbd820606a6513d","typeString":"literal_string \"min delay\""},"value":"min delay"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bd20c4714efc4520b5a22df8b3f6a52de6a21937769c683bcdbd820606a6513d","typeString":"literal_string \"min delay\""}],"id":406,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5527:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5527:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"ExpressionStatement","src":"5527:33:0"},{"expression":{"argumentTypes":null,"id":415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":413,"name":"kickRewardPerEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"5594:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":414,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"5615:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5594:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":416,"nodeType":"ExpressionStatement","src":"5594:26:0"},{"expression":{"argumentTypes":null,"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":417,"name":"kickRewardEpochDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"5626:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":418,"name":"_delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"5649:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5626:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":420,"nodeType":"ExpressionStatement","src":"5626:29:0"}]},"documentation":null,"functionSelector":"63f1c8e2","id":422,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":397,"modifierName":{"argumentTypes":null,"id":396,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"5448:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"5448:9:0"}],"name":"setKickIncentive","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":392,"mutability":"mutable","name":"_rate","nodeType":"VariableDeclaration","overrides":null,"scope":422,"src":"5408:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"5408:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":394,"mutability":"mutable","name":"_delay","nodeType":"VariableDeclaration","overrides":null,"scope":422,"src":"5423:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":393,"name":"uint256","nodeType":"ElementaryTypeName","src":"5423:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5407:31:0"},"returnParameters":{"id":398,"nodeType":"ParameterList","parameters":[],"src":"5458:0:0"},"scope":2569,"src":"5382:278:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":431,"nodeType":"Block","src":"5730:28:0","statements":[{"expression":{"argumentTypes":null,"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":427,"name":"isShutdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"5736:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"74727565","id":428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5749:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5736:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":430,"nodeType":"ExpressionStatement","src":"5736:17:0"}]},"documentation":null,"functionSelector":"fc0e74d1","id":432,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":425,"modifierName":{"argumentTypes":null,"id":424,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"5720:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"5720:9:0"}],"name":"shutdown","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":423,"nodeType":"ParameterList","parameters":[],"src":"5708:2:0"},"returnParameters":{"id":426,"nodeType":"ParameterList","parameters":[],"src":"5730:0:0"},"scope":2569,"src":"5691:67:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":461,"nodeType":"Block","src":"5832:145:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":441,"name":"rewardsEscrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"5879:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardsEscrow_$2591","typeString":"contract IRewardsEscrow"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IRewardsEscrow_$2591","typeString":"contract IRewardsEscrow"}],"id":440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5871:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":439,"name":"address","nodeType":"ElementaryTypeName","src":"5871:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5871:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"hexValue":"30","id":443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":436,"name":"stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"5845:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}],"id":435,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"5838:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3889_$","typeString":"type(contract IERC20)"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5838:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":3991,"src":"5838:32:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3889_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3889_$","typeString":"function (contract IERC20,address,uint256)"}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5838:59:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":445,"nodeType":"ExpressionStatement","src":"5838:59:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":452,"name":"rewardsEscrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"5944:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardsEscrow_$2591","typeString":"contract IRewardsEscrow"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IRewardsEscrow_$2591","typeString":"contract IRewardsEscrow"}],"id":451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5936:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":450,"name":"address","nodeType":"ElementaryTypeName","src":"5936:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5936:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"5968:2:0","subExpression":{"argumentTypes":null,"hexValue":"31","id":456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"id":455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5960:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":454,"name":"uint256","nodeType":"ElementaryTypeName","src":"5960:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5960:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":447,"name":"stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"5910:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}],"id":446,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"5903:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3889_$","typeString":"type(contract IERC20)"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5903:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":3991,"src":"5903:32:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3889_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3889_$","typeString":"function (contract IERC20,address,uint256)"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5903:69:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":460,"nodeType":"ExpressionStatement","src":"5903:69:0"}]},"documentation":null,"functionSelector":"8757b15b","id":462,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovals","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":433,"nodeType":"ParameterList","parameters":[],"src":"5820:2:0"},"returnParameters":{"id":434,"nodeType":"ParameterList","parameters":[],"src":"5832:0:0"},"scope":2569,"src":"5799:178:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":519,"nodeType":"Block","src":"6098:476:0","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":469,"name":"boostedSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"6108:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6125:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6108:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":478,"nodeType":"IfStatement","src":"6104:92:0","trueBody":{"id":477,"nodeType":"Block","src":"6128:68:0","statements":[{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":472,"name":"rewardData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"6143:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Reward_$39_storage_$","typeString":"mapping(address => struct PopLocker.Reward storage ref)"}},"id":474,"indexExpression":{"argumentTypes":null,"id":473,"name":"_rewardsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"6154:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6143:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$39_storage","typeString":"struct PopLocker.Reward storage ref"}},"id":475,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rewardPerTokenStored","nodeType":"MemberAccess","referencedDeclaration":38,"src":"6143:46:0","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":468,"id":476,"nodeType":"Return","src":"6136:53:0"}]}},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"condition":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":509,"name":"rewardData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"6495:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Reward_$39_storage_$","typeString":"mapping(address => struct PopLocker.Reward storage ref)"}},"id":511,"indexExpression":{"argumentTypes":null,"id":510,"name":"_rewardsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"6506:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6495:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$39_storage","typeString":"struct PopLocker.Reward storage ref"}},"id":512,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"useBoost","nodeType":"MemberAccess","referencedDeclaration":30,"src":"6495:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"argumentTypes":null,"id":514,"name":"lockedSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"6548:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6495:65:0","trueExpression":{"argumentTypes":null,"id":513,"name":"boostedSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"6532:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"31653138","id":506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6474:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":500,"name":"rewardData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"6421:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Reward_$39_storage_$","typeString":"mapping(address => struct PopLocker.Reward storage ref)"}},"id":502,"indexExpression":{"argumentTypes":null,"id":501,"name":"_rewardsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"6432:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6421:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$39_storage","typeString":"struct PopLocker.Reward storage ref"}},"id":503,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rewardRate","nodeType":"MemberAccess","referencedDeclaration":34,"src":"6421:36:0","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint208","typeString":"uint208"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":494,"name":"rewardData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"6364:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Reward_$39_storage_$","typeString":"mapping(address => struct PopLocker.Reward storage ref)"}},"id":496,"indexExpression":{"argumentTypes":null,"id":495,"name":"_rewardsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"6375:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6364:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$39_storage","typeString":"struct PopLocker.Reward storage ref"}},"id":497,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lastUpdateTime","nodeType":"MemberAccess","referencedDeclaration":36,"src":"6364:40:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint40","typeString":"uint40"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":488,"name":"rewardData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"6309:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Reward_$39_storage_$","typeString":"mapping(address => struct PopLocker.Reward storage ref)"}},"id":490,"indexExpression":{"argumentTypes":null,"id":489,"name":"_rewardsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"6320:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6309:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$39_storage","typeString":"struct PopLocker.Reward storage ref"}},"id":491,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"periodFinish","nodeType":"MemberAccess","referencedDeclaration":32,"src":"6309:38:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint40","typeString":"uint40"}],"id":487,"name":"_lastTimeRewardApplicable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"6283:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6283:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2638,"src":"6283:80:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6283:122:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"6283:137:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6283:175:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"6283:190:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6283:196:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":2687,"src":"6283:211:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6283:278:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":481,"name":"rewardData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"6222:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Reward_$39_storage_$","typeString":"mapping(address => struct PopLocker.Reward storage ref)"}},"id":483,"indexExpression":{"argumentTypes":null,"id":482,"name":"_rewardsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"6233:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6222:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$39_storage","typeString":"struct PopLocker.Reward storage ref"}},"id":484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rewardPerTokenStored","nodeType":"MemberAccess","referencedDeclaration":38,"src":"6222:46:0","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6214:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":479,"name":"uint256","nodeType":"ElementaryTypeName","src":"6214:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6214:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2616,"src":"6214:59:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6214:355:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":468,"id":518,"nodeType":"Return","src":"6201:368:0"}]},"documentation":null,"id":520,"implemented":true,"kind":"function","modifiers":[],"name":"_rewardPerToken","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":464,"mutability":"mutable","name":"_rewardsToken","nodeType":"VariableDeclaration","overrides":null,"scope":520,"src":"6043:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":463,"name":"address","nodeType":"ElementaryTypeName","src":"6043:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"6042:23:0"},"returnParameters":{"id":468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":467,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":520,"src":"6089:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":466,"name":"uint256","nodeType":"ElementaryTypeName","src":"6089:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6088:9:0"},"scope":2569,"src":"6018:556:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":555,"nodeType":"Block","src":"6699:179:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":548,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"6836:7:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":550,"indexExpression":{"argumentTypes":null,"id":549,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"6844:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6836:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":552,"indexExpression":{"argumentTypes":null,"id":551,"name":"_rewardsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"6851:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6836:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"31653138","id":545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6817:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":537,"name":"userRewardPerTokenPaid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"6766:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":539,"indexExpression":{"argumentTypes":null,"id":538,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"6789:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6766:29:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":541,"indexExpression":{"argumentTypes":null,"id":540,"name":"_rewardsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"6796:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6766:44:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":534,"name":"_rewardsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"6747:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":533,"name":"_rewardPerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"6731:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6731:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2638,"src":"6731:34:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6731:80:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":531,"name":"_balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"6718:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"6718:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6718:94:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":2687,"src":"6718:98:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6718:104:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2616,"src":"6718:108:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6718:155:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":530,"id":554,"nodeType":"Return","src":"6705:168:0"}]},"documentation":null,"id":556,"implemented":true,"kind":"function","modifiers":[],"name":"_earned","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":522,"mutability":"mutable","name":"_user","nodeType":"VariableDeclaration","overrides":null,"scope":556,"src":"6600:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"6600:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":524,"mutability":"mutable","name":"_rewardsToken","nodeType":"VariableDeclaration","overrides":null,"scope":556,"src":"6619:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":523,"name":"address","nodeType":"ElementaryTypeName","src":"6619:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":526,"mutability":"mutable","name":"_balance","nodeType":"VariableDeclaration","overrides":null,"scope":556,"src":"6646:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":525,"name":"uint256","nodeType":"ElementaryTypeName","src":"6646:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6594:72:0"},"returnParameters":{"id":530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":529,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":556,"src":"6690:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":528,"name":"uint256","nodeType":"ElementaryTypeName","src":"6690:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6689:9:0"},"scope":2569,"src":"6578:300:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":570,"nodeType":"Block","src":"6970:56:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":565,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6992:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6992:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":567,"name":"_finishTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"7009:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":563,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"6983:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3456_$","typeString":"type(library Math)"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","referencedDeclaration":3422,"src":"6983:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6983:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":562,"id":569,"nodeType":"Return","src":"6976:45:0"}]},"documentation":null,"id":571,"implemented":true,"kind":"function","modifiers":[],"name":"_lastTimeRewardApplicable","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"_finishTime","nodeType":"VariableDeclaration","overrides":null,"scope":571,"src":"6917:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":557,"name":"uint256","nodeType":"ElementaryTypeName","src":"6917:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6916:21:0"},"returnParameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":571,"src":"6961:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"6961:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6960:9:0"},"scope":2569,"src":"6882:144:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":585,"nodeType":"Block","src":"7117:83:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":579,"name":"rewardData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"7156:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Reward_$39_storage_$","typeString":"mapping(address => struct PopLocker.Reward storage ref)"}},"id":581,"indexExpression":{"argumentTypes":null,"id":580,"name":"_rewardsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"7167:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7156:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$39_storage","typeString":"struct PopLocker.Reward storage ref"}},"id":582,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"periodFinish","nodeType":"MemberAccess","referencedDeclaration":32,"src":"7156:38:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint40","typeString":"uint40"}],"id":578,"name":"_lastTimeRewardApplicable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"7130:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7130:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":577,"id":584,"nodeType":"Return","src":"7123:72:0"}]},"documentation":null,"functionSelector":"638634ee","id":586,"implemented":true,"kind":"function","modifiers":[],"name":"lastTimeRewardApplicable","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"mutability":"mutable","name":"_rewardsToken","nodeType":"VariableDeclaration","overrides":null,"scope":586,"src":"7064:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":572,"name":"address","nodeType":"ElementaryTypeName","src":"7064:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"7063:23:0"},"returnParameters":{"id":577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":576,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":586,"src":"7108:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":575,"name":"uint256","nodeType":"ElementaryTypeName","src":"7108:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"7107:9:0"},"scope":2569,"src":"7030:170:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":597,"nodeType":"Block","src":"7283:48:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":594,"name":"_rewardsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"7312:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":593,"name":"_rewardPerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"7296:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7296:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":592,"id":596,"nodeType":"Return","src":"7289:37:0"}]},"documentation":null,"functionSelector":"f1229777","id":598,"implemented":true,"kind":"function","modifiers":[],"name":"rewardPerToken","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"_rewardsToken","nodeType":"VariableDeclaration","overrides":null,"scope":598,"src":"7228:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":587,"name":"address","nodeType":"ElementaryTypeName","src":"7228:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"7227:23:0"},"returnParameters":{"id":592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":598,"src":"7274:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":590,"name":"uint256","nodeType":"ElementaryTypeName","src":"7274:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"7273:9:0"},"scope":2569,"src":"7204:127:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":616,"nodeType":"Block","src":"7420:84:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":613,"name":"rewardsDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7483:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":607,"name":"rewardData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"7441:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Reward_$39_storage_$","typeString":"mapping(address => struct PopLocker.Reward storage ref)"}},"id":609,"indexExpression":{"argumentTypes":null,"id":608,"name":"_rewardsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"7452:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7441:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$39_storage","typeString":"struct PopLocker.Reward storage ref"}},"id":610,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rewardRate","nodeType":"MemberAccess","referencedDeclaration":34,"src":"7441:36:0","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7433:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":605,"name":"uint256","nodeType":"ElementaryTypeName","src":"7433:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7433:45:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"7433:49:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7433:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":604,"id":615,"nodeType":"Return","src":"7426:73:0"}]},"documentation":null,"functionSelector":"bcd11014","id":617,"implemented":true,"kind":"function","modifiers":[],"name":"getRewardForDuration","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"mutability":"mutable","name":"_rewardsToken","nodeType":"VariableDeclaration","overrides":null,"scope":617,"src":"7365:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":599,"name":"address","nodeType":"ElementaryTypeName","src":"7365:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"7364:23:0"},"returnParameters":{"id":604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":603,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":617,"src":"7411:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":602,"name":"uint256","nodeType":"ElementaryTypeName","src":"7411:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"7410:9:0"},"scope":2569,"src":"7335:169:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":691,"nodeType":"Block","src":"7685:441:0","statements":[{"expression":{"argumentTypes":null,"id":632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":625,"name":"userRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"7691:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EarnedData_$58_memory_ptr_$dyn_memory_ptr","typeString":"struct PopLocker.EarnedData memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":629,"name":"rewardTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"7722:12:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7722:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7705:16:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_EarnedData_$58_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct PopLocker.EarnedData memory[] memory)"},"typeName":{"baseType":{"contractScope":null,"id":626,"name":"EarnedData","nodeType":"UserDefinedTypeName","referencedDeclaration":58,"src":"7709:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_EarnedData_$58_storage_ptr","typeString":"struct PopLocker.EarnedData"}},"id":627,"length":null,"nodeType":"ArrayTypeName","src":"7709:12:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EarnedData_$58_storage_$dyn_storage_ptr","typeString":"struct PopLocker.EarnedData[]"}}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7705:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EarnedData_$58_memory_ptr_$dyn_memory_ptr","typeString":"struct PopLocker.EarnedData memory[] memory"}},"src":"7691:51:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EarnedData_$58_memory_ptr_$dyn_memory_ptr","typeString":"struct PopLocker.EarnedData memory[] memory"}},"id":633,"nodeType":"ExpressionStatement","src":"7691:51:0"},{"assignments":[635],"declarations":[{"constant":false,"id":635,"mutability":"mutable","name":"userBalance","nodeType":"VariableDeclaration","overrides":null,"scope":691,"src":"7748:28:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances"},"typeName":{"contractScope":null,"id":634,"name":"Balances","nodeType":"UserDefinedTypeName","referencedDeclaration":46,"src":"7748:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances"}},"value":null,"visibility":"internal"}],"id":639,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":636,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"7779:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Balances_$46_storage_$","typeString":"mapping(address => struct PopLocker.Balances storage ref)"}},"id":638,"indexExpression":{"argumentTypes":null,"id":637,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"7788:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7779:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage","typeString":"struct PopLocker.Balances storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7748:49:0"},{"assignments":[641],"declarations":[{"constant":false,"id":641,"mutability":"mutable","name":"boostedBal","nodeType":"VariableDeclaration","overrides":null,"scope":691,"src":"7803:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":640,"name":"uint256","nodeType":"ElementaryTypeName","src":"7803:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":644,"initialValue":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":642,"name":"userBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"7824:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances storage pointer"}},"id":643,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"boosted","nodeType":"MemberAccess","referencedDeclaration":43,"src":"7824:19:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"VariableDeclarationStatement","src":"7803:40:0"},{"body":{"id":687,"nodeType":"Block","src":"7898:200:0","statements":[{"assignments":[657],"declarations":[{"constant":false,"id":657,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","overrides":null,"scope":687,"src":"7906:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"7906:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"id":661,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":658,"name":"rewardTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"7922:12:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":660,"indexExpression":{"argumentTypes":null,"id":659,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"7935:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7922:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7906:31:0"},{"expression":{"argumentTypes":null,"id":667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":662,"name":"userRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"7945:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EarnedData_$58_memory_ptr_$dyn_memory_ptr","typeString":"struct PopLocker.EarnedData memory[] memory"}},"id":664,"indexExpression":{"argumentTypes":null,"id":663,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"7957:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7945:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_EarnedData_$58_memory_ptr","typeString":"struct PopLocker.EarnedData memory"}},"id":665,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":55,"src":"7945:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":666,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"7968:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7945:28:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":668,"nodeType":"ExpressionStatement","src":"7945:28:0"},{"expression":{"argumentTypes":null,"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":669,"name":"userRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"7981:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EarnedData_$58_memory_ptr_$dyn_memory_ptr","typeString":"struct PopLocker.EarnedData memory[] memory"}},"id":671,"indexExpression":{"argumentTypes":null,"id":670,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"7993:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7981:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_EarnedData_$58_memory_ptr","typeString":"struct PopLocker.EarnedData memory"}},"id":672,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":57,"src":"7981:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":674,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"8013:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":675,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"8023:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"condition":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":676,"name":"rewardData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"8030:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Reward_$39_storage_$","typeString":"mapping(address => struct PopLocker.Reward storage ref)"}},"id":678,"indexExpression":{"argumentTypes":null,"id":677,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"8041:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8030:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$39_storage","typeString":"struct PopLocker.Reward storage ref"}},"id":679,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"useBoost","nodeType":"MemberAccess","referencedDeclaration":30,"src":"8030:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":681,"name":"userBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"8072:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances storage pointer"}},"id":682,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"locked","nodeType":"MemberAccess","referencedDeclaration":41,"src":"8072:18:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8030:60:0","trueExpression":{"argumentTypes":null,"id":680,"name":"boostedBal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"8059:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":673,"name":"_earned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"8005:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8005:86:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7981:110:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":686,"nodeType":"ExpressionStatement","src":"7981:110:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":649,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"7869:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":650,"name":"userRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"7873:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EarnedData_$58_memory_ptr_$dyn_memory_ptr","typeString":"struct PopLocker.EarnedData memory[] memory"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7873:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7869:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":688,"initializationExpression":{"assignments":[646],"declarations":[{"constant":false,"id":646,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","overrides":null,"scope":688,"src":"7854:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":645,"name":"uint256","nodeType":"ElementaryTypeName","src":"7854:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":648,"initialValue":{"argumentTypes":null,"hexValue":"30","id":647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7866:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7854:13:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7893:3:0","subExpression":{"argumentTypes":null,"id":653,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"7893:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":655,"nodeType":"ExpressionStatement","src":"7893:3:0"},"nodeType":"ForStatement","src":"7849:249:0"},{"expression":{"argumentTypes":null,"id":689,"name":"userRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"8110:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EarnedData_$58_memory_ptr_$dyn_memory_ptr","typeString":"struct PopLocker.EarnedData memory[] memory"}},"functionReturnParameters":624,"id":690,"nodeType":"Return","src":"8103:18:0"}]},"documentation":null,"functionSelector":"dc01f60d","id":692,"implemented":true,"kind":"function","modifiers":[],"name":"claimableRewards","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":619,"mutability":"mutable","name":"_account","nodeType":"VariableDeclaration","overrides":null,"scope":692,"src":"7611:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":618,"name":"address","nodeType":"ElementaryTypeName","src":"7611:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"7610:18:0"},"returnParameters":{"id":624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":623,"mutability":"mutable","name":"userRewards","nodeType":"VariableDeclaration","overrides":null,"scope":692,"src":"7652:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EarnedData_$58_memory_ptr_$dyn_memory_ptr","typeString":"struct PopLocker.EarnedData[]"},"typeName":{"baseType":{"contractScope":null,"id":621,"name":"EarnedData","nodeType":"UserDefinedTypeName","referencedDeclaration":58,"src":"7652:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_EarnedData_$58_storage_ptr","typeString":"struct PopLocker.EarnedData"}},"id":622,"length":null,"nodeType":"ArrayTypeName","src":"7652:12:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EarnedData_$58_storage_$dyn_storage_ptr","typeString":"struct PopLocker.EarnedData[]"}},"value":null,"visibility":"internal"}],"src":"7651:33:0"},"scope":2569,"src":"7585:541:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":704,"nodeType":"Block","src":"8294:41:0","statements":[{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":699,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"8307:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Balances_$46_storage_$","typeString":"mapping(address => struct PopLocker.Balances storage ref)"}},"id":701,"indexExpression":{"argumentTypes":null,"id":700,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"8316:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8307:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage","typeString":"struct PopLocker.Balances storage ref"}},"id":702,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"boosted","nodeType":"MemberAccess","referencedDeclaration":43,"src":"8307:23:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":698,"id":703,"nodeType":"Return","src":"8300:30:0"}]},"documentation":null,"functionSelector":"2fe87108","id":705,"implemented":true,"kind":"function","modifiers":[],"name":"rewardWeightOf","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"_user","nodeType":"VariableDeclaration","overrides":null,"scope":705,"src":"8240:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":693,"name":"address","nodeType":"ElementaryTypeName","src":"8240:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"8239:15:0"},"returnParameters":{"id":698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":697,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","overrides":null,"scope":705,"src":"8278:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":696,"name":"uint256","nodeType":"ElementaryTypeName","src":"8278:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"8277:16:0"},"scope":2569,"src":"8216:119:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":717,"nodeType":"Block","src":"8502:40:0","statements":[{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":712,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"8515:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Balances_$46_storage_$","typeString":"mapping(address => struct PopLocker.Balances storage ref)"}},"id":714,"indexExpression":{"argumentTypes":null,"id":713,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"8524:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8515:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage","typeString":"struct PopLocker.Balances storage ref"}},"id":715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"locked","nodeType":"MemberAccess","referencedDeclaration":41,"src":"8515:22:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":711,"id":716,"nodeType":"Return","src":"8508:29:0"}]},"documentation":null,"functionSelector":"59355736","id":718,"implemented":true,"kind":"function","modifiers":[],"name":"lockedBalanceOf","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":707,"mutability":"mutable","name":"_user","nodeType":"VariableDeclaration","overrides":null,"scope":718,"src":"8448:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":706,"name":"address","nodeType":"ElementaryTypeName","src":"8448:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"8447:15:0"},"returnParameters":{"id":711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","overrides":null,"scope":718,"src":"8486:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":709,"name":"uint256","nodeType":"ElementaryTypeName","src":"8486:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"8485:16:0"},"scope":2569,"src":"8423:119:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":834,"nodeType":"Block","src":"8733:941:0","statements":[{"assignments":[728],"declarations":[{"constant":false,"id":728,"mutability":"mutable","name":"locks","nodeType":"VariableDeclaration","overrides":null,"scope":834,"src":"8739:29:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_ptr","typeString":"struct PopLocker.LockedBalance[]"},"typeName":{"baseType":{"contractScope":null,"id":726,"name":"LockedBalance","nodeType":"UserDefinedTypeName","referencedDeclaration":53,"src":"8739:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage_ptr","typeString":"struct PopLocker.LockedBalance"}},"id":727,"length":null,"nodeType":"ArrayTypeName","src":"8739:15:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_ptr","typeString":"struct PopLocker.LockedBalance[]"}},"value":null,"visibility":"internal"}],"id":732,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":729,"name":"userLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"8771:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_$","typeString":"mapping(address => struct PopLocker.LockedBalance storage ref[] storage ref)"}},"id":731,"indexExpression":{"argumentTypes":null,"id":730,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"8781:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8771:16:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage","typeString":"struct PopLocker.LockedBalance storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8739:48:0"},{"assignments":[734],"declarations":[{"constant":false,"id":734,"mutability":"mutable","name":"userBalance","nodeType":"VariableDeclaration","overrides":null,"scope":834,"src":"8793:28:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances"},"typeName":{"contractScope":null,"id":733,"name":"Balances","nodeType":"UserDefinedTypeName","referencedDeclaration":46,"src":"8793:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances"}},"value":null,"visibility":"internal"}],"id":738,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":735,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"8824:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Balances_$46_storage_$","typeString":"mapping(address => struct PopLocker.Balances storage ref)"}},"id":737,"indexExpression":{"argumentTypes":null,"id":736,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"8833:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8824:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage","typeString":"struct PopLocker.Balances storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8793:46:0"},{"assignments":[740],"declarations":[{"constant":false,"id":740,"mutability":"mutable","name":"nextUnlockIndex","nodeType":"VariableDeclaration","overrides":null,"scope":834,"src":"8845:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":739,"name":"uint256","nodeType":"ElementaryTypeName","src":"8845:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":743,"initialValue":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":741,"name":"userBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"8871:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances storage pointer"}},"id":742,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"nextUnlockIndex","nodeType":"MemberAccess","referencedDeclaration":45,"src":"8871:27:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"8845:53:0"},{"expression":{"argumentTypes":null,"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":744,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"8945:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":745,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"8954:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Balances_$46_storage_$","typeString":"mapping(address => struct PopLocker.Balances storage ref)"}},"id":747,"indexExpression":{"argumentTypes":null,"id":746,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"8963:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8954:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage","typeString":"struct PopLocker.Balances storage ref"}},"id":748,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"boosted","nodeType":"MemberAccess","referencedDeclaration":43,"src":"8954:23:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"8945:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":750,"nodeType":"ExpressionStatement","src":"8945:32:0"},{"assignments":[752],"declarations":[{"constant":false,"id":752,"mutability":"mutable","name":"locksLength","nodeType":"VariableDeclaration","overrides":null,"scope":834,"src":"8984:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":751,"name":"uint256","nodeType":"ElementaryTypeName","src":"8984:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":755,"initialValue":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":753,"name":"locks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"9006:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_ptr","typeString":"struct PopLocker.LockedBalance storage ref[] storage pointer"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9006:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8984:34:0"},{"body":{"id":787,"nodeType":"Block","src":"9151:194:0","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":766,"name":"locks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"9163:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_ptr","typeString":"struct PopLocker.LockedBalance storage ref[] storage pointer"}},"id":768,"indexExpression":{"argumentTypes":null,"id":767,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"9169:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9163:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage","typeString":"struct PopLocker.LockedBalance storage ref"}},"id":769,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"unlockTime","nodeType":"MemberAccess","referencedDeclaration":52,"src":"9163:19:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":770,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9186:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9186:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":785,"nodeType":"Block","src":"9265:74:0","statements":[{"id":784,"nodeType":"Break","src":"9325:5:0"}]},"id":786,"nodeType":"IfStatement","src":"9159:180:0","trueBody":{"id":783,"nodeType":"Block","src":"9203:56:0","statements":[{"expression":{"argumentTypes":null,"id":781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":773,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"9213:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":776,"name":"locks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"9233:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_ptr","typeString":"struct PopLocker.LockedBalance storage ref[] storage pointer"}},"id":778,"indexExpression":{"argumentTypes":null,"id":777,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"9239:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9233:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage","typeString":"struct PopLocker.LockedBalance storage ref"}},"id":779,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"boosted","nodeType":"MemberAccess","referencedDeclaration":50,"src":"9233:16:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"argumentTypes":null,"id":774,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"9222:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2638,"src":"9222:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9222:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9213:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":782,"nodeType":"ExpressionStatement","src":"9213:37:0"}]}}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":760,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"9129:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":761,"name":"locksLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"9133:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9129:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":788,"initializationExpression":{"assignments":[757],"declarations":[{"constant":false,"id":757,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","overrides":null,"scope":788,"src":"9100:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"9100:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":759,"initialValue":{"argumentTypes":null,"id":758,"name":"nextUnlockIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"9112:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9100:27:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9146:3:0","subExpression":{"argumentTypes":null,"id":763,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"9146:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":765,"nodeType":"ExpressionStatement","src":"9146:3:0"},"nodeType":"ForStatement","src":"9095:250:0"},{"assignments":[790],"declarations":[{"constant":false,"id":790,"mutability":"mutable","name":"currentEpoch","nodeType":"VariableDeclaration","overrides":null,"scope":834,"src":"9397:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":789,"name":"uint256","nodeType":"ElementaryTypeName","src":"9397:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":799,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":797,"name":"rewardsDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"9461:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":794,"name":"rewardsDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"9440:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":791,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9420:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9420:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":2687,"src":"9420:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9420:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"9420:40:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9420:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9397:80:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":800,"name":"locksLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"9487:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9501:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9487:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":813,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"9553:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":805,"name":"locks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"9514:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_ptr","typeString":"struct PopLocker.LockedBalance storage ref[] storage pointer"}},"id":809,"indexExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":806,"name":"locksLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"9520:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"hexValue":"31","id":807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9534:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9520:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9514:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage","typeString":"struct PopLocker.LockedBalance storage ref"}},"id":810,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"unlockTime","nodeType":"MemberAccess","referencedDeclaration":52,"src":"9514:33:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9506:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":803,"name":"uint256","nodeType":"ElementaryTypeName","src":"9506:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9506:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2638,"src":"9506:46:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9506:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":815,"name":"currentEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"9570:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9506:76:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9487:95:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":831,"nodeType":"IfStatement","src":"9483:167:0","trueBody":{"id":830,"nodeType":"Block","src":"9584:66:0","statements":[{"expression":{"argumentTypes":null,"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":818,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"9592:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":821,"name":"locks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"9612:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_ptr","typeString":"struct PopLocker.LockedBalance storage ref[] storage pointer"}},"id":825,"indexExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":822,"name":"locksLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"9618:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"hexValue":"31","id":823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9632:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9618:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9612:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage","typeString":"struct PopLocker.LockedBalance storage ref"}},"id":826,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"boosted","nodeType":"MemberAccess","referencedDeclaration":50,"src":"9612:30:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"argumentTypes":null,"id":819,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"9601:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2638,"src":"9601:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9601:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9592:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":829,"nodeType":"ExpressionStatement","src":"9592:51:0"}]}},{"expression":{"argumentTypes":null,"id":832,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"9663:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":724,"id":833,"nodeType":"Return","src":"9656:13:0"}]},"documentation":null,"functionSelector":"70a08231","id":835,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":720,"mutability":"mutable","name":"_user","nodeType":"VariableDeclaration","overrides":null,"scope":835,"src":"8679:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"8679:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"8678:15:0"},"returnParameters":{"id":724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":723,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","overrides":null,"scope":835,"src":"8717:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":722,"name":"uint256","nodeType":"ElementaryTypeName","src":"8717:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"8716:16:0"},"scope":2569,"src":"8660:1014:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":935,"nodeType":"Block","src":"9870:1042:0","statements":[{"assignments":[847],"declarations":[{"constant":false,"id":847,"mutability":"mutable","name":"locks","nodeType":"VariableDeclaration","overrides":null,"scope":935,"src":"9876:29:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_ptr","typeString":"struct PopLocker.LockedBalance[]"},"typeName":{"baseType":{"contractScope":null,"id":845,"name":"LockedBalance","nodeType":"UserDefinedTypeName","referencedDeclaration":53,"src":"9876:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage_ptr","typeString":"struct PopLocker.LockedBalance"}},"id":846,"length":null,"nodeType":"ArrayTypeName","src":"9876:15:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_ptr","typeString":"struct PopLocker.LockedBalance[]"}},"value":null,"visibility":"internal"}],"id":851,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":848,"name":"userLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"9908:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_$","typeString":"mapping(address => struct PopLocker.LockedBalance storage ref[] storage ref)"}},"id":850,"indexExpression":{"argumentTypes":null,"id":849,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"9918:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9908:16:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage","typeString":"struct PopLocker.LockedBalance storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9876:48:0"},{"assignments":[853],"declarations":[{"constant":false,"id":853,"mutability":"mutable","name":"epochTime","nodeType":"VariableDeclaration","overrides":null,"scope":935,"src":"9972:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":852,"name":"uint256","nodeType":"ElementaryTypeName","src":"9972:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":858,"initialValue":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":854,"name":"epochs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"9992:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Epoch_$63_storage_$dyn_storage","typeString":"struct PopLocker.Epoch storage ref[] storage ref"}},"id":856,"indexExpression":{"argumentTypes":null,"id":855,"name":"_epoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"9999:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9992:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Epoch_$63_storage","typeString":"struct PopLocker.Epoch storage ref"}},"id":857,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"date","nodeType":"MemberAccess","referencedDeclaration":62,"src":"9992:19:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"9972:39:0"},{"assignments":[860],"declarations":[{"constant":false,"id":860,"mutability":"mutable","name":"cutoffEpoch","nodeType":"VariableDeclaration","overrides":null,"scope":935,"src":"10066:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":859,"name":"uint256","nodeType":"ElementaryTypeName","src":"10066:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":865,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":863,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"10102:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":861,"name":"epochTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"10088:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2638,"src":"10088:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10088:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10066:49:0"},{"assignments":[867],"declarations":[{"constant":false,"id":867,"mutability":"mutable","name":"currentEpoch","nodeType":"VariableDeclaration","overrides":null,"scope":935,"src":"10157:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":866,"name":"uint256","nodeType":"ElementaryTypeName","src":"10157:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":876,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":874,"name":"rewardsDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"10221:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":871,"name":"rewardsDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"10200:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":868,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10180:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":null,"src":"10180:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":2687,"src":"10180:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10180:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"10180:40:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10180:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10157:80:0"},{"body":{"id":931,"nodeType":"Block","src":"10439:449:0","statements":[{"assignments":[893],"declarations":[{"constant":false,"id":893,"mutability":"mutable","name":"lockEpoch","nodeType":"VariableDeclaration","overrides":null,"scope":931,"src":"10447:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":892,"name":"uint256","nodeType":"ElementaryTypeName","src":"10447:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":904,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":902,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"10500:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":896,"name":"locks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"10475:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_ptr","typeString":"struct PopLocker.LockedBalance storage ref[] storage pointer"}},"id":898,"indexExpression":{"argumentTypes":null,"id":897,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"10481:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10475:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage","typeString":"struct PopLocker.LockedBalance storage ref"}},"id":899,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"unlockTime","nodeType":"MemberAccess","referencedDeclaration":52,"src":"10475:19:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10467:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":894,"name":"uint256","nodeType":"ElementaryTypeName","src":"10467:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10467:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2638,"src":"10467:32:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10467:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10447:66:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":905,"name":"lockEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"10641:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"id":906,"name":"epochTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"10654:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10641:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":908,"name":"lockEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"10667:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":909,"name":"currentEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"10679:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10667:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10641:50:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":930,"nodeType":"IfStatement","src":"10637:245:0","trueBody":{"id":929,"nodeType":"Block","src":"10693:189:0","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":912,"name":"lockEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"10707:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"id":913,"name":"cutoffEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"10719:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10707:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":927,"nodeType":"Block","src":"10798:76:0","statements":[{"id":926,"nodeType":"Break","src":"10858:5:0"}]},"id":928,"nodeType":"IfStatement","src":"10703:171:0","trueBody":{"id":925,"nodeType":"Block","src":"10732:60:0","statements":[{"expression":{"argumentTypes":null,"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":915,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"10744:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":918,"name":"locks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"10764:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_ptr","typeString":"struct PopLocker.LockedBalance storage ref[] storage pointer"}},"id":920,"indexExpression":{"argumentTypes":null,"id":919,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"10770:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10764:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage","typeString":"struct PopLocker.LockedBalance storage ref"}},"id":921,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"boosted","nodeType":"MemberAccess","referencedDeclaration":50,"src":"10764:16:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"argumentTypes":null,"id":916,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"10753:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2616,"src":"10753:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10753:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10744:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":924,"nodeType":"ExpressionStatement","src":"10744:37:0"}]}}]}}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":884,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"10422:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"hexValue":"31","id":885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10426:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10422:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10431:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10422:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":932,"initializationExpression":{"assignments":[878],"declarations":[{"constant":false,"id":878,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","overrides":null,"scope":932,"src":"10392:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":877,"name":"uint256","nodeType":"ElementaryTypeName","src":"10392:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":883,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":879,"name":"locks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"10404:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_ptr","typeString":"struct PopLocker.LockedBalance storage ref[] storage pointer"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"10404:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"hexValue":"31","id":881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10419:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10404:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10392:28:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"10434:3:0","subExpression":{"argumentTypes":null,"id":889,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"10434:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":891,"nodeType":"ExpressionStatement","src":"10434:3:0"},"nodeType":"ForStatement","src":"10387:501:0"},{"expression":{"argumentTypes":null,"id":933,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"10901:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":843,"id":934,"nodeType":"Return","src":"10894:13:0"}]},"documentation":null,"functionSelector":"1c607395","id":936,"implemented":true,"kind":"function","modifiers":[],"name":"balanceAtEpochOf","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"_epoch","nodeType":"VariableDeclaration","overrides":null,"scope":936,"src":"9800:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":836,"name":"uint256","nodeType":"ElementaryTypeName","src":"9800:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"_user","nodeType":"VariableDeclaration","overrides":null,"scope":936,"src":"9816:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"9816:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"9799:31:0"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","overrides":null,"scope":936,"src":"9854:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":841,"name":"uint256","nodeType":"ElementaryTypeName","src":"9854:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9853:16:0"},"scope":2569,"src":"9774:1138:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1022,"nodeType":"Block","src":"11059:619:0","statements":[{"assignments":[942],"declarations":[{"constant":false,"id":942,"mutability":"mutable","name":"currentEpoch","nodeType":"VariableDeclaration","overrides":null,"scope":1022,"src":"11065:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":941,"name":"uint256","nodeType":"ElementaryTypeName","src":"11065:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":951,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":949,"name":"rewardsDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"11129:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":946,"name":"rewardsDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"11108:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":943,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11088:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":null,"src":"11088:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":2687,"src":"11088:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11088:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"11088:40:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11088:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11065:80:0"},{"assignments":[953],"declarations":[{"constant":false,"id":953,"mutability":"mutable","name":"cutoffEpoch","nodeType":"VariableDeclaration","overrides":null,"scope":1022,"src":"11151:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":952,"name":"uint256","nodeType":"ElementaryTypeName","src":"11151:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":958,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":956,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"11190:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":954,"name":"currentEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"11173:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2638,"src":"11173:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11173:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11151:52:0"},{"assignments":[960],"declarations":[{"constant":false,"id":960,"mutability":"mutable","name":"epochindex","nodeType":"VariableDeclaration","overrides":null,"scope":1022,"src":"11209:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":959,"name":"uint256","nodeType":"ElementaryTypeName","src":"11209:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":963,"initialValue":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":961,"name":"epochs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"11230:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Epoch_$63_storage_$dyn_storage","typeString":"struct PopLocker.Epoch storage ref[] storage ref"}},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"11230:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11209:34:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":966,"name":"epochs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"11306:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Epoch_$63_storage_$dyn_storage","typeString":"struct PopLocker.Epoch storage ref[] storage ref"}},"id":970,"indexExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":967,"name":"epochindex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"11313:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"hexValue":"31","id":968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11326:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11313:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11306:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_Epoch_$63_storage","typeString":"struct PopLocker.Epoch storage ref"}},"id":971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"date","nodeType":"MemberAccess","referencedDeclaration":62,"src":"11306:27:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11298:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":964,"name":"uint256","nodeType":"ElementaryTypeName","src":"11298:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11298:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":973,"name":"currentEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"11338:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11298:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":979,"nodeType":"IfStatement","src":"11294:85:0","trueBody":{"id":978,"nodeType":"Block","src":"11352:27:0","statements":[{"expression":{"argumentTypes":null,"id":976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"11360:12:0","subExpression":{"argumentTypes":null,"id":975,"name":"epochindex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"11360:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":977,"nodeType":"ExpressionStatement","src":"11360:12:0"}]}},{"body":{"id":1018,"nodeType":"Block","src":"11508:146:0","statements":[{"assignments":[995],"declarations":[{"constant":false,"id":995,"mutability":"mutable","name":"e","nodeType":"VariableDeclaration","overrides":null,"scope":1018,"src":"11516:15:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Epoch_$63_storage_ptr","typeString":"struct PopLocker.Epoch"},"typeName":{"contractScope":null,"id":994,"name":"Epoch","nodeType":"UserDefinedTypeName","referencedDeclaration":63,"src":"11516:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Epoch_$63_storage_ptr","typeString":"struct PopLocker.Epoch"}},"value":null,"visibility":"internal"}],"id":999,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":996,"name":"epochs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"11534:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Epoch_$63_storage_$dyn_storage","typeString":"struct PopLocker.Epoch storage ref[] storage ref"}},"id":998,"indexExpression":{"argumentTypes":null,"id":997,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"11541:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11534:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_Epoch_$63_storage","typeString":"struct PopLocker.Epoch storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11516:27:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1002,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"11563:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Epoch_$63_storage_ptr","typeString":"struct PopLocker.Epoch storage pointer"}},"id":1003,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"date","nodeType":"MemberAccess","referencedDeclaration":62,"src":"11563:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":1001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11555:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1000,"name":"uint256","nodeType":"ElementaryTypeName","src":"11555:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11555:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"id":1005,"name":"cutoffEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"11574:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11555:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1009,"nodeType":"IfStatement","src":"11551:60:0","trueBody":{"id":1008,"nodeType":"Block","src":"11587:24:0","statements":[{"id":1007,"nodeType":"Break","src":"11597:5:0"}]}},{"expression":{"argumentTypes":null,"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1010,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"11618:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1013,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"11638:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Epoch_$63_storage_ptr","typeString":"struct PopLocker.Epoch storage pointer"}},"id":1014,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"supply","nodeType":"MemberAccess","referencedDeclaration":60,"src":"11638:8:0","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint224","typeString":"uint224"}],"expression":{"argumentTypes":null,"id":1011,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"11627:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2616,"src":"11627:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11627:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11618:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1017,"nodeType":"ExpressionStatement","src":"11618:29:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":986,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"11491:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"hexValue":"31","id":987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11495:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11491:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11500:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11491:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1019,"initializationExpression":{"assignments":[981],"declarations":[{"constant":false,"id":981,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","overrides":null,"scope":1019,"src":"11463:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":980,"name":"uint256","nodeType":"ElementaryTypeName","src":"11463:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":985,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":982,"name":"epochindex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"11475:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"hexValue":"31","id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11488:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11475:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11463:26:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"11503:3:0","subExpression":{"argumentTypes":null,"id":991,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"11503:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":993,"nodeType":"ExpressionStatement","src":"11503:3:0"},"nodeType":"ForStatement","src":"11458:196:0"},{"expression":{"argumentTypes":null,"id":1020,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"11667:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":940,"id":1021,"nodeType":"Return","src":"11660:13:0"}]},"documentation":null,"functionSelector":"18160ddd","id":1023,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":937,"nodeType":"ParameterList","parameters":[],"src":"11017:2:0"},"returnParameters":{"id":940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"mutability":"mutable","name":"supply","nodeType":"VariableDeclaration","overrides":null,"scope":1023,"src":"11043:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":938,"name":"uint256","nodeType":"ElementaryTypeName","src":"11043:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11042:16:0"},"scope":2569,"src":"10997:681:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1120,"nodeType":"Block","src":"11835:662:0","statements":[{"assignments":[1031],"declarations":[{"constant":false,"id":1031,"mutability":"mutable","name":"epochStart","nodeType":"VariableDeclaration","overrides":null,"scope":1120,"src":"11841:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1030,"name":"uint256","nodeType":"ElementaryTypeName","src":"11841:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1045,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1043,"name":"rewardsDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"11916:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1040,"name":"rewardsDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"11895:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1034,"name":"epochs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"11870:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Epoch_$63_storage_$dyn_storage","typeString":"struct PopLocker.Epoch storage ref[] storage ref"}},"id":1036,"indexExpression":{"argumentTypes":null,"id":1035,"name":"_epoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"11877:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11870:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Epoch_$63_storage","typeString":"struct PopLocker.Epoch storage ref"}},"id":1037,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"date","nodeType":"MemberAccess","referencedDeclaration":62,"src":"11870:19:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":1033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1032,"name":"uint256","nodeType":"ElementaryTypeName","src":"11862:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11862:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":2687,"src":"11862:32:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11862:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"11862:53:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11862:70:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11841:91:0"},{"assignments":[1047],"declarations":[{"constant":false,"id":1047,"mutability":"mutable","name":"cutoffEpoch","nodeType":"VariableDeclaration","overrides":null,"scope":1120,"src":"11938:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1046,"name":"uint256","nodeType":"ElementaryTypeName","src":"11938:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1052,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1050,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"11975:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1048,"name":"epochStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"11960:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2638,"src":"11960:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11960:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11938:50:0"},{"assignments":[1054],"declarations":[{"constant":false,"id":1054,"mutability":"mutable","name":"currentEpoch","nodeType":"VariableDeclaration","overrides":null,"scope":1120,"src":"11994:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1053,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1063,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1061,"name":"rewardsDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"12058:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1058,"name":"rewardsDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"12037:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1055,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12017:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":null,"src":"12017:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":2687,"src":"12017:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12017:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"12017:40:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12017:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11994:80:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1066,"name":"epochs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"12137:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Epoch_$63_storage_$dyn_storage","typeString":"struct PopLocker.Epoch storage ref[] storage ref"}},"id":1068,"indexExpression":{"argumentTypes":null,"id":1067,"name":"_epoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"12144:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12137:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Epoch_$63_storage","typeString":"struct PopLocker.Epoch storage ref"}},"id":1069,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"date","nodeType":"MemberAccess","referencedDeclaration":62,"src":"12137:19:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":1065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12129:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1064,"name":"uint256","nodeType":"ElementaryTypeName","src":"12129:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12129:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":1071,"name":"currentEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"12161:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12129:44:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1077,"nodeType":"IfStatement","src":"12125:73:0","trueBody":{"id":1076,"nodeType":"Block","src":"12175:23:0","statements":[{"expression":{"argumentTypes":null,"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"12183:8:0","subExpression":{"argumentTypes":null,"id":1073,"name":"_epoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"12183:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1075,"nodeType":"ExpressionStatement","src":"12183:8:0"}]}},{"body":{"id":1116,"nodeType":"Block","src":"12319:154:0","statements":[{"assignments":[1091],"declarations":[{"constant":false,"id":1091,"mutability":"mutable","name":"e","nodeType":"VariableDeclaration","overrides":null,"scope":1116,"src":"12327:15:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Epoch_$63_storage_ptr","typeString":"struct PopLocker.Epoch"},"typeName":{"contractScope":null,"id":1090,"name":"Epoch","nodeType":"UserDefinedTypeName","referencedDeclaration":63,"src":"12327:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Epoch_$63_storage_ptr","typeString":"struct PopLocker.Epoch"}},"value":null,"visibility":"internal"}],"id":1095,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1092,"name":"epochs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"12345:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Epoch_$63_storage_$dyn_storage","typeString":"struct PopLocker.Epoch storage ref[] storage ref"}},"id":1094,"indexExpression":{"argumentTypes":null,"id":1093,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"12352:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12345:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_Epoch_$63_storage","typeString":"struct PopLocker.Epoch storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12327:27:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1098,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"12374:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Epoch_$63_storage_ptr","typeString":"struct PopLocker.Epoch storage pointer"}},"id":1099,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"date","nodeType":"MemberAccess","referencedDeclaration":62,"src":"12374:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":1097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12366:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1096,"name":"uint256","nodeType":"ElementaryTypeName","src":"12366:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12366:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"id":1101,"name":"cutoffEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"12385:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12366:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1105,"nodeType":"IfStatement","src":"12362:60:0","trueBody":{"id":1104,"nodeType":"Block","src":"12398:24:0","statements":[{"id":1103,"nodeType":"Break","src":"12408:5:0"}]}},{"expression":{"argumentTypes":null,"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1106,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"12429:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1109,"name":"epochs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"12449:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Epoch_$63_storage_$dyn_storage","typeString":"struct PopLocker.Epoch storage ref[] storage ref"}},"id":1111,"indexExpression":{"argumentTypes":null,"id":1110,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"12456:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12449:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_Epoch_$63_storage","typeString":"struct PopLocker.Epoch storage ref"}},"id":1112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"supply","nodeType":"MemberAccess","referencedDeclaration":60,"src":"12449:16:0","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint224","typeString":"uint224"}],"expression":{"argumentTypes":null,"id":1107,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"12438:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2616,"src":"12438:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12438:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12429:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1115,"nodeType":"ExpressionStatement","src":"12429:37:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1082,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"12302:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"hexValue":"31","id":1083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12306:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12302:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12311:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12302:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1117,"initializationExpression":{"assignments":[1079],"declarations":[{"constant":false,"id":1079,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","overrides":null,"scope":1117,"src":"12282:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1078,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1081,"initialValue":{"argumentTypes":null,"id":1080,"name":"_epoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"12294:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12282:18:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"12314:3:0","subExpression":{"argumentTypes":null,"id":1087,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"12314:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1089,"nodeType":"ExpressionStatement","src":"12314:3:0"},"nodeType":"ForStatement","src":"12277:196:0"},{"expression":{"argumentTypes":null,"id":1118,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"12486:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1029,"id":1119,"nodeType":"Return","src":"12479:13:0"}]},"documentation":null,"functionSelector":"70b36d79","id":1121,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupplyAtEpoch","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1025,"mutability":"mutable","name":"_epoch","nodeType":"VariableDeclaration","overrides":null,"scope":1121,"src":"11780:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1024,"name":"uint256","nodeType":"ElementaryTypeName","src":"11780:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11779:16:0"},"returnParameters":{"id":1029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1028,"mutability":"mutable","name":"supply","nodeType":"VariableDeclaration","overrides":null,"scope":1121,"src":"11819:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1027,"name":"uint256","nodeType":"ElementaryTypeName","src":"11819:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11818:16:0"},"scope":2569,"src":"11752:745:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1209,"nodeType":"Block","src":"12618:515:0","statements":[{"assignments":[1129],"declarations":[{"constant":false,"id":1129,"mutability":"mutable","name":"max","nodeType":"VariableDeclaration","overrides":null,"scope":1209,"src":"12624:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1128,"name":"uint256","nodeType":"ElementaryTypeName","src":"12624:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1134,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1130,"name":"epochs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"12638:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Epoch_$63_storage_$dyn_storage","typeString":"struct PopLocker.Epoch storage ref[] storage ref"}},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"12638:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"hexValue":"31","id":1132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12654:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12638:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12624:31:0"},{"assignments":[1136],"declarations":[{"constant":false,"id":1136,"mutability":"mutable","name":"min","nodeType":"VariableDeclaration","overrides":null,"scope":1209,"src":"12661:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1135,"name":"uint256","nodeType":"ElementaryTypeName","src":"12661:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1138,"initialValue":{"argumentTypes":null,"hexValue":"30","id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12675:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12661:15:0"},{"expression":{"argumentTypes":null,"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1139,"name":"_time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"12712:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1145,"name":"rewardsDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"12751:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1142,"name":"rewardsDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"12730:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1140,"name":"_time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"12720:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":2687,"src":"12720:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12720:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"12720:30:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12720:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12712:55:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1148,"nodeType":"ExpressionStatement","src":"12712:55:0"},{"body":{"id":1205,"nodeType":"Block","src":"12808:305:0","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1159,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"12820:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":1160,"name":"max","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"12827:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12820:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1163,"nodeType":"IfStatement","src":"12816:21:0","trueBody":{"id":1162,"nodeType":"Break","src":"12832:5:0"}},{"assignments":[1165],"declarations":[{"constant":false,"id":1165,"mutability":"mutable","name":"mid","nodeType":"VariableDeclaration","overrides":null,"scope":1205,"src":"12846:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1164,"name":"uint256","nodeType":"ElementaryTypeName","src":"12846:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1174,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1166,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"12861:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"id":1167,"name":"max","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"12867:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12861:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"hexValue":"31","id":1169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12873:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12861:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1171,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12860:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"hexValue":"32","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12878:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12860:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12846:33:0"},{"assignments":[1176],"declarations":[{"constant":false,"id":1176,"mutability":"mutable","name":"midEpochBlock","nodeType":"VariableDeclaration","overrides":null,"scope":1205,"src":"12887:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1175,"name":"uint256","nodeType":"ElementaryTypeName","src":"12887:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1181,"initialValue":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1177,"name":"epochs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"12911:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Epoch_$63_storage_$dyn_storage","typeString":"struct PopLocker.Epoch storage ref[] storage ref"}},"id":1179,"indexExpression":{"argumentTypes":null,"id":1178,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"12918:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12911:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Epoch_$63_storage","typeString":"struct PopLocker.Epoch storage ref"}},"id":1180,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"date","nodeType":"MemberAccess","referencedDeclaration":62,"src":"12911:16:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"12887:40:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1182,"name":"midEpochBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"12939:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":1183,"name":"_time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"12956:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12939:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1188,"name":"midEpochBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"13018:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":1189,"name":"_time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"13034:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13018:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1202,"nodeType":"Block","src":"13075:32:0","statements":[{"expression":{"argumentTypes":null,"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1196,"name":"max","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"13085:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1197,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"13091:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"hexValue":"31","id":1198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13097:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13091:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13085:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1201,"nodeType":"ExpressionStatement","src":"13085:13:0"}]},"id":1203,"nodeType":"IfStatement","src":"13014:93:0","trueBody":{"id":1195,"nodeType":"Block","src":"13041:28:0","statements":[{"expression":{"argumentTypes":null,"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1191,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"13051:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1192,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"13057:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13051:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1194,"nodeType":"ExpressionStatement","src":"13051:9:0"}]}},"id":1204,"nodeType":"IfStatement","src":"12935:172:0","trueBody":{"id":1187,"nodeType":"Block","src":"12963:45:0","statements":[{"expression":{"argumentTypes":null,"id":1185,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"12996:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1127,"id":1186,"nodeType":"Return","src":"12989:10:0"}]}}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1153,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"12794:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"hexValue":"313238","id":1154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12798:3:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"12794:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1206,"initializationExpression":{"assignments":[1150],"declarations":[{"constant":false,"id":1150,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","overrides":null,"scope":1206,"src":"12779:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1149,"name":"uint256","nodeType":"ElementaryTypeName","src":"12779:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1152,"initialValue":{"argumentTypes":null,"hexValue":"30","id":1151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12791:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12779:13:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12803:3:0","subExpression":{"argumentTypes":null,"id":1156,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"12803:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1158,"nodeType":"ExpressionStatement","src":"12803:3:0"},"nodeType":"ForStatement","src":"12774:339:0"},{"expression":{"argumentTypes":null,"id":1207,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"13125:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1127,"id":1208,"nodeType":"Return","src":"13118:10:0"}]},"documentation":null,"functionSelector":"f8261597","id":1210,"implemented":true,"kind":"function","modifiers":[],"name":"findEpochId","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1123,"mutability":"mutable","name":"_time","nodeType":"VariableDeclaration","overrides":null,"scope":1210,"src":"12565:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1122,"name":"uint256","nodeType":"ElementaryTypeName","src":"12565:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12564:15:0"},"returnParameters":{"id":1127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1126,"mutability":"mutable","name":"epoch","nodeType":"VariableDeclaration","overrides":null,"scope":1210,"src":"12603:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1125,"name":"uint256","nodeType":"ElementaryTypeName","src":"12603:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12602:15:0"},"scope":2569,"src":"12544:589:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1323,"nodeType":"Block","src":"13372:636:0","statements":[{"assignments":[1227],"declarations":[{"constant":false,"id":1227,"mutability":"mutable","name":"locks","nodeType":"VariableDeclaration","overrides":null,"scope":1323,"src":"13378:29:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_ptr","typeString":"struct PopLocker.LockedBalance[]"},"typeName":{"baseType":{"contractScope":null,"id":1225,"name":"LockedBalance","nodeType":"UserDefinedTypeName","referencedDeclaration":53,"src":"13378:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage_ptr","typeString":"struct PopLocker.LockedBalance"}},"id":1226,"length":null,"nodeType":"ArrayTypeName","src":"13378:15:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_ptr","typeString":"struct PopLocker.LockedBalance[]"}},"value":null,"visibility":"internal"}],"id":1231,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1228,"name":"userLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"13410:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_$","typeString":"mapping(address => struct PopLocker.LockedBalance storage ref[] storage ref)"}},"id":1230,"indexExpression":{"argumentTypes":null,"id":1229,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"13420:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13410:16:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage","typeString":"struct PopLocker.LockedBalance storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13378:48:0"},{"assignments":[1233],"declarations":[{"constant":false,"id":1233,"mutability":"mutable","name":"userBalance","nodeType":"VariableDeclaration","overrides":null,"scope":1323,"src":"13432:28:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances"},"typeName":{"contractScope":null,"id":1232,"name":"Balances","nodeType":"UserDefinedTypeName","referencedDeclaration":46,"src":"13432:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances"}},"value":null,"visibility":"internal"}],"id":1237,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1234,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"13463:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Balances_$46_storage_$","typeString":"mapping(address => struct PopLocker.Balances storage ref)"}},"id":1236,"indexExpression":{"argumentTypes":null,"id":1235,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"13472:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13463:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage","typeString":"struct PopLocker.Balances storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13432:46:0"},{"assignments":[1239],"declarations":[{"constant":false,"id":1239,"mutability":"mutable","name":"nextUnlockIndex","nodeType":"VariableDeclaration","overrides":null,"scope":1323,"src":"13484:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1238,"name":"uint256","nodeType":"ElementaryTypeName","src":"13484:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1242,"initialValue":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1240,"name":"userBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"13510:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances storage pointer"}},"id":1241,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"nextUnlockIndex","nodeType":"MemberAccess","referencedDeclaration":45,"src":"13510:27:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"13484:53:0"},{"assignments":[1244],"declarations":[{"constant":false,"id":1244,"mutability":"mutable","name":"idx","nodeType":"VariableDeclaration","overrides":null,"scope":1323,"src":"13543:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1243,"name":"uint256","nodeType":"ElementaryTypeName","src":"13543:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1245,"initialValue":null,"nodeType":"VariableDeclarationStatement","src":"13543:11:0"},{"body":{"id":1314,"nodeType":"Block","src":"13617:324:0","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1257,"name":"locks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"13629:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_ptr","typeString":"struct PopLocker.LockedBalance storage ref[] storage pointer"}},"id":1259,"indexExpression":{"argumentTypes":null,"id":1258,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"13635:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13629:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage","typeString":"struct PopLocker.LockedBalance storage ref"}},"id":1260,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"unlockTime","nodeType":"MemberAccess","referencedDeclaration":52,"src":"13629:19:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1261,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13651:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13651:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13629:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1312,"nodeType":"Block","src":"13872:63:0","statements":[{"expression":{"argumentTypes":null,"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1302,"name":"unlockable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"13882:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1305,"name":"locks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"13910:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_ptr","typeString":"struct PopLocker.LockedBalance storage ref[] storage pointer"}},"id":1307,"indexExpression":{"argumentTypes":null,"id":1306,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"13916:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13910:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage","typeString":"struct PopLocker.LockedBalance storage ref"}},"id":1308,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":48,"src":"13910:15:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"argumentTypes":null,"id":1303,"name":"unlockable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"13895:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2616,"src":"13895:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13895:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13882:44:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1311,"nodeType":"ExpressionStatement","src":"13882:44:0"}]},"id":1313,"nodeType":"IfStatement","src":"13625:310:0","trueBody":{"id":1301,"nodeType":"Block","src":"13668:198:0","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1264,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"13682:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13689:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13682:8:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1279,"nodeType":"IfStatement","src":"13678:85:0","trueBody":{"id":1278,"nodeType":"Block","src":"13692:71:0","statements":[{"expression":{"argumentTypes":null,"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1267,"name":"lockData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"13704:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_memory_ptr_$dyn_memory_ptr","typeString":"struct PopLocker.LockedBalance memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1271,"name":"locks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"13735:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_ptr","typeString":"struct PopLocker.LockedBalance storage ref[] storage pointer"}},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13735:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"id":1273,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"13750:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13735:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13715:19:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_LockedBalance_$53_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct PopLocker.LockedBalance memory[] memory)"},"typeName":{"baseType":{"contractScope":null,"id":1268,"name":"LockedBalance","nodeType":"UserDefinedTypeName","referencedDeclaration":53,"src":"13719:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage_ptr","typeString":"struct PopLocker.LockedBalance"}},"id":1269,"length":null,"nodeType":"ArrayTypeName","src":"13719:15:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_ptr","typeString":"struct PopLocker.LockedBalance[]"}}},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13715:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_memory_ptr_$dyn_memory_ptr","typeString":"struct PopLocker.LockedBalance memory[] memory"}},"src":"13704:48:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_memory_ptr_$dyn_memory_ptr","typeString":"struct PopLocker.LockedBalance memory[] memory"}},"id":1277,"nodeType":"ExpressionStatement","src":"13704:48:0"}]}},{"expression":{"argumentTypes":null,"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1280,"name":"lockData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"13772:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_memory_ptr_$dyn_memory_ptr","typeString":"struct PopLocker.LockedBalance memory[] memory"}},"id":1282,"indexExpression":{"argumentTypes":null,"id":1281,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"13781:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13772:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_memory_ptr","typeString":"struct PopLocker.LockedBalance memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1283,"name":"locks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"13788:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_ptr","typeString":"struct PopLocker.LockedBalance storage ref[] storage pointer"}},"id":1285,"indexExpression":{"argumentTypes":null,"id":1284,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"13794:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13788:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage","typeString":"struct PopLocker.LockedBalance storage ref"}},"src":"13772:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_memory_ptr","typeString":"struct PopLocker.LockedBalance memory"}},"id":1287,"nodeType":"ExpressionStatement","src":"13772:24:0"},{"expression":{"argumentTypes":null,"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13806:5:0","subExpression":{"argumentTypes":null,"id":1288,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"13806:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1290,"nodeType":"ExpressionStatement","src":"13806:5:0"},{"expression":{"argumentTypes":null,"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1291,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"13821:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1294,"name":"locks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"13841:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_ptr","typeString":"struct PopLocker.LockedBalance storage ref[] storage pointer"}},"id":1296,"indexExpression":{"argumentTypes":null,"id":1295,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"13847:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13841:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage","typeString":"struct PopLocker.LockedBalance storage ref"}},"id":1297,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":48,"src":"13841:15:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"argumentTypes":null,"id":1292,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"13830:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2616,"src":"13830:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13830:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13821:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1300,"nodeType":"ExpressionStatement","src":"13821:36:0"}]}}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1250,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"13594:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1251,"name":"locks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"13598:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_ptr","typeString":"struct PopLocker.LockedBalance storage ref[] storage pointer"}},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13598:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13594:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1315,"initializationExpression":{"assignments":[1247],"declarations":[{"constant":false,"id":1247,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","overrides":null,"scope":1315,"src":"13565:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1246,"name":"uint256","nodeType":"ElementaryTypeName","src":"13565:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1249,"initialValue":{"argumentTypes":null,"id":1248,"name":"nextUnlockIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"13577:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13565:27:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13612:3:0","subExpression":{"argumentTypes":null,"id":1254,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"13612:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1256,"nodeType":"ExpressionStatement","src":"13612:3:0"},"nodeType":"ForStatement","src":"13560:381:0"},{"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1316,"name":"userBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"13954:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances storage pointer"}},"id":1317,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"locked","nodeType":"MemberAccess","referencedDeclaration":41,"src":"13954:18:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},{"argumentTypes":null,"id":1318,"name":"unlockable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"13974:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1319,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"13986:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1320,"name":"lockData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"13994:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_memory_ptr_$dyn_memory_ptr","typeString":"struct PopLocker.LockedBalance memory[] memory"}}],"id":1321,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13953:50:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint112_$_t_uint256_$_t_uint256_$_t_array$_t_struct$_LockedBalance_$53_memory_ptr_$dyn_memory_ptr_$","typeString":"tuple(uint112,uint256,uint256,struct PopLocker.LockedBalance memory[] memory)"}},"functionReturnParameters":1223,"id":1322,"nodeType":"Return","src":"13946:57:0"}]},"documentation":null,"functionSelector":"0483a7f6","id":1324,"implemented":true,"kind":"function","modifiers":[],"name":"lockedBalances","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1212,"mutability":"mutable","name":"_user","nodeType":"VariableDeclaration","overrides":null,"scope":1324,"src":"13206:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1211,"name":"address","nodeType":"ElementaryTypeName","src":"13206:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"13205:15:0"},"returnParameters":{"id":1223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1215,"mutability":"mutable","name":"total","nodeType":"VariableDeclaration","overrides":null,"scope":1324,"src":"13263:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1214,"name":"uint256","nodeType":"ElementaryTypeName","src":"13263:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1217,"mutability":"mutable","name":"unlockable","nodeType":"VariableDeclaration","overrides":null,"scope":1324,"src":"13284:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1216,"name":"uint256","nodeType":"ElementaryTypeName","src":"13284:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1219,"mutability":"mutable","name":"locked","nodeType":"VariableDeclaration","overrides":null,"scope":1324,"src":"13310:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1218,"name":"uint256","nodeType":"ElementaryTypeName","src":"13310:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1222,"mutability":"mutable","name":"lockData","nodeType":"VariableDeclaration","overrides":null,"scope":1324,"src":"13332:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_memory_ptr_$dyn_memory_ptr","typeString":"struct PopLocker.LockedBalance[]"},"typeName":{"baseType":{"contractScope":null,"id":1220,"name":"LockedBalance","nodeType":"UserDefinedTypeName","referencedDeclaration":53,"src":"13332:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage_ptr","typeString":"struct PopLocker.LockedBalance"}},"id":1221,"length":null,"nodeType":"ArrayTypeName","src":"13332:15:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_ptr","typeString":"struct PopLocker.LockedBalance[]"}},"value":null,"visibility":"internal"}],"src":"13255:114:0"},"scope":2569,"src":"13182:826:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1332,"nodeType":"Block","src":"14087:31:0","statements":[{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1329,"name":"epochs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"14100:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Epoch_$63_storage_$dyn_storage","typeString":"struct PopLocker.Epoch storage ref[] storage ref"}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14100:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1328,"id":1331,"nodeType":"Return","src":"14093:20:0"}]},"documentation":null,"functionSelector":"829965cc","id":1333,"implemented":true,"kind":"function","modifiers":[],"name":"epochCount","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1325,"nodeType":"ParameterList","parameters":[],"src":"14052:2:0"},"returnParameters":{"id":1328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":1333,"src":"14078:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1326,"name":"uint256","nodeType":"ElementaryTypeName","src":"14078:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"14077:9:0"},"scope":2569,"src":"14033:85:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1339,"nodeType":"Block","src":"14208:29:0","statements":[{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":1336,"name":"_checkpointEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"14214:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14214:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1338,"nodeType":"ExpressionStatement","src":"14214:18:0"}]},"documentation":null,"functionSelector":"c1009f4b","id":1340,"implemented":true,"kind":"function","modifiers":[],"name":"checkpointEpoch","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1334,"nodeType":"ParameterList","parameters":[],"src":"14196:2:0"},"returnParameters":{"id":1335,"nodeType":"ParameterList","parameters":[],"src":"14208:0:0"},"scope":2569,"src":"14172:65:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1426,"nodeType":"Block","src":"14329:795:0","statements":[{"assignments":[1344],"declarations":[{"constant":false,"id":1344,"mutability":"mutable","name":"currentEpoch","nodeType":"VariableDeclaration","overrides":null,"scope":1426,"src":"14335:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1343,"name":"uint256","nodeType":"ElementaryTypeName","src":"14335:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1353,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1351,"name":"rewardsDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"14399:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1348,"name":"rewardsDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"14378:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1345,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14358:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14358:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":2687,"src":"14358:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14358:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"14358:40:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14358:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14335:80:0"},{"assignments":[1355],"declarations":[{"constant":false,"id":1355,"mutability":"mutable","name":"epochindex","nodeType":"VariableDeclaration","overrides":null,"scope":1426,"src":"14421:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1354,"name":"uint256","nodeType":"ElementaryTypeName","src":"14421:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1358,"initialValue":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1356,"name":"epochs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"14442:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Epoch_$63_storage_$dyn_storage","typeString":"struct PopLocker.Epoch storage ref[] storage ref"}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14442:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14421:34:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1359,"name":"epochs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"14550:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Epoch_$63_storage_$dyn_storage","typeString":"struct PopLocker.Epoch storage ref[] storage ref"}},"id":1363,"indexExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1360,"name":"epochindex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"14557:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"hexValue":"31","id":1361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14570:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14557:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14550:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_Epoch_$63_storage","typeString":"struct PopLocker.Epoch storage ref"}},"id":1364,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"date","nodeType":"MemberAccess","referencedDeclaration":62,"src":"14550:27:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":1365,"name":"currentEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"14580:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14550:42:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1425,"nodeType":"IfStatement","src":"14546:574:0","trueBody":{"id":1424,"nodeType":"Block","src":"14594:526:0","statements":[{"body":{"id":1404,"nodeType":"Block","src":"14685:175:0","statements":[{"assignments":[1377],"declarations":[{"constant":false,"id":1377,"mutability":"mutable","name":"nextEpochDate","nodeType":"VariableDeclaration","overrides":null,"scope":1404,"src":"14695:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1376,"name":"uint256","nodeType":"ElementaryTypeName","src":"14695:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1391,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1389,"name":"rewardsDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"14763:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1380,"name":"epochs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"14727:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Epoch_$63_storage_$dyn_storage","typeString":"struct PopLocker.Epoch storage ref[] storage ref"}},"id":1385,"indexExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1381,"name":"epochs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"14734:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Epoch_$63_storage_$dyn_storage","typeString":"struct PopLocker.Epoch storage ref[] storage ref"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14734:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"hexValue":"31","id":1383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14750:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14734:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14727:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_Epoch_$63_storage","typeString":"struct PopLocker.Epoch storage ref"}},"id":1386,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"date","nodeType":"MemberAccess","referencedDeclaration":62,"src":"14727:30:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":1379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14719:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1378,"name":"uint256","nodeType":"ElementaryTypeName","src":"14719:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14719:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2616,"src":"14719:43:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14719:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14695:84:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":1396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1399,"name":"nextEpochDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"14833:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14826:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":1397,"name":"uint32","nodeType":"ElementaryTypeName","src":"14826:6:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14826:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":1395,"name":"Epoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"14801:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Epoch_$63_storage_ptr_$","typeString":"type(struct PopLocker.Epoch storage pointer)"}},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["supply","date"],"nodeType":"FunctionCall","src":"14801:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Epoch_$63_memory_ptr","typeString":"struct PopLocker.Epoch memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Epoch_$63_memory_ptr","typeString":"struct PopLocker.Epoch memory"}],"expression":{"argumentTypes":null,"id":1392,"name":"epochs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"14789:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Epoch_$63_storage_$dyn_storage","typeString":"struct PopLocker.Epoch storage ref[] storage ref"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14789:11:0","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_struct$_Epoch_$63_storage_$returns$__$","typeString":"function (struct PopLocker.Epoch storage ref)"}},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14789:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1403,"nodeType":"ExpressionStatement","src":"14789:62:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1367,"name":"epochs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"14637:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Epoch_$63_storage_$dyn_storage","typeString":"struct PopLocker.Epoch storage ref[] storage ref"}},"id":1372,"indexExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1368,"name":"epochs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"14644:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Epoch_$63_storage_$dyn_storage","typeString":"struct PopLocker.Epoch storage ref[] storage ref"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14644:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"hexValue":"31","id":1370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14660:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14644:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14637:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_Epoch_$63_storage","typeString":"struct PopLocker.Epoch storage ref"}},"id":1373,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"date","nodeType":"MemberAccess","referencedDeclaration":62,"src":"14637:30:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":1374,"name":"currentEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"14671:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14637:46:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1405,"nodeType":"WhileStatement","src":"14630:230:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1406,"name":"boostRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"14919:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":1407,"name":"nextBoostRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"14932:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14919:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1414,"nodeType":"IfStatement","src":"14915:76:0","trueBody":{"id":1413,"nodeType":"Block","src":"14947:44:0","statements":[{"expression":{"argumentTypes":null,"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1409,"name":"boostRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"14957:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1410,"name":"nextBoostRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"14969:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14957:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1412,"nodeType":"ExpressionStatement","src":"14957:25:0"}]}},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1415,"name":"maximumBoostPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"15002:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":1416,"name":"nextMaximumBoostPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"15025:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15002:46:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1423,"nodeType":"IfStatement","src":"14998:116:0","trueBody":{"id":1422,"nodeType":"Block","src":"15050:64:0","statements":[{"expression":{"argumentTypes":null,"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1418,"name":"maximumBoostPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"15060:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1419,"name":"nextMaximumBoostPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"15082:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15060:45:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1421,"nodeType":"ExpressionStatement","src":"15060:45:0"}]}}]}}]},"documentation":null,"id":1427,"implemented":true,"kind":"function","modifiers":[],"name":"_checkpointEpoch","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1341,"nodeType":"ParameterList","parameters":[],"src":"14317:2:0"},"returnParameters":{"id":1342,"nodeType":"ParameterList","parameters":[],"src":"14329:0:0"},"scope":2569,"src":"14292:832:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1456,"nodeType":"Block","src":"15342:149:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1441,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15396:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15396:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1445,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"15416:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_PopLocker_$2569","typeString":"contract PopLocker"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PopLocker_$2569","typeString":"contract PopLocker"}],"id":1444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15408:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1443,"name":"address","nodeType":"ElementaryTypeName","src":"15408:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15408:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1447,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"15423:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1438,"name":"stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"15366:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":3948,"src":"15366:29:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3889_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3889_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15366:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1449,"nodeType":"ExpressionStatement","src":"15366:65:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1451,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"15455:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1452,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"15465:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1453,"name":"_spendRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"15474:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1450,"name":"_lock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"15449:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15449:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1455,"nodeType":"ExpressionStatement","src":"15449:37:0"}]},"documentation":null,"functionSelector":"e2ab691d","id":1457,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":1436,"modifierName":{"argumentTypes":null,"id":1435,"name":"nonReentrant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"15329:12:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"15329:12:0"}],"name":"lock","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"mutability":"mutable","name":"_account","nodeType":"VariableDeclaration","overrides":null,"scope":1457,"src":"15253:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1428,"name":"address","nodeType":"ElementaryTypeName","src":"15253:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1431,"mutability":"mutable","name":"_amount","nodeType":"VariableDeclaration","overrides":null,"scope":1457,"src":"15275:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1430,"name":"uint256","nodeType":"ElementaryTypeName","src":"15275:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1433,"mutability":"mutable","name":"_spendRatio","nodeType":"VariableDeclaration","overrides":null,"scope":1457,"src":"15296:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"15296:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15247:72:0"},"returnParameters":{"id":1437,"nodeType":"ParameterList","parameters":[],"src":"15342:0:0"},"scope":2569,"src":"15234:257:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1708,"nodeType":"Block","src":"15630:1895:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1470,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"15644:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15654:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15644:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"43616e6e6f74207374616b652030","id":1473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15657:16:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab","typeString":"literal_string \"Cannot stake 0\""},"value":"Cannot stake 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab","typeString":"literal_string \"Cannot stake 0\""}],"id":1469,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15636:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15636:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1475,"nodeType":"ExpressionStatement","src":"15636:38:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1477,"name":"_spendRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"15688:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"id":1478,"name":"maximumBoostPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"15703:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15688:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"6f766572206d6178207370656e64","id":1480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15724:16:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2afb1e03667a39b0044b1e3450403fc24387db680573a6b95fe90db40d14f7fd","typeString":"literal_string \"over max spend\""},"value":"over max spend"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2afb1e03667a39b0044b1e3450403fc24387db680573a6b95fe90db40d14f7fd","typeString":"literal_string \"over max spend\""}],"id":1476,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15680:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15680:61:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1482,"nodeType":"ExpressionStatement","src":"15680:61:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15755:11:0","subExpression":{"argumentTypes":null,"id":1484,"name":"isShutdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"15756:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"73687574646f776e","id":1486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15768:10:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_c65f40fc7078beb3b353668ff8733b25201df0cd149aba86eee41d90cd579918","typeString":"literal_string \"shutdown\""},"value":"shutdown"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c65f40fc7078beb3b353668ff8733b25201df0cd149aba86eee41d90cd579918","typeString":"literal_string \"shutdown\""}],"id":1483,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15747:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15747:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1488,"nodeType":"ExpressionStatement","src":"15747:32:0"},{"assignments":[1490],"declarations":[{"constant":false,"id":1490,"mutability":"mutable","name":"bal","nodeType":"VariableDeclaration","overrides":null,"scope":1708,"src":"15786:20:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances"},"typeName":{"contractScope":null,"id":1489,"name":"Balances","nodeType":"UserDefinedTypeName","referencedDeclaration":46,"src":"15786:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances"}},"value":null,"visibility":"internal"}],"id":1494,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1491,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"15809:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Balances_$46_storage_$","typeString":"mapping(address => struct PopLocker.Balances storage ref)"}},"id":1493,"indexExpression":{"argumentTypes":null,"id":1492,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"15818:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15809:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage","typeString":"struct PopLocker.Balances storage ref"}},"nodeType":"VariableDeclarationStatement","src":"15786:41:0"},{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":1495,"name":"_checkpointEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"15876:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15876:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1497,"nodeType":"ExpressionStatement","src":"15876:18:0"},{"assignments":[1499],"declarations":[{"constant":false,"id":1499,"mutability":"mutable","name":"spendAmount","nodeType":"VariableDeclaration","overrides":null,"scope":1708,"src":"15936:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1498,"name":"uint256","nodeType":"ElementaryTypeName","src":"15936:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1507,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1505,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"15987:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1502,"name":"_spendRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"15970:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1500,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"15958:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"15958:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15958:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":2687,"src":"15958:28:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15958:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15936:63:0"},{"assignments":[1509],"declarations":[{"constant":false,"id":1509,"mutability":"mutable","name":"boostRatio","nodeType":"VariableDeclaration","overrides":null,"scope":1708,"src":"16005:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1508,"name":"uint256","nodeType":"ElementaryTypeName","src":"16005:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1522,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1515,"name":"maximumBoostPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"16057:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16080:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16057:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"argumentTypes":null,"id":1519,"name":"maximumBoostPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"16088:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"16057:50:0","trueExpression":{"argumentTypes":null,"hexValue":"31","id":1518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16084:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1512,"name":"_spendRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"16040:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1510,"name":"boostRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"16026:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"16026:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16026:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":2687,"src":"16026:30:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16026:82:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16005:103:0"},{"assignments":[1524],"declarations":[{"constant":false,"id":1524,"mutability":"mutable","name":"lockAmount","nodeType":"VariableDeclaration","overrides":null,"scope":1708,"src":"16114:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":1523,"name":"uint112","nodeType":"ElementaryTypeName","src":"16114:7:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"value":null,"visibility":"internal"}],"id":1531,"initialValue":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1527,"name":"spendAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"16147:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1525,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"16135:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2638,"src":"16135:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16135:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"to112","nodeType":"MemberAccess","referencedDeclaration":2817,"src":"16135:30:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint112_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint112)"}},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16135:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"VariableDeclarationStatement","src":"16114:53:0"},{"assignments":[1533],"declarations":[{"constant":false,"id":1533,"mutability":"mutable","name":"boostedAmount","nodeType":"VariableDeclaration","overrides":null,"scope":1708,"src":"16173:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":1532,"name":"uint112","nodeType":"ElementaryTypeName","src":"16173:7:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"value":null,"visibility":"internal"}],"id":1546,"initialValue":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1541,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"16237:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1538,"name":"boostRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"16221:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1536,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"16209:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"16209:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16209:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":2687,"src":"16209:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16209:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1534,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"16197:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2616,"src":"16197:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16197:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"to112","nodeType":"MemberAccess","referencedDeclaration":2817,"src":"16197:59:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint112_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint112)"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16197:61:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"VariableDeclarationStatement","src":"16173:85:0"},{"expression":{"argumentTypes":null,"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1547,"name":"bal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"16289:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances storage pointer"}},"id":1549,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"locked","nodeType":"MemberAccess","referencedDeclaration":41,"src":"16289:10:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1553,"name":"lockAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"16317:10:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1550,"name":"bal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"16302:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances storage pointer"}},"id":1551,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"locked","nodeType":"MemberAccess","referencedDeclaration":41,"src":"16302:10:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3106,"src":"16302:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint112_$_t_uint112_$returns$_t_uint112_$bound_to$_t_uint112_$","typeString":"function (uint112,uint112) pure returns (uint112)"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16302:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"16289:39:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":1556,"nodeType":"ExpressionStatement","src":"16289:39:0"},{"expression":{"argumentTypes":null,"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1557,"name":"bal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"16334:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances storage pointer"}},"id":1559,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"boosted","nodeType":"MemberAccess","referencedDeclaration":43,"src":"16334:11:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1563,"name":"boostedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"16364:13:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1560,"name":"bal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"16348:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances storage pointer"}},"id":1561,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"boosted","nodeType":"MemberAccess","referencedDeclaration":43,"src":"16348:11:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3106,"src":"16348:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint112_$_t_uint112_$returns$_t_uint112_$bound_to$_t_uint112_$","typeString":"function (uint112,uint112) pure returns (uint112)"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16348:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"16334:44:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":1566,"nodeType":"ExpressionStatement","src":"16334:44:0"},{"expression":{"argumentTypes":null,"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1567,"name":"lockedSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"16413:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1570,"name":"lockAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"16445:10:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"argumentTypes":null,"id":1568,"name":"lockedSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"16428:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2616,"src":"16428:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16428:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16413:43:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1573,"nodeType":"ExpressionStatement","src":"16413:43:0"},{"expression":{"argumentTypes":null,"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1574,"name":"boostedSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"16462:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1577,"name":"boostedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"16496:13:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"argumentTypes":null,"id":1575,"name":"boostedSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"16478:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2616,"src":"16478:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16478:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16462:48:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1580,"nodeType":"ExpressionStatement","src":"16462:48:0"},{"assignments":[1582],"declarations":[{"constant":false,"id":1582,"mutability":"mutable","name":"currentEpoch","nodeType":"VariableDeclaration","overrides":null,"scope":1708,"src":"16563:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1581,"name":"uint256","nodeType":"ElementaryTypeName","src":"16563:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1591,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1589,"name":"rewardsDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"16627:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1586,"name":"rewardsDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"16606:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1583,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"16586:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":null,"src":"16586:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":2687,"src":"16586:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16586:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"16586:40:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16586:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16563:80:0"},{"assignments":[1593],"declarations":[{"constant":false,"id":1593,"mutability":"mutable","name":"unlockTime","nodeType":"VariableDeclaration","overrides":null,"scope":1708,"src":"16649:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1592,"name":"uint256","nodeType":"ElementaryTypeName","src":"16649:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1598,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1596,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"16687:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1594,"name":"currentEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"16670:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2616,"src":"16670:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16670:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16649:51:0"},{"assignments":[1600],"declarations":[{"constant":false,"id":1600,"mutability":"mutable","name":"idx","nodeType":"VariableDeclaration","overrides":null,"scope":1708,"src":"16706:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1599,"name":"uint256","nodeType":"ElementaryTypeName","src":"16706:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1605,"initialValue":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1601,"name":"userLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"16720:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_$","typeString":"mapping(address => struct PopLocker.LockedBalance storage ref[] storage ref)"}},"id":1603,"indexExpression":{"argumentTypes":null,"id":1602,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"16730:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16720:19:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage","typeString":"struct PopLocker.LockedBalance storage ref[] storage ref"}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"16720:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16706:40:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1606,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"16756:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16763:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16756:8:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1609,"name":"userLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"16768:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_$","typeString":"mapping(address => struct PopLocker.LockedBalance storage ref[] storage ref)"}},"id":1611,"indexExpression":{"argumentTypes":null,"id":1610,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"16778:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16768:19:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage","typeString":"struct PopLocker.LockedBalance storage ref[] storage ref"}},"id":1615,"indexExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1612,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"16788:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"hexValue":"31","id":1613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16794:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16788:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16768:28:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage","typeString":"struct PopLocker.LockedBalance storage ref"}},"id":1616,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"unlockTime","nodeType":"MemberAccess","referencedDeclaration":52,"src":"16768:39:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":1617,"name":"unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"16810:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16768:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16756:64:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1665,"nodeType":"Block","src":"16978:180:0","statements":[{"assignments":[1636],"declarations":[{"constant":false,"id":1636,"mutability":"mutable","name":"userL","nodeType":"VariableDeclaration","overrides":null,"scope":1665,"src":"16986:27:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage_ptr","typeString":"struct PopLocker.LockedBalance"},"typeName":{"contractScope":null,"id":1635,"name":"LockedBalance","nodeType":"UserDefinedTypeName","referencedDeclaration":53,"src":"16986:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage_ptr","typeString":"struct PopLocker.LockedBalance"}},"value":null,"visibility":"internal"}],"id":1644,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1637,"name":"userLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"17016:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_$","typeString":"mapping(address => struct PopLocker.LockedBalance storage ref[] storage ref)"}},"id":1639,"indexExpression":{"argumentTypes":null,"id":1638,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"17026:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17016:19:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage","typeString":"struct PopLocker.LockedBalance storage ref[] storage ref"}},"id":1643,"indexExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1640,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"17036:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"hexValue":"31","id":1641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17042:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17036:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17016:28:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage","typeString":"struct PopLocker.LockedBalance storage ref"}},"nodeType":"VariableDeclarationStatement","src":"16986:58:0"},{"expression":{"argumentTypes":null,"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1645,"name":"userL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"17052:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage_ptr","typeString":"struct PopLocker.LockedBalance storage pointer"}},"id":1647,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":48,"src":"17052:12:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1651,"name":"lockAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"17084:10:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1648,"name":"userL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"17067:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage_ptr","typeString":"struct PopLocker.LockedBalance storage pointer"}},"id":1649,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":48,"src":"17067:12:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3106,"src":"17067:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint112_$_t_uint112_$returns$_t_uint112_$bound_to$_t_uint112_$","typeString":"function (uint112,uint112) pure returns (uint112)"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17067:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"17052:43:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":1654,"nodeType":"ExpressionStatement","src":"17052:43:0"},{"expression":{"argumentTypes":null,"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1655,"name":"userL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"17103:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage_ptr","typeString":"struct PopLocker.LockedBalance storage pointer"}},"id":1657,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"boosted","nodeType":"MemberAccess","referencedDeclaration":50,"src":"17103:13:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1661,"name":"boostedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"17137:13:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1658,"name":"userL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"17119:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage_ptr","typeString":"struct PopLocker.LockedBalance storage pointer"}},"id":1659,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"boosted","nodeType":"MemberAccess","referencedDeclaration":50,"src":"17119:13:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3106,"src":"17119:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint112_$_t_uint112_$returns$_t_uint112_$bound_to$_t_uint112_$","typeString":"function (uint112,uint112) pure returns (uint112)"}},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17119:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"17103:48:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":1664,"nodeType":"ExpressionStatement","src":"17103:48:0"}]},"id":1666,"nodeType":"IfStatement","src":"16752:406:0","trueBody":{"id":1634,"nodeType":"Block","src":"16822:150:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1625,"name":"lockAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"16888:10:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},{"argumentTypes":null,"id":1626,"name":"boostedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"16909:13:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1629,"name":"unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"16943:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16936:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":1627,"name":"uint32","nodeType":"ElementaryTypeName","src":"16936:6:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16936:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"},{"typeIdentifier":"t_uint112","typeString":"uint112"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":1624,"name":"LockedBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"16864:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_LockedBalance_$53_storage_ptr_$","typeString":"type(struct PopLocker.LockedBalance storage pointer)"}},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["amount","boosted","unlockTime"],"nodeType":"FunctionCall","src":"16864:93:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_memory_ptr","typeString":"struct PopLocker.LockedBalance memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_LockedBalance_$53_memory_ptr","typeString":"struct PopLocker.LockedBalance memory"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1620,"name":"userLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"16830:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_$","typeString":"mapping(address => struct PopLocker.LockedBalance storage ref[] storage ref)"}},"id":1622,"indexExpression":{"argumentTypes":null,"id":1621,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"16840:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16830:19:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage","typeString":"struct PopLocker.LockedBalance storage ref[] storage ref"}},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","referencedDeclaration":null,"src":"16830:24:0","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_struct$_LockedBalance_$53_storage_$returns$__$","typeString":"function (struct PopLocker.LockedBalance storage ref)"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16830:135:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1633,"nodeType":"ExpressionStatement","src":"16830:135:0"}]}},{"assignments":[1668],"declarations":[{"constant":false,"id":1668,"mutability":"mutable","name":"e","nodeType":"VariableDeclaration","overrides":null,"scope":1708,"src":"17241:15:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Epoch_$63_storage_ptr","typeString":"struct PopLocker.Epoch"},"typeName":{"contractScope":null,"id":1667,"name":"Epoch","nodeType":"UserDefinedTypeName","referencedDeclaration":63,"src":"17241:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Epoch_$63_storage_ptr","typeString":"struct PopLocker.Epoch"}},"value":null,"visibility":"internal"}],"id":1675,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1669,"name":"epochs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"17259:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Epoch_$63_storage_$dyn_storage","typeString":"struct PopLocker.Epoch storage ref[] storage ref"}},"id":1674,"indexExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1670,"name":"epochs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"17266:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Epoch_$63_storage_$dyn_storage","typeString":"struct PopLocker.Epoch storage ref[] storage ref"}},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"17266:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"hexValue":"31","id":1672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17282:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17266:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17259:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_Epoch_$63_storage","typeString":"struct PopLocker.Epoch storage ref"}},"nodeType":"VariableDeclarationStatement","src":"17241:43:0"},{"expression":{"argumentTypes":null,"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1676,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"17290:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Epoch_$63_storage_ptr","typeString":"struct PopLocker.Epoch storage pointer"}},"id":1678,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"supply","nodeType":"MemberAccess","referencedDeclaration":60,"src":"17290:8:0","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1684,"name":"boostedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"17322:13:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":1683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17314:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":1682,"name":"uint224","nodeType":"ElementaryTypeName","src":"17314:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17314:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint224","typeString":"uint224"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1679,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"17301:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Epoch_$63_storage_ptr","typeString":"struct PopLocker.Epoch storage pointer"}},"id":1680,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"supply","nodeType":"MemberAccess","referencedDeclaration":60,"src":"17301:8:0","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3201,"src":"17301:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint224_$_t_uint224_$returns$_t_uint224_$bound_to$_t_uint224_$","typeString":"function (uint224,uint224) pure returns (uint224)"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17301:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"17290:47:0","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1688,"nodeType":"ExpressionStatement","src":"17290:47:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1689,"name":"spendAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"17373:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17387:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17373:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1700,"nodeType":"IfStatement","src":"17369:88:0","trueBody":{"id":1699,"nodeType":"Block","src":"17390:67:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1695,"name":"boostPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"17424:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1696,"name":"spendAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"17438:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1692,"name":"stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"17398:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3923,"src":"17398:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3889_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3889_$","typeString":"function (contract IERC20,address,uint256)"}},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17398:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1698,"nodeType":"ExpressionStatement","src":"17398:52:0"}]}},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1702,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"17475:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1703,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"17485:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1704,"name":"lockAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"17494:10:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},{"argumentTypes":null,"id":1705,"name":"boostedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"17506:13:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint112","typeString":"uint112"},{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":1701,"name":"Staked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"17468:6:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17468:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1707,"nodeType":"EmitStatement","src":"17463:57:0"}]},"documentation":null,"id":1709,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":1466,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"15620:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1467,"modifierName":{"argumentTypes":null,"id":1465,"name":"updateReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"15607:12:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"15607:22:0"}],"name":"_lock","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1459,"mutability":"mutable","name":"_account","nodeType":"VariableDeclaration","overrides":null,"scope":1709,"src":"15531:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1458,"name":"address","nodeType":"ElementaryTypeName","src":"15531:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1461,"mutability":"mutable","name":"_amount","nodeType":"VariableDeclaration","overrides":null,"scope":1709,"src":"15553:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1460,"name":"uint256","nodeType":"ElementaryTypeName","src":"15553:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1463,"mutability":"mutable","name":"_spendRatio","nodeType":"VariableDeclaration","overrides":null,"scope":1709,"src":"15574:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1462,"name":"uint256","nodeType":"ElementaryTypeName","src":"15574:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15525:72:0"},"returnParameters":{"id":1468,"nodeType":"ParameterList","parameters":[],"src":"15630:0:0"},"scope":2569,"src":"15511:2014:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1977,"nodeType":"Block","src":"17813:2776:0","statements":[{"assignments":[1730],"declarations":[{"constant":false,"id":1730,"mutability":"mutable","name":"locks","nodeType":"VariableDeclaration","overrides":null,"scope":1977,"src":"17819:29:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_ptr","typeString":"struct PopLocker.LockedBalance[]"},"typeName":{"baseType":{"contractScope":null,"id":1728,"name":"LockedBalance","nodeType":"UserDefinedTypeName","referencedDeclaration":53,"src":"17819:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage_ptr","typeString":"struct PopLocker.LockedBalance"}},"id":1729,"length":null,"nodeType":"ArrayTypeName","src":"17819:15:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_ptr","typeString":"struct PopLocker.LockedBalance[]"}},"value":null,"visibility":"internal"}],"id":1734,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1731,"name":"userLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"17851:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_$","typeString":"mapping(address => struct PopLocker.LockedBalance storage ref[] storage ref)"}},"id":1733,"indexExpression":{"argumentTypes":null,"id":1732,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"17861:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17851:19:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage","typeString":"struct PopLocker.LockedBalance storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"17819:51:0"},{"assignments":[1736],"declarations":[{"constant":false,"id":1736,"mutability":"mutable","name":"userBalance","nodeType":"VariableDeclaration","overrides":null,"scope":1977,"src":"17876:28:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances"},"typeName":{"contractScope":null,"id":1735,"name":"Balances","nodeType":"UserDefinedTypeName","referencedDeclaration":46,"src":"17876:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances"}},"value":null,"visibility":"internal"}],"id":1740,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1737,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"17907:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Balances_$46_storage_$","typeString":"mapping(address => struct PopLocker.Balances storage ref)"}},"id":1739,"indexExpression":{"argumentTypes":null,"id":1738,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"17916:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17907:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage","typeString":"struct PopLocker.Balances storage ref"}},"nodeType":"VariableDeclarationStatement","src":"17876:49:0"},{"assignments":[1742],"declarations":[{"constant":false,"id":1742,"mutability":"mutable","name":"locked","nodeType":"VariableDeclaration","overrides":null,"scope":1977,"src":"17931:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":1741,"name":"uint112","nodeType":"ElementaryTypeName","src":"17931:7:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"value":null,"visibility":"internal"}],"id":1743,"initialValue":null,"nodeType":"VariableDeclarationStatement","src":"17931:14:0"},{"assignments":[1745],"declarations":[{"constant":false,"id":1745,"mutability":"mutable","name":"boostedAmount","nodeType":"VariableDeclaration","overrides":null,"scope":1977,"src":"17951:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":1744,"name":"uint112","nodeType":"ElementaryTypeName","src":"17951:7:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"value":null,"visibility":"internal"}],"id":1746,"initialValue":null,"nodeType":"VariableDeclarationStatement","src":"17951:21:0"},{"assignments":[1748],"declarations":[{"constant":false,"id":1748,"mutability":"mutable","name":"length","nodeType":"VariableDeclaration","overrides":null,"scope":1977,"src":"17978:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1747,"name":"uint256","nodeType":"ElementaryTypeName","src":"17978:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1751,"initialValue":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1749,"name":"locks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"17995:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_ptr","typeString":"struct PopLocker.LockedBalance storage ref[] storage pointer"}},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"17995:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17978:29:0"},{"assignments":[1753],"declarations":[{"constant":false,"id":1753,"mutability":"mutable","name":"reward","nodeType":"VariableDeclaration","overrides":null,"scope":1977,"src":"18013:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1752,"name":"uint256","nodeType":"ElementaryTypeName","src":"18013:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1755,"initialValue":{"argumentTypes":null,"hexValue":"30","id":1754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18030:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18013:18:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1756,"name":"isShutdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"18042:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1757,"name":"locks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"18056:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_ptr","typeString":"struct PopLocker.LockedBalance storage ref[] storage pointer"}},"id":1761,"indexExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1758,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"18062:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"hexValue":"31","id":1759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18071:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18062:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18056:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage","typeString":"struct PopLocker.LockedBalance storage ref"}},"id":1762,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"unlockTime","nodeType":"MemberAccess","referencedDeclaration":52,"src":"18056:28:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1766,"name":"_checkDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"18108:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1763,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"18088:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":null,"src":"18088:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2638,"src":"18088:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18088:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18056:64:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18042:78:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1880,"nodeType":"Block","src":"18802:863:0","statements":[{"assignments":[1806],"declarations":[{"constant":false,"id":1806,"mutability":"mutable","name":"nextUnlockIndex","nodeType":"VariableDeclaration","overrides":null,"scope":1880,"src":"18923:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1805,"name":"uint32","nodeType":"ElementaryTypeName","src":"18923:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":null,"visibility":"internal"}],"id":1809,"initialValue":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1807,"name":"userBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"18948:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances storage pointer"}},"id":1808,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"nextUnlockIndex","nodeType":"MemberAccess","referencedDeclaration":45,"src":"18948:27:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"18923:52:0"},{"body":{"id":1872,"nodeType":"Block","src":"19034:539:0","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1820,"name":"locks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"19100:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_ptr","typeString":"struct PopLocker.LockedBalance storage ref[] storage pointer"}},"id":1822,"indexExpression":{"argumentTypes":null,"id":1821,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"19106:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19100:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage","typeString":"struct PopLocker.LockedBalance storage ref"}},"id":1823,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"unlockTime","nodeType":"MemberAccess","referencedDeclaration":52,"src":"19100:19:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1827,"name":"_checkDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"19142:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1824,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"19122:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":null,"src":"19122:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2638,"src":"19122:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19122:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19100:54:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1831,"nodeType":"IfStatement","src":"19096:65:0","trueBody":{"id":1830,"nodeType":"Break","src":"19156:5:0"}},{"expression":{"argumentTypes":null,"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1832,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"19208:6:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1835,"name":"locks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"19228:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_ptr","typeString":"struct PopLocker.LockedBalance storage ref[] storage pointer"}},"id":1837,"indexExpression":{"argumentTypes":null,"id":1836,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"19234:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19228:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage","typeString":"struct PopLocker.LockedBalance storage ref"}},"id":1838,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":48,"src":"19228:15:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"argumentTypes":null,"id":1833,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"19217:6:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3106,"src":"19217:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint112_$_t_uint112_$returns$_t_uint112_$bound_to$_t_uint112_$","typeString":"function (uint112,uint112) pure returns (uint112)"}},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19217:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"19208:36:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":1841,"nodeType":"ExpressionStatement","src":"19208:36:0"},{"expression":{"argumentTypes":null,"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1842,"name":"boostedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"19254:13:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1845,"name":"locks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"19288:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_ptr","typeString":"struct PopLocker.LockedBalance storage ref[] storage pointer"}},"id":1847,"indexExpression":{"argumentTypes":null,"id":1846,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"19294:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19288:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage","typeString":"struct PopLocker.LockedBalance storage ref"}},"id":1848,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"boosted","nodeType":"MemberAccess","referencedDeclaration":50,"src":"19288:16:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"argumentTypes":null,"id":1843,"name":"boostedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"19270:13:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3106,"src":"19270:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint112_$_t_uint112_$returns$_t_uint112_$bound_to$_t_uint112_$","typeString":"function (uint112,uint112) pure returns (uint112)"}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19270:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"19254:51:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":1851,"nodeType":"ExpressionStatement","src":"19254:51:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1852,"name":"_checkDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"19399:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19413:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19399:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1868,"nodeType":"IfStatement","src":"19395:111:0","trueBody":{"id":1867,"nodeType":"Block","src":"19416:90:0","statements":[{"expression":{"argumentTypes":null,"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1855,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"19428:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1859,"name":"_checkDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"19472:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1860,"name":"locks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"19485:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_ptr","typeString":"struct PopLocker.LockedBalance storage ref[] storage pointer"}},"id":1862,"indexExpression":{"argumentTypes":null,"id":1861,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"19491:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19485:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage","typeString":"struct PopLocker.LockedBalance storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_LockedBalance_$53_storage","typeString":"struct PopLocker.LockedBalance storage ref"}],"id":1858,"name":"_getDelayAdjustedReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"19448:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_struct$_LockedBalance_$53_storage_ptr_$returns$_t_uint256_$","typeString":"function (uint256,struct PopLocker.LockedBalance storage pointer) view returns (uint256)"}},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19448:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1856,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"19437:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2616,"src":"19437:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19437:58:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19428:67:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1866,"nodeType":"ExpressionStatement","src":"19428:67:0"}]}},{"expression":{"argumentTypes":null,"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19547:17:0","subExpression":{"argumentTypes":null,"id":1869,"name":"nextUnlockIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"19547:15:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":1871,"nodeType":"ExpressionStatement","src":"19547:17:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1814,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"19017:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":1815,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"19021:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19017:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1873,"initializationExpression":{"assignments":[1811],"declarations":[{"constant":false,"id":1811,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","overrides":null,"scope":1873,"src":"18988:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1810,"name":"uint256","nodeType":"ElementaryTypeName","src":"18988:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1813,"initialValue":{"argumentTypes":null,"id":1812,"name":"nextUnlockIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"19000:15:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"18988:27:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19029:3:0","subExpression":{"argumentTypes":null,"id":1817,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"19029:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1819,"nodeType":"ExpressionStatement","src":"19029:3:0"},"nodeType":"ForStatement","src":"18983:590:0"},{"expression":{"argumentTypes":null,"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1874,"name":"userBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"19613:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances storage pointer"}},"id":1876,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"nextUnlockIndex","nodeType":"MemberAccess","referencedDeclaration":45,"src":"19613:27:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1877,"name":"nextUnlockIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"19643:15:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"19613:45:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":1879,"nodeType":"ExpressionStatement","src":"19613:45:0"}]},"id":1881,"nodeType":"IfStatement","src":"18038:1627:0","trueBody":{"id":1804,"nodeType":"Block","src":"18122:674:0","statements":[{"expression":{"argumentTypes":null,"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1770,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"18203:6:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1771,"name":"userBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"18212:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances storage pointer"}},"id":1772,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"locked","nodeType":"MemberAccess","referencedDeclaration":41,"src":"18212:18:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"18203:27:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":1774,"nodeType":"ExpressionStatement","src":"18203:27:0"},{"expression":{"argumentTypes":null,"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1775,"name":"boostedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"18238:13:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1776,"name":"userBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"18254:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances storage pointer"}},"id":1777,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"boosted","nodeType":"MemberAccess","referencedDeclaration":43,"src":"18254:19:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"18238:35:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":1779,"nodeType":"ExpressionStatement","src":"18238:35:0"},{"expression":{"argumentTypes":null,"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1780,"name":"userBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"18323:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances storage pointer"}},"id":1782,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"nextUnlockIndex","nodeType":"MemberAccess","referencedDeclaration":45,"src":"18323:27:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"id":1783,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"18353:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"to32","nodeType":"MemberAccess","referencedDeclaration":2765,"src":"18353:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint32)"}},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18353:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"18323:43:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":1787,"nodeType":"ExpressionStatement","src":"18323:43:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1788,"name":"_checkDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"18690:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18704:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18690:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1803,"nodeType":"IfStatement","src":"18686:104:0","trueBody":{"id":1802,"nodeType":"Block","src":"18707:83:0","statements":[{"expression":{"argumentTypes":null,"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1791,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"18717:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1793,"name":"_checkDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"18750:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1794,"name":"locks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"18763:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LockedBalance_$53_storage_$dyn_storage_ptr","typeString":"struct PopLocker.LockedBalance storage ref[] storage pointer"}},"id":1798,"indexExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1795,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"18769:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"hexValue":"31","id":1796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18778:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18769:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18763:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage","typeString":"struct PopLocker.LockedBalance storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_LockedBalance_$53_storage","typeString":"struct PopLocker.LockedBalance storage ref"}],"id":1792,"name":"_getDelayAdjustedReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"18726:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_struct$_LockedBalance_$53_storage_ptr_$returns$_t_uint256_$","typeString":"function (uint256,struct PopLocker.LockedBalance storage pointer) view returns (uint256)"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18726:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18717:64:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1801,"nodeType":"ExpressionStatement","src":"18717:64:0"}]}}]}},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1883,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"19678:6:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19687:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19678:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"6e6f20657870206c6f636b73","id":1886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19690:14:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5f1d62cf240065b40cd9a62cce3108c9ed3b4fa2b2b0dd7805f31c7eae234137","typeString":"literal_string \"no exp locks\""},"value":"no exp locks"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5f1d62cf240065b40cd9a62cce3108c9ed3b4fa2b2b0dd7805f31c7eae234137","typeString":"literal_string \"no exp locks\""}],"id":1882,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19670:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19670:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1888,"nodeType":"ExpressionStatement","src":"19670:35:0"},{"expression":{"argumentTypes":null,"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1889,"name":"userBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"19758:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances storage pointer"}},"id":1891,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"locked","nodeType":"MemberAccess","referencedDeclaration":41,"src":"19758:18:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1895,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"19802:6:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1892,"name":"userBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"19779:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances storage pointer"}},"id":1893,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"locked","nodeType":"MemberAccess","referencedDeclaration":41,"src":"19779:18:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":3128,"src":"19779:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint112_$_t_uint112_$returns$_t_uint112_$bound_to$_t_uint112_$","typeString":"function (uint112,uint112) pure returns (uint112)"}},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19779:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"19758:51:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":1898,"nodeType":"ExpressionStatement","src":"19758:51:0"},{"expression":{"argumentTypes":null,"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1899,"name":"userBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"19815:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances storage pointer"}},"id":1901,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"boosted","nodeType":"MemberAccess","referencedDeclaration":43,"src":"19815:19:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1905,"name":"boostedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"19861:13:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1902,"name":"userBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"19837:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances storage pointer"}},"id":1903,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"boosted","nodeType":"MemberAccess","referencedDeclaration":43,"src":"19837:19:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":3128,"src":"19837:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint112_$_t_uint112_$returns$_t_uint112_$bound_to$_t_uint112_$","typeString":"function (uint112,uint112) pure returns (uint112)"}},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19837:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"19815:60:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":1908,"nodeType":"ExpressionStatement","src":"19815:60:0"},{"expression":{"argumentTypes":null,"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1909,"name":"lockedSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"19881:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1912,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"19913:6:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"argumentTypes":null,"id":1910,"name":"lockedSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"19896:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2638,"src":"19896:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19896:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19881:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1915,"nodeType":"ExpressionStatement","src":"19881:39:0"},{"expression":{"argumentTypes":null,"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1916,"name":"boostedSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"19926:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1919,"name":"boostedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"19960:13:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"argumentTypes":null,"id":1917,"name":"boostedSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"19942:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2638,"src":"19942:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19942:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19926:48:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1922,"nodeType":"ExpressionStatement","src":"19926:48:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1923,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"20014:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20023:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20014:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1949,"nodeType":"IfStatement","src":"20010:325:0","trueBody":{"id":1948,"nodeType":"Block","src":"20026:309:0","statements":[{"expression":{"argumentTypes":null,"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1926,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"20153:6:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"id":1929,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"20173:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"to112","nodeType":"MemberAccess","referencedDeclaration":2817,"src":"20173:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint112_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint112)"}},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20173:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"argumentTypes":null,"id":1927,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"20162:6:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":3128,"src":"20162:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint112_$_t_uint112_$returns$_t_uint112_$bound_to$_t_uint112_$","typeString":"function (uint112,uint112) pure returns (uint112)"}},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20162:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"20153:35:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":1934,"nodeType":"ExpressionStatement","src":"20153:35:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1938,"name":"_rewardAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"20247:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1939,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"20263:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1935,"name":"stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"20221:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3923,"src":"20221:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3889_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3889_$","typeString":"function (contract IERC20,address,uint256)"}},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20221:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1941,"nodeType":"ExpressionStatement","src":"20221:49:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1943,"name":"_rewardAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"20295:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1944,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"20311:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1945,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"20321:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1942,"name":"KickReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"20284:10:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20284:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1947,"nodeType":"EmitStatement","src":"20279:49:0"}]}},{"condition":{"argumentTypes":null,"id":1950,"name":"_relock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"20376:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1975,"nodeType":"Block","src":"20484:101:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1966,"name":"_withdrawTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"20518:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1967,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"20531:6:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"argumentTypes":null,"id":1963,"name":"stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"20492:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3923,"src":"20492:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3889_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3889_$","typeString":"function (contract IERC20,address,uint256)"}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20492:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1969,"nodeType":"ExpressionStatement","src":"20492:46:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1971,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"20561:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1972,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"20571:6:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":1970,"name":"Withdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2534,"src":"20551:9:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20551:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1974,"nodeType":"EmitStatement","src":"20546:32:0"}]},"id":1976,"nodeType":"IfStatement","src":"20372:213:0","trueBody":{"id":1962,"nodeType":"Block","src":"20385:93:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1952,"name":"_withdrawTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"20399:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1953,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"20412:6:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},{"argumentTypes":null,"id":1954,"name":"_spendRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"20420:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint112","typeString":"uint112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1951,"name":"_lock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"20393:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20393:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1956,"nodeType":"ExpressionStatement","src":"20393:39:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1958,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"20454:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1959,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"20464:6:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":1957,"name":"Relocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"20445:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20445:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1961,"nodeType":"EmitStatement","src":"20440:31:0"}]}}]},"documentation":null,"id":1978,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":1724,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"17803:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1725,"modifierName":{"argumentTypes":null,"id":1723,"name":"updateReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"17790:12:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"17790:22:0"}],"name":"_processExpiredLocks","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1711,"mutability":"mutable","name":"_account","nodeType":"VariableDeclaration","overrides":null,"scope":1978,"src":"17639:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1710,"name":"address","nodeType":"ElementaryTypeName","src":"17639:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1713,"mutability":"mutable","name":"_relock","nodeType":"VariableDeclaration","overrides":null,"scope":1978,"src":"17661:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1712,"name":"bool","nodeType":"ElementaryTypeName","src":"17661:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":1715,"mutability":"mutable","name":"_spendRatio","nodeType":"VariableDeclaration","overrides":null,"scope":1978,"src":"17679:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1714,"name":"uint256","nodeType":"ElementaryTypeName","src":"17679:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1717,"mutability":"mutable","name":"_withdrawTo","nodeType":"VariableDeclaration","overrides":null,"scope":1978,"src":"17704:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1716,"name":"address","nodeType":"ElementaryTypeName","src":"17704:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1719,"mutability":"mutable","name":"_rewardAddress","nodeType":"VariableDeclaration","overrides":null,"scope":1978,"src":"17729:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1718,"name":"address","nodeType":"ElementaryTypeName","src":"17729:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1721,"mutability":"mutable","name":"_checkDelay","nodeType":"VariableDeclaration","overrides":null,"scope":1978,"src":"17757:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1720,"name":"uint256","nodeType":"ElementaryTypeName","src":"17757:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17633:147:0"},"returnParameters":{"id":1726,"nodeType":"ParameterList","parameters":[],"src":"17813:0:0"},"scope":2569,"src":"17604:2985:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2040,"nodeType":"Block","src":"20730:360:0","statements":[{"assignments":[1988],"declarations":[{"constant":false,"id":1988,"mutability":"mutable","name":"currentEpoch","nodeType":"VariableDeclaration","overrides":null,"scope":2040,"src":"20736:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1987,"name":"uint256","nodeType":"ElementaryTypeName","src":"20736:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":2000,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1998,"name":"rewardsDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"20817:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1995,"name":"rewardsDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"20796:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1992,"name":"_checkDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"20779:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1989,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"20759:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":null,"src":"20759:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2638,"src":"20759:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20759:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":2687,"src":"20759:36:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20759:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"20759:57:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20759:74:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20736:97:0"},{"assignments":[2002],"declarations":[{"constant":false,"id":2002,"mutability":"mutable","name":"epochsover","nodeType":"VariableDeclaration","overrides":null,"scope":2040,"src":"20839:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2001,"name":"uint256","nodeType":"ElementaryTypeName","src":"20839:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":2014,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2012,"name":"rewardsDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"20916:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2007,"name":"lockedBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"20885:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage_ptr","typeString":"struct PopLocker.LockedBalance storage pointer"}},"id":2008,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"unlockTime","nodeType":"MemberAccess","referencedDeclaration":52,"src":"20885:24:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":2006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20877:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2005,"name":"uint256","nodeType":"ElementaryTypeName","src":"20877:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20877:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2003,"name":"currentEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"20860:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2638,"src":"20860:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20860:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":2687,"src":"20860:55:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20860:72:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20839:93:0"},{"assignments":[2016],"declarations":[{"constant":false,"id":2016,"mutability":"mutable","name":"rRate","nodeType":"VariableDeclaration","overrides":null,"scope":2040,"src":"20938:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2015,"name":"uint256","nodeType":"ElementaryTypeName","src":"20938:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":2027,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2021,"name":"epochsover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"20986:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"hexValue":"31","id":2022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20999:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20986:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2019,"name":"kickRewardPerEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"20963:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"20963:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20963:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2025,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"21003:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2017,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"20954:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3456_$","typeString":"type(library Math)"}},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","referencedDeclaration":3422,"src":"20954:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20954:61:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20938:77:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2037,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"21073:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2034,"name":"rRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"21062:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2030,"name":"lockedBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"21036:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage_ptr","typeString":"struct PopLocker.LockedBalance storage pointer"}},"id":2031,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":48,"src":"21036:20:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":2029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21028:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2028,"name":"uint256","nodeType":"ElementaryTypeName","src":"21028:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21028:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"21028:33:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21028:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":2687,"src":"21028:44:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21028:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1986,"id":2039,"nodeType":"Return","src":"21021:64:0"}]},"documentation":null,"id":2041,"implemented":true,"kind":"function","modifiers":[],"name":"_getDelayAdjustedReward","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"_checkDelay","nodeType":"VariableDeclaration","overrides":null,"scope":2041,"src":"20626:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1979,"name":"uint256","nodeType":"ElementaryTypeName","src":"20626:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1982,"mutability":"mutable","name":"lockedBalance","nodeType":"VariableDeclaration","overrides":null,"scope":2041,"src":"20647:35:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage_ptr","typeString":"struct PopLocker.LockedBalance"},"typeName":{"contractScope":null,"id":1981,"name":"LockedBalance","nodeType":"UserDefinedTypeName","referencedDeclaration":53,"src":"20647:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_LockedBalance_$53_storage_ptr","typeString":"struct PopLocker.LockedBalance"}},"value":null,"visibility":"internal"}],"src":"20625:58:0"},"returnParameters":{"id":1986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1985,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":2041,"src":"20719:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1984,"name":"uint256","nodeType":"ElementaryTypeName","src":"20719:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"20718:9:0"},"scope":2569,"src":"20593:497:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2063,"nodeType":"Block","src":"21299:93:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2053,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21326:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"21326:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":2055,"name":"_relock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"21338:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"id":2056,"name":"_spendRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"21347:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2057,"name":"_withdrawTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"21360:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2058,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21373:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"21373:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"hexValue":"30","id":2060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21385:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2052,"name":"_processExpiredLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"21305:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bool_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,bool,uint256,address,address,uint256)"}},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21305:82:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2062,"nodeType":"ExpressionStatement","src":"21305:82:0"}]},"documentation":null,"functionSelector":"70e664cd","id":2064,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":2050,"modifierName":{"argumentTypes":null,"id":2049,"name":"nonReentrant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"21286:12:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"21286:12:0"}],"name":"processExpiredLocks","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":2048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2043,"mutability":"mutable","name":"_relock","nodeType":"VariableDeclaration","overrides":null,"scope":2064,"src":"21210:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2042,"name":"bool","nodeType":"ElementaryTypeName","src":"21210:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":2045,"mutability":"mutable","name":"_spendRatio","nodeType":"VariableDeclaration","overrides":null,"scope":2064,"src":"21228:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2044,"name":"uint256","nodeType":"ElementaryTypeName","src":"21228:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2047,"mutability":"mutable","name":"_withdrawTo","nodeType":"VariableDeclaration","overrides":null,"scope":2064,"src":"21253:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2046,"name":"address","nodeType":"ElementaryTypeName","src":"21253:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"21204:72:0"},"returnParameters":{"id":2051,"nodeType":"ParameterList","parameters":[],"src":"21299:0:0"},"scope":2569,"src":"21176:216:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2083,"nodeType":"Block","src":"21543:82:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2072,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21570:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"21570:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":2074,"name":"_relock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"21582:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"30","id":2075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21591:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2076,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21594:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"21594:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2078,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21606:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"21606:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"hexValue":"30","id":2080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21618:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2071,"name":"_processExpiredLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"21549:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bool_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,bool,uint256,address,address,uint256)"}},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21549:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2082,"nodeType":"ExpressionStatement","src":"21549:71:0"}]},"documentation":null,"functionSelector":"312ff839","id":2084,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":2069,"modifierName":{"argumentTypes":null,"id":2068,"name":"nonReentrant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"21530:12:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"21530:12:0"}],"name":"processExpiredLocks","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":2067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2066,"mutability":"mutable","name":"_relock","nodeType":"VariableDeclaration","overrides":null,"scope":2084,"src":"21507:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2065,"name":"bool","nodeType":"ElementaryTypeName","src":"21507:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"21506:14:0"},"returnParameters":{"id":2070,"nodeType":"ParameterList","parameters":[],"src":"21543:0:0"},"scope":2569,"src":"21478:147:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2104,"nodeType":"Block","src":"21695:178:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2092,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"21784:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"hexValue":"66616c7365","id":2093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21794:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"argumentTypes":null,"hexValue":"30","id":2094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21801:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"argumentTypes":null,"id":2095,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"21804:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2096,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21814:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"21814:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2100,"name":"kickRewardEpochDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"21846:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2098,"name":"rewardsDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"21826:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"21826:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21826:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2091,"name":"_processExpiredLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"21763:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bool_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,bool,uint256,address,address,uint256)"}},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21763:105:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2103,"nodeType":"ExpressionStatement","src":"21763:105:0"}]},"documentation":null,"functionSelector":"887c7dc5","id":2105,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":2089,"modifierName":{"argumentTypes":null,"id":2088,"name":"nonReentrant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"21682:12:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"21682:12:0"}],"name":"kickExpiredLocks","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":2087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2086,"mutability":"mutable","name":"_account","nodeType":"VariableDeclaration","overrides":null,"scope":2105,"src":"21655:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2085,"name":"address","nodeType":"ElementaryTypeName","src":"21655:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"21654:18:0"},"returnParameters":{"id":2090,"nodeType":"ParameterList","parameters":[],"src":"21695:0:0"},"scope":2569,"src":"21629:244:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2197,"nodeType":"Block","src":"21988:546:0","statements":[{"body":{"id":2195,"nodeType":"Block","src":"22040:490:0","statements":[{"assignments":[2126],"declarations":[{"constant":false,"id":2126,"mutability":"mutable","name":"_rewardsToken","nodeType":"VariableDeclaration","overrides":null,"scope":2195,"src":"22048:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2125,"name":"address","nodeType":"ElementaryTypeName","src":"22048:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"id":2130,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2127,"name":"rewardTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"22072:12:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2129,"indexExpression":{"argumentTypes":null,"id":2128,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"22085:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22072:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"22048:39:0"},{"assignments":[2132],"declarations":[{"constant":false,"id":2132,"mutability":"mutable","name":"reward","nodeType":"VariableDeclaration","overrides":null,"scope":2195,"src":"22095:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2131,"name":"uint256","nodeType":"ElementaryTypeName","src":"22095:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":2138,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2133,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"22112:7:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2135,"indexExpression":{"argumentTypes":null,"id":2134,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"22120:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22112:17:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2137,"indexExpression":{"argumentTypes":null,"id":2136,"name":"_rewardsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"22130:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22112:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22095:49:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2139,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"22156:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":2140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22165:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22156:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":2194,"nodeType":"IfStatement","src":"22152:372:0","trueBody":{"id":2193,"nodeType":"Block","src":"22168:356:0","statements":[{"expression":{"argumentTypes":null,"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2142,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"22178:7:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2145,"indexExpression":{"argumentTypes":null,"id":2143,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"22186:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22178:17:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2146,"indexExpression":{"argumentTypes":null,"id":2144,"name":"_rewardsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"22196:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"22178:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"30","id":2147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22213:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22178:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2149,"nodeType":"ExpressionStatement","src":"22178:36:0"},{"assignments":[2151],"declarations":[{"constant":false,"id":2151,"mutability":"mutable","name":"payout","nodeType":"VariableDeclaration","overrides":null,"scope":2193,"src":"22224:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2150,"name":"uint256","nodeType":"ElementaryTypeName","src":"22224:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":2159,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"3130","id":2156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22260:2:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}],"id":2155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22252:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2154,"name":"uint256","nodeType":"ElementaryTypeName","src":"22252:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22252:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2152,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"22241:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":2687,"src":"22241:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22241:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22224:40:0"},{"assignments":[2161],"declarations":[{"constant":false,"id":2161,"mutability":"mutable","name":"escrowed","nodeType":"VariableDeclaration","overrides":null,"scope":2193,"src":"22274:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2160,"name":"uint256","nodeType":"ElementaryTypeName","src":"22274:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":2169,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"39","id":2166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22312:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"}],"id":2165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22304:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2164,"name":"uint256","nodeType":"ElementaryTypeName","src":"22304:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22304:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2162,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"22293:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"22293:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22293:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22274:41:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2174,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"22360:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2175,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"22370:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2171,"name":"_rewardsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"22332:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2170,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"22325:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3889_$","typeString":"type(contract IERC20)"}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22325:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3923,"src":"22325:34:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3889_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3889_$","typeString":"function (contract IERC20,address,uint256)"}},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22325:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2177,"nodeType":"ExpressionStatement","src":"22325:52:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2182,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"22422:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2183,"name":"escrowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"22432:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2184,"name":"escrowDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":76,"src":"22442:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2179,"name":"rewardsEscrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"22402:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardsEscrow_$2591","typeString":"contract IRewardsEscrow"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IRewardsEscrow_$2591","typeString":"contract IRewardsEscrow"}],"id":2178,"name":"IRewardsEscrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"22387:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRewardsEscrow_$2591_$","typeString":"type(contract IRewardsEscrow)"}},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22387:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRewardsEscrow_$2591","typeString":"contract IRewardsEscrow"}},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"lock","nodeType":"MemberAccess","referencedDeclaration":2580,"src":"22387:34:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) external"}},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22387:70:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2186,"nodeType":"ExpressionStatement","src":"22387:70:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2188,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"22483:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2189,"name":"_rewardsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"22493:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2190,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"22508:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2187,"name":"RewardPaid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"22472:10:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22472:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2192,"nodeType":"EmitStatement","src":"22467:48:0"}]}}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2118,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"22010:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2119,"name":"rewardTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"22014:12:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"22014:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22010:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2196,"initializationExpression":{"assignments":[2116],"declarations":[{"constant":false,"id":2116,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","overrides":null,"scope":2196,"src":"21999:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2115,"name":"uint256","nodeType":"ElementaryTypeName","src":"21999:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":2117,"initialValue":null,"nodeType":"VariableDeclarationStatement","src":"21999:9:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"22035:3:0","subExpression":{"argumentTypes":null,"id":2122,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"22035:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2124,"nodeType":"ExpressionStatement","src":"22035:3:0"},"nodeType":"ForStatement","src":"21994:536:0"}]},"documentation":null,"functionSelector":"c00007b0","id":2198,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":2110,"modifierName":{"argumentTypes":null,"id":2109,"name":"nonReentrant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"21952:12:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"21952:12:0"},{"arguments":[{"argumentTypes":null,"id":2112,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"21978:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2113,"modifierName":{"argumentTypes":null,"id":2111,"name":"updateReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"21965:12:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"21965:22:0"}],"name":"getReward","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":2108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2107,"mutability":"mutable","name":"_account","nodeType":"VariableDeclaration","overrides":null,"scope":2198,"src":"21927:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2106,"name":"address","nodeType":"ElementaryTypeName","src":"21927:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"21926:18:0"},"returnParameters":{"id":2114,"nodeType":"ParameterList","parameters":[],"src":"21988:0:0"},"scope":2569,"src":"21908:626:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2285,"nodeType":"Block","src":"22662:524:0","statements":[{"assignments":[2206],"declarations":[{"constant":false,"id":2206,"mutability":"mutable","name":"rdata","nodeType":"VariableDeclaration","overrides":null,"scope":2285,"src":"22668:20:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$39_storage_ptr","typeString":"struct PopLocker.Reward"},"typeName":{"contractScope":null,"id":2205,"name":"Reward","nodeType":"UserDefinedTypeName","referencedDeclaration":39,"src":"22668:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$39_storage_ptr","typeString":"struct PopLocker.Reward"}},"value":null,"visibility":"internal"}],"id":2210,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2207,"name":"rewardData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"22691:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Reward_$39_storage_$","typeString":"mapping(address => struct PopLocker.Reward storage ref)"}},"id":2209,"indexExpression":{"argumentTypes":null,"id":2208,"name":"_rewardsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"22702:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22691:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$39_storage","typeString":"struct PopLocker.Reward storage ref"}},"nodeType":"VariableDeclarationStatement","src":"22668:48:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2211,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"22727:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":null,"src":"22727:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2213,"name":"rdata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"22746:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$39_storage_ptr","typeString":"struct PopLocker.Reward storage pointer"}},"id":2214,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"periodFinish","nodeType":"MemberAccess","referencedDeclaration":32,"src":"22746:18:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"22727:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2262,"nodeType":"Block","src":"22842:218:0","statements":[{"assignments":[2229],"declarations":[{"constant":false,"id":2229,"mutability":"mutable","name":"remaining","nodeType":"VariableDeclaration","overrides":null,"scope":2262,"src":"22850:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2228,"name":"uint256","nodeType":"ElementaryTypeName","src":"22850:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":2239,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2236,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"22902:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":null,"src":"22902:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2232,"name":"rdata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"22878:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$39_storage_ptr","typeString":"struct PopLocker.Reward storage pointer"}},"id":2233,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"periodFinish","nodeType":"MemberAccess","referencedDeclaration":32,"src":"22878:18:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint40","typeString":"uint40"}],"id":2231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22870:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2230,"name":"uint256","nodeType":"ElementaryTypeName","src":"22870:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22870:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2638,"src":"22870:31:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22870:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22850:68:0"},{"assignments":[2241],"declarations":[{"constant":false,"id":2241,"mutability":"mutable","name":"leftover","nodeType":"VariableDeclaration","overrides":null,"scope":2262,"src":"22926:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2240,"name":"uint256","nodeType":"ElementaryTypeName","src":"22926:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":2247,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2244,"name":"rdata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"22959:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$39_storage_ptr","typeString":"struct PopLocker.Reward storage pointer"}},"id":2245,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rewardRate","nodeType":"MemberAccess","referencedDeclaration":34,"src":"22959:16:0","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint208","typeString":"uint208"}],"expression":{"argumentTypes":null,"id":2242,"name":"remaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"22945:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"22945:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22945:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22926:50:0"},{"expression":{"argumentTypes":null,"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2248,"name":"rdata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"22984:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$39_storage_ptr","typeString":"struct PopLocker.Reward storage pointer"}},"id":2250,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"rewardRate","nodeType":"MemberAccess","referencedDeclaration":34,"src":"22984:16:0","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2256,"name":"rewardsDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"23029:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2253,"name":"leftover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"23015:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2251,"name":"_reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"23003:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2616,"src":"23003:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23003:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":2687,"src":"23003:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23003:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"to208","nodeType":"MemberAccess","referencedDeclaration":2869,"src":"23003:48:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint208)"}},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23003:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"22984:69:0","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":2261,"nodeType":"ExpressionStatement","src":"22984:69:0"}]},"id":2263,"nodeType":"IfStatement","src":"22723:337:0","trueBody":{"id":2227,"nodeType":"Block","src":"22766:70:0","statements":[{"expression":{"argumentTypes":null,"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2216,"name":"rdata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"22774:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$39_storage_ptr","typeString":"struct PopLocker.Reward storage pointer"}},"id":2218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"rewardRate","nodeType":"MemberAccess","referencedDeclaration":34,"src":"22774:16:0","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2221,"name":"rewardsDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"22805:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2219,"name":"_reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"22793:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":2687,"src":"22793:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22793:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"to208","nodeType":"MemberAccess","referencedDeclaration":2869,"src":"22793:34:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint208)"}},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22793:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"22774:55:0","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":2226,"nodeType":"ExpressionStatement","src":"22774:55:0"}]}},{"expression":{"argumentTypes":null,"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2264,"name":"rdata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"23066:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$39_storage_ptr","typeString":"struct PopLocker.Reward storage pointer"}},"id":2266,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"lastUpdateTime","nodeType":"MemberAccess","referencedDeclaration":36,"src":"23066:20:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2267,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"23089:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":null,"src":"23089:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"to40","nodeType":"MemberAccess","referencedDeclaration":2791,"src":"23089:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint40_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint40)"}},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23089:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"23066:45:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"id":2272,"nodeType":"ExpressionStatement","src":"23066:45:0"},{"expression":{"argumentTypes":null,"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2273,"name":"rdata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"23117:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$39_storage_ptr","typeString":"struct PopLocker.Reward storage pointer"}},"id":2275,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"periodFinish","nodeType":"MemberAccess","referencedDeclaration":32,"src":"23117:18:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2279,"name":"rewardsDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"23158:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2276,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"23138:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":null,"src":"23138:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2616,"src":"23138:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23138:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"to40","nodeType":"MemberAccess","referencedDeclaration":2791,"src":"23138:41:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint40_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint40)"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23138:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"23117:64:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"id":2284,"nodeType":"ExpressionStatement","src":"23117:64:0"}]},"documentation":null,"id":2286,"implemented":true,"kind":"function","modifiers":[],"name":"_notifyReward","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":2203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2200,"mutability":"mutable","name":"_rewardsToken","nodeType":"VariableDeclaration","overrides":null,"scope":2286,"src":"22613:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2199,"name":"address","nodeType":"ElementaryTypeName","src":"22613:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2202,"mutability":"mutable","name":"_reward","nodeType":"VariableDeclaration","overrides":null,"scope":2286,"src":"22636:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2201,"name":"uint256","nodeType":"ElementaryTypeName","src":"22636:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"22612:40:0"},"returnParameters":{"id":2204,"nodeType":"ParameterList","parameters":[],"src":"22662:0:0"},"scope":2569,"src":"22590:596:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2339,"nodeType":"Block","src":"23292:455:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2300,"name":"rewardDistributors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"23306:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2302,"indexExpression":{"argumentTypes":null,"id":2301,"name":"_rewardsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"23325:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23306:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2305,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2303,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"23340:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"23340:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23306:45:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"6e6f7420617574686f72697a6564","id":2306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23353:16:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_8aed0440c9cacb4460ecdd12f6aff03c27cace39666d71f0946a6f3e9022a4a1","typeString":"literal_string \"not authorized\""},"value":"not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8aed0440c9cacb4460ecdd12f6aff03c27cace39666d71f0946a6f3e9022a4a1","typeString":"literal_string \"not authorized\""}],"id":2299,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23298:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23298:72:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2308,"nodeType":"ExpressionStatement","src":"23298:72:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2310,"name":"_reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"23384:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":2311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23394:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23384:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f20726577617264","id":2313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23397:11:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_8a7329cf97f73d96eac78b581b8b9e09f22599656519112eec8f28fd84377962","typeString":"literal_string \"No reward\""},"value":"No reward"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a7329cf97f73d96eac78b581b8b9e09f22599656519112eec8f28fd84377962","typeString":"literal_string \"No reward\""}],"id":2309,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23376:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23376:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2315,"nodeType":"ExpressionStatement","src":"23376:33:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2317,"name":"_rewardsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"23430:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2318,"name":"_reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"23445:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2316,"name":"_notifyReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"23416:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23416:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2320,"nodeType":"ExpressionStatement","src":"23416:37:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2325,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"23660:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"23660:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2329,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"23680:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_PopLocker_$2569","typeString":"contract PopLocker"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PopLocker_$2569","typeString":"contract PopLocker"}],"id":2328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23672:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2327,"name":"address","nodeType":"ElementaryTypeName","src":"23672:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23672:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2331,"name":"_reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"23687:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2322,"name":"_rewardsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"23628:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2321,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"23621:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3889_$","typeString":"type(contract IERC20)"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23621:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":3948,"src":"23621:38:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3889_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3889_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23621:74:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2333,"nodeType":"ExpressionStatement","src":"23621:74:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2335,"name":"_rewardsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"23719:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2336,"name":"_reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"23734:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2334,"name":"RewardAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"23707:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23707:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2338,"nodeType":"EmitStatement","src":"23702:40:0"}]},"documentation":null,"functionSelector":"b66503cf","id":2340,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":2295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23288:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23280:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2293,"name":"address","nodeType":"ElementaryTypeName","src":"23280:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23280:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":2297,"modifierName":{"argumentTypes":null,"id":2292,"name":"updateReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"23267:12:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"23267:24:0"}],"name":"notifyRewardAmount","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":2291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2288,"mutability":"mutable","name":"_rewardsToken","nodeType":"VariableDeclaration","overrides":null,"scope":2340,"src":"23218:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2287,"name":"address","nodeType":"ElementaryTypeName","src":"23218:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2290,"mutability":"mutable","name":"_reward","nodeType":"VariableDeclaration","overrides":null,"scope":2340,"src":"23241:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2289,"name":"uint256","nodeType":"ElementaryTypeName","src":"23241:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"23217:40:0"},"returnParameters":{"id":2298,"nodeType":"ParameterList","parameters":[],"src":"23292:0:0"},"scope":2569,"src":"23190:557:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2361,"nodeType":"Block","src":"23820:128:0","statements":[{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2350,"name":"rewardsEscrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"23860:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardsEscrow_$2591","typeString":"contract IRewardsEscrow"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IRewardsEscrow_$2591","typeString":"contract IRewardsEscrow"}],"id":2349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23852:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2348,"name":"address","nodeType":"ElementaryTypeName","src":"23852:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23852:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2352,"name":"_rewardsEscrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"23876:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2347,"name":"RewardsEscrowUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"23831:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23831:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2354,"nodeType":"EmitStatement","src":"23826:65:0"},{"expression":{"argumentTypes":null,"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":2355,"name":"rewardsEscrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"23897:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardsEscrow_$2591","typeString":"contract IRewardsEscrow"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2357,"name":"_rewardsEscrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"23928:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2356,"name":"IRewardsEscrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"23913:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRewardsEscrow_$2591_$","typeString":"type(contract IRewardsEscrow)"}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23913:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRewardsEscrow_$2591","typeString":"contract IRewardsEscrow"}},"src":"23897:46:0","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardsEscrow_$2591","typeString":"contract IRewardsEscrow"}},"id":2360,"nodeType":"ExpressionStatement","src":"23897:46:0"}]},"documentation":null,"functionSelector":"e465fe80","id":2362,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":2345,"modifierName":{"argumentTypes":null,"id":2344,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"23810:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"23810:9:0"}],"name":"setRewardsEscrow","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":2343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2342,"mutability":"mutable","name":"_rewardsEscrow","nodeType":"VariableDeclaration","overrides":null,"scope":2362,"src":"23777:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2341,"name":"address","nodeType":"ElementaryTypeName","src":"23777:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"23776:24:0"},"returnParameters":{"id":2346,"nodeType":"ParameterList","parameters":[],"src":"23820:0:0"},"scope":2569,"src":"23751:197:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2405,"nodeType":"Block","src":"24142:295:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2372,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"24156:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2375,"name":"stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"24181:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}],"id":2374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24173:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2373,"name":"address","nodeType":"ElementaryTypeName","src":"24173:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24173:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"24156:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"43616e6e6f74207769746864726177207374616b696e6720746f6b656e","id":2378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24196:31:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_b9d9f8bfc8081622ab160fe1613e3043a68958c71e9451f507872d2a1d2f67a5","typeString":"literal_string \"Cannot withdraw staking token\""},"value":"Cannot withdraw staking token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b9d9f8bfc8081622ab160fe1613e3043a68958c71e9451f507872d2a1d2f67a5","typeString":"literal_string \"Cannot withdraw staking token\""}],"id":2371,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24148:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24148:80:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2380,"nodeType":"ExpressionStatement","src":"24148:80:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint40","typeString":"uint40"},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2382,"name":"rewardData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"24242:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Reward_$39_storage_$","typeString":"mapping(address => struct PopLocker.Reward storage ref)"}},"id":2384,"indexExpression":{"argumentTypes":null,"id":2383,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"24253:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24242:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$39_storage","typeString":"struct PopLocker.Reward storage ref"}},"id":2385,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lastUpdateTime","nodeType":"MemberAccess","referencedDeclaration":36,"src":"24242:40:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":2386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24286:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24242:45:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"43616e6e6f742077697468647261772072657761726420746f6b656e","id":2388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24289:30:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_eb5f5276775e13a63c4aee40a9078f9944af0bdef5ddfb94324b6e130781a014","typeString":"literal_string \"Cannot withdraw reward token\""},"value":"Cannot withdraw reward token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb5f5276775e13a63c4aee40a9078f9944af0bdef5ddfb94324b6e130781a014","typeString":"literal_string \"Cannot withdraw reward token\""}],"id":2381,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24234:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24234:86:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2390,"nodeType":"ExpressionStatement","src":"24234:86:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":2395,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"24361:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24361:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2397,"name":"_tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"24370:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2392,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"24333:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2391,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"24326:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3889_$","typeString":"type(contract IERC20)"}},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24326:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3923,"src":"24326:34:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3889_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3889_$","typeString":"function (contract IERC20,address,uint256)"}},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24326:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2399,"nodeType":"ExpressionStatement","src":"24326:57:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2401,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"24404:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2402,"name":"_tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"24419:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2400,"name":"Recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"24394:9:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24394:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2404,"nodeType":"EmitStatement","src":"24389:43:0"}]},"documentation":null,"functionSelector":"8980f11f","id":2406,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":2369,"modifierName":{"argumentTypes":null,"id":2368,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"24132:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"24132:9:0"}],"name":"recoverERC20","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2364,"mutability":"mutable","name":"_tokenAddress","nodeType":"VariableDeclaration","overrides":null,"scope":2406,"src":"24078:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2363,"name":"address","nodeType":"ElementaryTypeName","src":"24078:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2366,"mutability":"mutable","name":"_tokenAmount","nodeType":"VariableDeclaration","overrides":null,"scope":2406,"src":"24101:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2365,"name":"uint256","nodeType":"ElementaryTypeName","src":"24101:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"24077:45:0"},"returnParameters":{"id":2370,"nodeType":"ParameterList","parameters":[],"src":"24142:0:0"},"scope":2569,"src":"24056:381:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2505,"nodeType":"Block","src":"24522:853:0","statements":[{"id":2503,"nodeType":"Block","src":"24528:836:0","statements":[{"assignments":[2411],"declarations":[{"constant":false,"id":2411,"mutability":"mutable","name":"userBalance","nodeType":"VariableDeclaration","overrides":null,"scope":2503,"src":"24559:28:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances"},"typeName":{"contractScope":null,"id":2410,"name":"Balances","nodeType":"UserDefinedTypeName","referencedDeclaration":46,"src":"24559:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances"}},"value":null,"visibility":"internal"}],"id":2415,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2412,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"24590:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Balances_$46_storage_$","typeString":"mapping(address => struct PopLocker.Balances storage ref)"}},"id":2414,"indexExpression":{"argumentTypes":null,"id":2413,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"24599:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24590:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage","typeString":"struct PopLocker.Balances storage ref"}},"nodeType":"VariableDeclarationStatement","src":"24559:49:0"},{"assignments":[2417],"declarations":[{"constant":false,"id":2417,"mutability":"mutable","name":"boostedBal","nodeType":"VariableDeclaration","overrides":null,"scope":2503,"src":"24616:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2416,"name":"uint256","nodeType":"ElementaryTypeName","src":"24616:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":2420,"initialValue":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2418,"name":"userBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"24637:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances storage pointer"}},"id":2419,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"boosted","nodeType":"MemberAccess","referencedDeclaration":43,"src":"24637:19:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"VariableDeclarationStatement","src":"24616:40:0"},{"body":{"id":2501,"nodeType":"Block","src":"24714:644:0","statements":[{"assignments":[2433],"declarations":[{"constant":false,"id":2433,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","overrides":null,"scope":2501,"src":"24724:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2432,"name":"address","nodeType":"ElementaryTypeName","src":"24724:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"id":2437,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2434,"name":"rewardTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"24740:12:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2436,"indexExpression":{"argumentTypes":null,"id":2435,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"24753:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24740:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"24724:31:0"},{"expression":{"argumentTypes":null,"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2438,"name":"rewardData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"24765:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Reward_$39_storage_$","typeString":"mapping(address => struct PopLocker.Reward storage ref)"}},"id":2440,"indexExpression":{"argumentTypes":null,"id":2439,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"24776:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24765:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$39_storage","typeString":"struct PopLocker.Reward storage ref"}},"id":2441,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"rewardPerTokenStored","nodeType":"MemberAccess","referencedDeclaration":38,"src":"24765:38:0","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2443,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"24822:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2442,"name":"_rewardPerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"24806:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24806:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"to208","nodeType":"MemberAccess","referencedDeclaration":2869,"src":"24806:28:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint208)"}},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24806:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"24765:71:0","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":2448,"nodeType":"ExpressionStatement","src":"24765:71:0"},{"expression":{"argumentTypes":null,"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2449,"name":"rewardData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"24846:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Reward_$39_storage_$","typeString":"mapping(address => struct PopLocker.Reward storage ref)"}},"id":2451,"indexExpression":{"argumentTypes":null,"id":2450,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"24857:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24846:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$39_storage","typeString":"struct PopLocker.Reward storage ref"}},"id":2452,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"lastUpdateTime","nodeType":"MemberAccess","referencedDeclaration":36,"src":"24846:32:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2454,"name":"rewardData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"24907:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Reward_$39_storage_$","typeString":"mapping(address => struct PopLocker.Reward storage ref)"}},"id":2456,"indexExpression":{"argumentTypes":null,"id":2455,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"24918:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24907:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$39_storage","typeString":"struct PopLocker.Reward storage ref"}},"id":2457,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"periodFinish","nodeType":"MemberAccess","referencedDeclaration":32,"src":"24907:30:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint40","typeString":"uint40"}],"id":2453,"name":"_lastTimeRewardApplicable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"24881:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24881:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"to40","nodeType":"MemberAccess","referencedDeclaration":2791,"src":"24881:62:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint40_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint40)"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24881:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"24846:99:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"id":2462,"nodeType":"ExpressionStatement","src":"24846:99:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2463,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"24959:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":2466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24979:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24971:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2464,"name":"address","nodeType":"ElementaryTypeName","src":"24971:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24971:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"24959:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":2500,"nodeType":"IfStatement","src":"24955:395:0","trueBody":{"id":2499,"nodeType":"Block","src":"24983:367:0","statements":[{"expression":{"argumentTypes":null,"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2469,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"25086:7:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2472,"indexExpression":{"argumentTypes":null,"id":2470,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"25094:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25086:17:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2473,"indexExpression":{"argumentTypes":null,"id":2471,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"25104:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"25086:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2475,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"25134:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2476,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"25156:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"condition":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2477,"name":"rewardData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"25175:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Reward_$39_storage_$","typeString":"mapping(address => struct PopLocker.Reward storage ref)"}},"id":2479,"indexExpression":{"argumentTypes":null,"id":2478,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"25186:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25175:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$39_storage","typeString":"struct PopLocker.Reward storage ref"}},"id":2480,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"useBoost","nodeType":"MemberAccess","referencedDeclaration":30,"src":"25175:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2482,"name":"userBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"25217:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Balances_$46_storage_ptr","typeString":"struct PopLocker.Balances storage pointer"}},"id":2483,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"locked","nodeType":"MemberAccess","referencedDeclaration":41,"src":"25217:18:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"25175:60:0","trueExpression":{"argumentTypes":null,"id":2481,"name":"boostedBal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"25204:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2474,"name":"_earned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"25113:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25113:134:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25086:161:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2487,"nodeType":"ExpressionStatement","src":"25086:161:0"},{"expression":{"argumentTypes":null,"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2488,"name":"userRewardPerTokenPaid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"25259:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2491,"indexExpression":{"argumentTypes":null,"id":2489,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"25282:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25259:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2492,"indexExpression":{"argumentTypes":null,"id":2490,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"25292:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"25259:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2493,"name":"rewardData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"25301:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Reward_$39_storage_$","typeString":"mapping(address => struct PopLocker.Reward storage ref)"}},"id":2495,"indexExpression":{"argumentTypes":null,"id":2494,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"25312:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25301:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$39_storage","typeString":"struct PopLocker.Reward storage ref"}},"id":2496,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rewardPerTokenStored","nodeType":"MemberAccess","referencedDeclaration":38,"src":"25301:38:0","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"25259:80:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2498,"nodeType":"ExpressionStatement","src":"25259:80:0"}]}}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2425,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"24684:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2426,"name":"rewardTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"24688:12:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"24688:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24684:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2502,"initializationExpression":{"assignments":[2422],"declarations":[{"constant":false,"id":2422,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","overrides":null,"scope":2502,"src":"24669:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2421,"name":"uint256","nodeType":"ElementaryTypeName","src":"24669:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":2424,"initialValue":{"argumentTypes":null,"hexValue":"30","id":2423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24681:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"24669:13:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"24709:3:0","subExpression":{"argumentTypes":null,"id":2429,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"24709:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2431,"nodeType":"ExpressionStatement","src":"24709:3:0"},"nodeType":"ForStatement","src":"24664:694:0"}]},{"id":2504,"nodeType":"PlaceholderStatement","src":"25369:1:0"}]},"documentation":null,"id":2506,"name":"updateReward","nodeType":"ModifierDefinition","overrides":null,"parameters":{"id":2409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2408,"mutability":"mutable","name":"_account","nodeType":"VariableDeclaration","overrides":null,"scope":2506,"src":"24504:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2407,"name":"address","nodeType":"ElementaryTypeName","src":"24504:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"24503:18:0"},"src":"24482:893:0","virtual":false,"visibility":"internal"},{"anonymous":false,"documentation":null,"id":2512,"name":"RewardAdded","nodeType":"EventDefinition","parameters":{"id":2511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2508,"indexed":true,"mutability":"mutable","name":"_token","nodeType":"VariableDeclaration","overrides":null,"scope":2512,"src":"25434:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2507,"name":"address","nodeType":"ElementaryTypeName","src":"25434:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2510,"indexed":false,"mutability":"mutable","name":"_reward","nodeType":"VariableDeclaration","overrides":null,"scope":2512,"src":"25458:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2509,"name":"uint256","nodeType":"ElementaryTypeName","src":"25458:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"25433:41:0"},"src":"25416:59:0"},{"anonymous":false,"documentation":null,"id":2518,"name":"RewardsEscrowUpdated","nodeType":"EventDefinition","parameters":{"id":2517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2514,"indexed":false,"mutability":"mutable","name":"_previous","nodeType":"VariableDeclaration","overrides":null,"scope":2518,"src":"25505:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2513,"name":"address","nodeType":"ElementaryTypeName","src":"25505:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2516,"indexed":false,"mutability":"mutable","name":"_new","nodeType":"VariableDeclaration","overrides":null,"scope":2518,"src":"25524:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2515,"name":"address","nodeType":"ElementaryTypeName","src":"25524:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"25504:33:0"},"src":"25478:60:0"},{"anonymous":false,"documentation":null,"id":2528,"name":"Staked","nodeType":"EventDefinition","parameters":{"id":2527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2520,"indexed":true,"mutability":"mutable","name":"_user","nodeType":"VariableDeclaration","overrides":null,"scope":2528,"src":"25554:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2519,"name":"address","nodeType":"ElementaryTypeName","src":"25554:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2522,"indexed":false,"mutability":"mutable","name":"_paidAmount","nodeType":"VariableDeclaration","overrides":null,"scope":2528,"src":"25577:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2521,"name":"uint256","nodeType":"ElementaryTypeName","src":"25577:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2524,"indexed":false,"mutability":"mutable","name":"_lockedAmount","nodeType":"VariableDeclaration","overrides":null,"scope":2528,"src":"25598:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2523,"name":"uint256","nodeType":"ElementaryTypeName","src":"25598:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2526,"indexed":false,"mutability":"mutable","name":"_boostedAmount","nodeType":"VariableDeclaration","overrides":null,"scope":2528,"src":"25621:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2525,"name":"uint256","nodeType":"ElementaryTypeName","src":"25621:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"25553:91:0"},"src":"25541:104:0"},{"anonymous":false,"documentation":null,"id":2534,"name":"Withdrawn","nodeType":"EventDefinition","parameters":{"id":2533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2530,"indexed":true,"mutability":"mutable","name":"_user","nodeType":"VariableDeclaration","overrides":null,"scope":2534,"src":"25664:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2529,"name":"address","nodeType":"ElementaryTypeName","src":"25664:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2532,"indexed":false,"mutability":"mutable","name":"_amount","nodeType":"VariableDeclaration","overrides":null,"scope":2534,"src":"25687:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2531,"name":"uint256","nodeType":"ElementaryTypeName","src":"25687:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"25663:40:0"},"src":"25648:56:0"},{"anonymous":false,"documentation":null,"id":2540,"name":"Relocked","nodeType":"EventDefinition","parameters":{"id":2539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2536,"indexed":true,"mutability":"mutable","name":"_user","nodeType":"VariableDeclaration","overrides":null,"scope":2540,"src":"25722:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2535,"name":"address","nodeType":"ElementaryTypeName","src":"25722:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2538,"indexed":false,"mutability":"mutable","name":"_amount","nodeType":"VariableDeclaration","overrides":null,"scope":2540,"src":"25745:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2537,"name":"uint256","nodeType":"ElementaryTypeName","src":"25745:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"25721:40:0"},"src":"25707:55:0"},{"anonymous":false,"documentation":null,"id":2546,"name":"EscrowDurationUpdated","nodeType":"EventDefinition","parameters":{"id":2545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2542,"indexed":false,"mutability":"mutable","name":"_previousDuration","nodeType":"VariableDeclaration","overrides":null,"scope":2546,"src":"25793:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2541,"name":"uint256","nodeType":"ElementaryTypeName","src":"25793:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2544,"indexed":false,"mutability":"mutable","name":"_newDuration","nodeType":"VariableDeclaration","overrides":null,"scope":2546,"src":"25820:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2543,"name":"uint256","nodeType":"ElementaryTypeName","src":"25820:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"25792:49:0"},"src":"25765:77:0"},{"anonymous":false,"documentation":null,"id":2554,"name":"KickReward","nodeType":"EventDefinition","parameters":{"id":2553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2548,"indexed":true,"mutability":"mutable","name":"_user","nodeType":"VariableDeclaration","overrides":null,"scope":2554,"src":"25862:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2547,"name":"address","nodeType":"ElementaryTypeName","src":"25862:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2550,"indexed":true,"mutability":"mutable","name":"_kicked","nodeType":"VariableDeclaration","overrides":null,"scope":2554,"src":"25885:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2549,"name":"address","nodeType":"ElementaryTypeName","src":"25885:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2552,"indexed":false,"mutability":"mutable","name":"_reward","nodeType":"VariableDeclaration","overrides":null,"scope":2554,"src":"25910:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2551,"name":"uint256","nodeType":"ElementaryTypeName","src":"25910:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"25861:65:0"},"src":"25845:82:0"},{"anonymous":false,"documentation":null,"id":2562,"name":"RewardPaid","nodeType":"EventDefinition","parameters":{"id":2561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2556,"indexed":true,"mutability":"mutable","name":"_user","nodeType":"VariableDeclaration","overrides":null,"scope":2562,"src":"25947:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2555,"name":"address","nodeType":"ElementaryTypeName","src":"25947:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2558,"indexed":true,"mutability":"mutable","name":"_rewardsToken","nodeType":"VariableDeclaration","overrides":null,"scope":2562,"src":"25970:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2557,"name":"address","nodeType":"ElementaryTypeName","src":"25970:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2560,"indexed":false,"mutability":"mutable","name":"_reward","nodeType":"VariableDeclaration","overrides":null,"scope":2562,"src":"26001:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2559,"name":"uint256","nodeType":"ElementaryTypeName","src":"26001:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"25946:71:0"},"src":"25930:88:0"},{"anonymous":false,"documentation":null,"id":2568,"name":"Recovered","nodeType":"EventDefinition","parameters":{"id":2567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2564,"indexed":false,"mutability":"mutable","name":"_token","nodeType":"VariableDeclaration","overrides":null,"scope":2568,"src":"26037:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2563,"name":"address","nodeType":"ElementaryTypeName","src":"26037:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2566,"indexed":false,"mutability":"mutable","name":"_amount","nodeType":"VariableDeclaration","overrides":null,"scope":2568,"src":"26053:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2565,"name":"uint256","nodeType":"ElementaryTypeName","src":"26053:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"26036:33:0"},"src":"26021:49:0"}],"scope":2570,"src":"763:25309:0"}],"src":"60:26013:0"},"id":0},"contracts/core/interfaces/IRewardsEscrow.sol":{"ast":{"absolutePath":"contracts/core/interfaces/IRewardsEscrow.sol","exportedSymbols":{"IRewardsEscrow":[2591]},"id":2592,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":2571,"literals":["solidity",">","0.6",".0"],"nodeType":"PragmaDirective","src":"59:23:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":null,"fullyImplemented":false,"id":2591,"linearizedBaseContracts":[2591],"name":"IRewardsEscrow","nodeType":"ContractDefinition","nodes":[{"body":null,"documentation":null,"functionSelector":"e2ab691d","id":2580,"implemented":false,"kind":"function","modifiers":[],"name":"lock","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":2578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2573,"mutability":"mutable","name":"_address","nodeType":"VariableDeclaration","overrides":null,"scope":2580,"src":"132:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2572,"name":"address","nodeType":"ElementaryTypeName","src":"132:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2575,"mutability":"mutable","name":"_amount","nodeType":"VariableDeclaration","overrides":null,"scope":2580,"src":"154:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2574,"name":"uint256","nodeType":"ElementaryTypeName","src":"154:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2577,"mutability":"mutable","name":"duration","nodeType":"VariableDeclaration","overrides":null,"scope":2580,"src":"175:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2576,"name":"uint256","nodeType":"ElementaryTypeName","src":"175:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"126:69:1"},"returnParameters":{"id":2579,"nodeType":"ParameterList","parameters":[],"src":"204:0:1"},"scope":2591,"src":"113:92:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"98eaa4a7","id":2585,"implemented":false,"kind":"function","modifiers":[],"name":"addAuthorizedContract","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":2583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2582,"mutability":"mutable","name":"_staking","nodeType":"VariableDeclaration","overrides":null,"scope":2585,"src":"240:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2581,"name":"address","nodeType":"ElementaryTypeName","src":"240:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"239:18:1"},"returnParameters":{"id":2584,"nodeType":"ParameterList","parameters":[],"src":"266:0:1"},"scope":2591,"src":"209:58:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"e6b165ed","id":2590,"implemented":false,"kind":"function","modifiers":[],"name":"removeAuthorizedContract","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":2588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2587,"mutability":"mutable","name":"_staking","nodeType":"VariableDeclaration","overrides":null,"scope":2590,"src":"305:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2586,"name":"address","nodeType":"ElementaryTypeName","src":"305:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"304:18:1"},"returnParameters":{"id":2589,"nodeType":"ParameterList","parameters":[],"src":"331:0:1"},"scope":2591,"src":"271:61:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2592,"src":"84:250:1"}],"src":"59:276:1"},"id":1},"contracts/core/libraries/BoringMath.sol":{"ast":{"absolutePath":"contracts/core/libraries/BoringMath.sol","exportedSymbols":{"BoringMath":[2896],"BoringMath112":[3178],"BoringMath128":[2942],"BoringMath224":[3273],"BoringMath32":[3083],"BoringMath64":[2988]},"id":3274,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2593,"literals":["solidity","0.6",".12"],"nodeType":"PragmaDirective","src":"56:23:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2594,"nodeType":"StructuredDocumentation","src":"81:151:2","text":"@notice A library for performing overflow-/underflow-safe math,\n updated with awesomeness from of DappHub (https://github.com/dapphub/ds-math)."},"fullyImplemented":true,"id":2896,"linearizedBaseContracts":[2896],"name":"BoringMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":2615,"nodeType":"Block","src":"324:64:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":2604,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"339:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2605,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"343:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"id":2606,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"347:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"343:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"339:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2609,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"338:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":2610,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"353:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"338:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"426f72696e674d6174683a20416464204f766572666c6f77","id":2612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"356:26:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_77ffeda554f4c047bf45dac1a596ee270f922490aa5e98c6ba2b9599856e6fdf","typeString":"literal_string \"BoringMath: Add Overflow\""},"value":"BoringMath: Add Overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_77ffeda554f4c047bf45dac1a596ee270f922490aa5e98c6ba2b9599856e6fdf","typeString":"literal_string \"BoringMath: Add Overflow\""}],"id":2603,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"330:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"330:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2614,"nodeType":"ExpressionStatement","src":"330:53:2"}]},"documentation":null,"id":2616,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":2599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2596,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":2616,"src":"268:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2595,"name":"uint256","nodeType":"ElementaryTypeName","src":"268:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2598,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":2616,"src":"279:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2597,"name":"uint256","nodeType":"ElementaryTypeName","src":"279:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"267:22:2"},"returnParameters":{"id":2602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2601,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":2616,"src":"313:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2600,"name":"uint256","nodeType":"ElementaryTypeName","src":"313:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"312:11:2"},"scope":2896,"src":"255:133:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2637,"nodeType":"Block","src":"461:61:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":2626,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"476:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2627,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"480:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"id":2628,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"484:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"480:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"476:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2631,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"475:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"id":2632,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"490:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"475:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"426f72696e674d6174683a20556e646572666c6f77","id":2634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"493:23:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_00354eeca4367367797d07bf5ab6743c0cc453fe689bbb72132c3c4e2b5612aa","typeString":"literal_string \"BoringMath: Underflow\""},"value":"BoringMath: Underflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_00354eeca4367367797d07bf5ab6743c0cc453fe689bbb72132c3c4e2b5612aa","typeString":"literal_string \"BoringMath: Underflow\""}],"id":2625,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"467:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"467:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2636,"nodeType":"ExpressionStatement","src":"467:50:2"}]},"documentation":null,"id":2638,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":2621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2618,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":2638,"src":"405:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2617,"name":"uint256","nodeType":"ElementaryTypeName","src":"405:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2620,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":2638,"src":"416:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2619,"name":"uint256","nodeType":"ElementaryTypeName","src":"416:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"404:22:2"},"returnParameters":{"id":2624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2623,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":2638,"src":"450:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2622,"name":"uint256","nodeType":"ElementaryTypeName","src":"450:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"449:11:2"},"scope":2896,"src":"392:130:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2665,"nodeType":"Block","src":"595:78:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2648,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"609:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":2649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"614:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"609:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":2651,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"620:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2652,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"624:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"id":2653,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"628:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"624:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"620:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2656,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"619:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":2657,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"633:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"619:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":2659,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"638:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"619:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"609:30:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"426f72696e674d6174683a204d756c204f766572666c6f77","id":2662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"641:26:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_efa2024ddfa13946089ac6325359d421926f574cb871587fa659a82734fa675e","typeString":"literal_string \"BoringMath: Mul Overflow\""},"value":"BoringMath: Mul Overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_efa2024ddfa13946089ac6325359d421926f574cb871587fa659a82734fa675e","typeString":"literal_string \"BoringMath: Mul Overflow\""}],"id":2647,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"601:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"601:67:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2664,"nodeType":"ExpressionStatement","src":"601:67:2"}]},"documentation":null,"id":2666,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":2643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2640,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":2666,"src":"539:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2639,"name":"uint256","nodeType":"ElementaryTypeName","src":"539:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2642,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":2666,"src":"550:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2641,"name":"uint256","nodeType":"ElementaryTypeName","src":"550:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"538:22:2"},"returnParameters":{"id":2646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2645,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":2666,"src":"584:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2644,"name":"uint256","nodeType":"ElementaryTypeName","src":"584:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"583:11:2"},"scope":2896,"src":"526:147:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2686,"nodeType":"Block","src":"744:75:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2676,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"758:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":2677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"762:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"758:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"426f72696e674d6174683a206469766973696f6e206279207a65726f","id":2679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"765:30:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_221201983926dec81058b7bf5dacbbba131531a5c360958eea396f017b62904c","typeString":"literal_string \"BoringMath: division by zero\""},"value":"BoringMath: division by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_221201983926dec81058b7bf5dacbbba131531a5c360958eea396f017b62904c","typeString":"literal_string \"BoringMath: division by zero\""}],"id":2675,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"750:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"750:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2681,"nodeType":"ExpressionStatement","src":"750:46:2"},{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2682,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"809:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":2683,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"813:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"809:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2674,"id":2685,"nodeType":"Return","src":"802:12:2"}]},"documentation":null,"id":2687,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":2671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2668,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":2687,"src":"690:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2667,"name":"uint256","nodeType":"ElementaryTypeName","src":"690:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2670,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":2687,"src":"701:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2669,"name":"uint256","nodeType":"ElementaryTypeName","src":"701:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"689:22:2"},"returnParameters":{"id":2674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2673,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":2687,"src":"735:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2672,"name":"uint256","nodeType":"ElementaryTypeName","src":"735:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"734:9:2"},"scope":2896,"src":"677:142:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2712,"nodeType":"Block","src":"883:88:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2695,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2689,"src":"897:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"910:2:2","subExpression":{"argumentTypes":null,"hexValue":"31","id":2698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"911:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"id":2697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"902:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":2696,"name":"uint128","nodeType":"ElementaryTypeName","src":"902:7:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"902:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"897:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"426f72696e674d6174683a2075696e74313238204f766572666c6f77","id":2702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"915:30:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_64196137e15a5be4f7488ecfa918cfa26a6c2051ae3fb739c5de9bf8431fe9a5","typeString":"literal_string \"BoringMath: uint128 Overflow\""},"value":"BoringMath: uint128 Overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_64196137e15a5be4f7488ecfa918cfa26a6c2051ae3fb739c5de9bf8431fe9a5","typeString":"literal_string \"BoringMath: uint128 Overflow\""}],"id":2694,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"889:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"889:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2704,"nodeType":"ExpressionStatement","src":"889:57:2"},{"expression":{"argumentTypes":null,"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":2705,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"952:1:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2708,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2689,"src":"964:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"956:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":2706,"name":"uint128","nodeType":"ElementaryTypeName","src":"956:7:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"956:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"952:14:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":2711,"nodeType":"ExpressionStatement","src":"952:14:2"}]},"documentation":null,"id":2713,"implemented":true,"kind":"function","modifiers":[],"name":"to128","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":2690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2689,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":2713,"src":"838:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2688,"name":"uint256","nodeType":"ElementaryTypeName","src":"838:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"837:11:2"},"returnParameters":{"id":2693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2692,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":2713,"src":"872:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2691,"name":"uint128","nodeType":"ElementaryTypeName","src":"872:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"}],"src":"871:11:2"},"scope":2896,"src":"823:148:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2738,"nodeType":"Block","src":"1033:85:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2721,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"1047:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1059:2:2","subExpression":{"argumentTypes":null,"hexValue":"31","id":2724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1060:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"id":2723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1052:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":2722,"name":"uint64","nodeType":"ElementaryTypeName","src":"1052:6:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1052:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"1047:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"426f72696e674d6174683a2075696e743634204f766572666c6f77","id":2728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1064:29:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_b3c33265b589f76cafa7df00c0a28addc9a2c2003a13a1e0e4b875f58eb08764","typeString":"literal_string \"BoringMath: uint64 Overflow\""},"value":"BoringMath: uint64 Overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b3c33265b589f76cafa7df00c0a28addc9a2c2003a13a1e0e4b875f58eb08764","typeString":"literal_string \"BoringMath: uint64 Overflow\""}],"id":2720,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1039:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1039:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2730,"nodeType":"ExpressionStatement","src":"1039:55:2"},{"expression":{"argumentTypes":null,"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":2731,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"1100:1:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2734,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"1111:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1104:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":2732,"name":"uint64","nodeType":"ElementaryTypeName","src":"1104:6:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1104:9:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"1100:13:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":2737,"nodeType":"ExpressionStatement","src":"1100:13:2"}]},"documentation":null,"id":2739,"implemented":true,"kind":"function","modifiers":[],"name":"to64","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":2716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2715,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":2739,"src":"989:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2714,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"988:11:2"},"returnParameters":{"id":2719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2718,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":2739,"src":"1023:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2717,"name":"uint64","nodeType":"ElementaryTypeName","src":"1023:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"}],"src":"1022:10:2"},"scope":2896,"src":"975:143:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2764,"nodeType":"Block","src":"1180:85:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2747,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"1194:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1206:2:2","subExpression":{"argumentTypes":null,"hexValue":"31","id":2750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1207:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"id":2749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1199:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":2748,"name":"uint32","nodeType":"ElementaryTypeName","src":"1199:6:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1199:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"1194:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"426f72696e674d6174683a2075696e743332204f766572666c6f77","id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1211:29:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d8918cd18a3e78dc3bd01c63d310640381efda31e2d3ce751014519bc65013fc","typeString":"literal_string \"BoringMath: uint32 Overflow\""},"value":"BoringMath: uint32 Overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d8918cd18a3e78dc3bd01c63d310640381efda31e2d3ce751014519bc65013fc","typeString":"literal_string \"BoringMath: uint32 Overflow\""}],"id":2746,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1186:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1186:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2756,"nodeType":"ExpressionStatement","src":"1186:55:2"},{"expression":{"argumentTypes":null,"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":2757,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"1247:1:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2760,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"1258:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1251:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":2758,"name":"uint32","nodeType":"ElementaryTypeName","src":"1251:6:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1251:9:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"1247:13:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":2763,"nodeType":"ExpressionStatement","src":"1247:13:2"}]},"documentation":null,"id":2765,"implemented":true,"kind":"function","modifiers":[],"name":"to32","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":2742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2741,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":2765,"src":"1136:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2740,"name":"uint256","nodeType":"ElementaryTypeName","src":"1136:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1135:11:2"},"returnParameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2744,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":2765,"src":"1170:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2743,"name":"uint32","nodeType":"ElementaryTypeName","src":"1170:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":null,"visibility":"internal"}],"src":"1169:10:2"},"scope":2896,"src":"1122:143:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2790,"nodeType":"Block","src":"1327:85:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2773,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"1341:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1353:2:2","subExpression":{"argumentTypes":null,"hexValue":"31","id":2776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1354:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"id":2775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1346:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":2774,"name":"uint40","nodeType":"ElementaryTypeName","src":"1346:6:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1346:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"1341:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"426f72696e674d6174683a2075696e743430204f766572666c6f77","id":2780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1358:29:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_fc2a52b78bfa4f29a89ce117c7331419823ab5d36c889469bef8ea66d310986a","typeString":"literal_string \"BoringMath: uint40 Overflow\""},"value":"BoringMath: uint40 Overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc2a52b78bfa4f29a89ce117c7331419823ab5d36c889469bef8ea66d310986a","typeString":"literal_string \"BoringMath: uint40 Overflow\""}],"id":2772,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1333:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1333:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2782,"nodeType":"ExpressionStatement","src":"1333:55:2"},{"expression":{"argumentTypes":null,"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":2783,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"1394:1:2","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2786,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"1405:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1398:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":2784,"name":"uint40","nodeType":"ElementaryTypeName","src":"1398:6:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1398:9:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"1394:13:2","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"id":2789,"nodeType":"ExpressionStatement","src":"1394:13:2"}]},"documentation":null,"id":2791,"implemented":true,"kind":"function","modifiers":[],"name":"to40","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":2768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2767,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":2791,"src":"1283:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2766,"name":"uint256","nodeType":"ElementaryTypeName","src":"1283:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1282:11:2"},"returnParameters":{"id":2771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2770,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":2791,"src":"1317:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":2769,"name":"uint40","nodeType":"ElementaryTypeName","src":"1317:6:2","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"value":null,"visibility":"internal"}],"src":"1316:10:2"},"scope":2896,"src":"1269:143:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2816,"nodeType":"Block","src":"1476:88:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2799,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"1490:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1503:2:2","subExpression":{"argumentTypes":null,"hexValue":"31","id":2802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1504:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"id":2801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1495:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":2800,"name":"uint112","nodeType":"ElementaryTypeName","src":"1495:7:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1495:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"1490:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"426f72696e674d6174683a2075696e74313132204f766572666c6f77","id":2806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1508:30:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_8172b491b1cb6414b71816622d5ca55754692b7cf8db7a107dc6c7159a00e0a2","typeString":"literal_string \"BoringMath: uint112 Overflow\""},"value":"BoringMath: uint112 Overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8172b491b1cb6414b71816622d5ca55754692b7cf8db7a107dc6c7159a00e0a2","typeString":"literal_string \"BoringMath: uint112 Overflow\""}],"id":2798,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1482:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1482:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2808,"nodeType":"ExpressionStatement","src":"1482:57:2"},{"expression":{"argumentTypes":null,"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":2809,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"1545:1:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2812,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"1557:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1549:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":2810,"name":"uint112","nodeType":"ElementaryTypeName","src":"1549:7:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1549:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"1545:14:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":2815,"nodeType":"ExpressionStatement","src":"1545:14:2"}]},"documentation":null,"id":2817,"implemented":true,"kind":"function","modifiers":[],"name":"to112","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":2794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2793,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":2817,"src":"1431:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2792,"name":"uint256","nodeType":"ElementaryTypeName","src":"1431:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1430:11:2"},"returnParameters":{"id":2797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2796,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":2817,"src":"1465:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":2795,"name":"uint112","nodeType":"ElementaryTypeName","src":"1465:7:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"value":null,"visibility":"internal"}],"src":"1464:11:2"},"scope":2896,"src":"1416:148:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2842,"nodeType":"Block","src":"1628:88:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2825,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"1642:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1655:2:2","subExpression":{"argumentTypes":null,"hexValue":"31","id":2828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1656:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"id":2827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1647:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":2826,"name":"uint224","nodeType":"ElementaryTypeName","src":"1647:7:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1647:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"1642:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"426f72696e674d6174683a2075696e74323234204f766572666c6f77","id":2832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1660:30:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_44ea30b930cf79ae3e095bb95c9d0558a97015e60639f53d96a7552e5f4d5725","typeString":"literal_string \"BoringMath: uint224 Overflow\""},"value":"BoringMath: uint224 Overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_44ea30b930cf79ae3e095bb95c9d0558a97015e60639f53d96a7552e5f4d5725","typeString":"literal_string \"BoringMath: uint224 Overflow\""}],"id":2824,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1634:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1634:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2834,"nodeType":"ExpressionStatement","src":"1634:57:2"},{"expression":{"argumentTypes":null,"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":2835,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"1697:1:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2838,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"1709:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1701:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":2836,"name":"uint224","nodeType":"ElementaryTypeName","src":"1701:7:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1701:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"1697:14:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":2841,"nodeType":"ExpressionStatement","src":"1697:14:2"}]},"documentation":null,"id":2843,"implemented":true,"kind":"function","modifiers":[],"name":"to224","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":2820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2819,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":2843,"src":"1583:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2818,"name":"uint256","nodeType":"ElementaryTypeName","src":"1583:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1582:11:2"},"returnParameters":{"id":2823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2822,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":2843,"src":"1617:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":2821,"name":"uint224","nodeType":"ElementaryTypeName","src":"1617:7:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"value":null,"visibility":"internal"}],"src":"1616:11:2"},"scope":2896,"src":"1568:148:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2868,"nodeType":"Block","src":"1780:88:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2851,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"1794:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1807:2:2","subExpression":{"argumentTypes":null,"hexValue":"31","id":2854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"id":2853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1799:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":2852,"name":"uint208","nodeType":"ElementaryTypeName","src":"1799:7:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1799:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"1794:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"426f72696e674d6174683a2075696e74323038204f766572666c6f77","id":2858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1812:30:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_0d6c389a8b3f771597ecd0bf313a36debf0743d95e4a90bfae9a2e2541a975d0","typeString":"literal_string \"BoringMath: uint208 Overflow\""},"value":"BoringMath: uint208 Overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d6c389a8b3f771597ecd0bf313a36debf0743d95e4a90bfae9a2e2541a975d0","typeString":"literal_string \"BoringMath: uint208 Overflow\""}],"id":2850,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1786:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1786:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2860,"nodeType":"ExpressionStatement","src":"1786:57:2"},{"expression":{"argumentTypes":null,"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":2861,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"1849:1:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2864,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"1861:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1853:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":2862,"name":"uint208","nodeType":"ElementaryTypeName","src":"1853:7:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1853:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"1849:14:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":2867,"nodeType":"ExpressionStatement","src":"1849:14:2"}]},"documentation":null,"id":2869,"implemented":true,"kind":"function","modifiers":[],"name":"to208","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":2846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2845,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":2869,"src":"1735:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2844,"name":"uint256","nodeType":"ElementaryTypeName","src":"1735:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1734:11:2"},"returnParameters":{"id":2849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2848,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":2869,"src":"1769:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":2847,"name":"uint208","nodeType":"ElementaryTypeName","src":"1769:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"value":null,"visibility":"internal"}],"src":"1768:11:2"},"scope":2896,"src":"1720:148:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2894,"nodeType":"Block","src":"1932:88:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2877,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"1946:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1959:2:2","subExpression":{"argumentTypes":null,"hexValue":"31","id":2880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1960:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"id":2879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1951:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":2878,"name":"uint216","nodeType":"ElementaryTypeName","src":"1951:7:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1951:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"1946:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"426f72696e674d6174683a2075696e74323136204f766572666c6f77","id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1964:30:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_577ba6d97df9b9dd8991504ad0185be248e0d03ebd05c01f80fb7cd90e1ee2f6","typeString":"literal_string \"BoringMath: uint216 Overflow\""},"value":"BoringMath: uint216 Overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_577ba6d97df9b9dd8991504ad0185be248e0d03ebd05c01f80fb7cd90e1ee2f6","typeString":"literal_string \"BoringMath: uint216 Overflow\""}],"id":2876,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1938:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1938:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2886,"nodeType":"ExpressionStatement","src":"1938:57:2"},{"expression":{"argumentTypes":null,"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":2887,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"2001:1:2","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2890,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"2013:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2005:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":2888,"name":"uint216","nodeType":"ElementaryTypeName","src":"2005:7:2","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2005:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"2001:14:2","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"id":2893,"nodeType":"ExpressionStatement","src":"2001:14:2"}]},"documentation":null,"id":2895,"implemented":true,"kind":"function","modifiers":[],"name":"to216","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":2872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2871,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":2895,"src":"1887:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2870,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1886:11:2"},"returnParameters":{"id":2875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2874,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":2895,"src":"1921:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":2873,"name":"uint216","nodeType":"ElementaryTypeName","src":"1921:7:2","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"value":null,"visibility":"internal"}],"src":"1920:11:2"},"scope":2896,"src":"1872:148:2","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3274,"src":"232:1790:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2897,"nodeType":"StructuredDocumentation","src":"2024:99:2","text":"@notice A library for performing overflow-/underflow-safe addition and subtraction on uint128."},"fullyImplemented":true,"id":2942,"linearizedBaseContracts":[2942],"name":"BoringMath128","nodeType":"ContractDefinition","nodes":[{"body":{"id":2918,"nodeType":"Block","src":"2218:64:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":2907,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"2233:1:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2908,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"2237:1:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"id":2909,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"2241:1:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"2237:5:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"2233:9:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"id":2912,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2232:11:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":2913,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"2247:1:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"2232:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"426f72696e674d6174683a20416464204f766572666c6f77","id":2915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2250:26:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_77ffeda554f4c047bf45dac1a596ee270f922490aa5e98c6ba2b9599856e6fdf","typeString":"literal_string \"BoringMath: Add Overflow\""},"value":"BoringMath: Add Overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_77ffeda554f4c047bf45dac1a596ee270f922490aa5e98c6ba2b9599856e6fdf","typeString":"literal_string \"BoringMath: Add Overflow\""}],"id":2906,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2224:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2224:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2917,"nodeType":"ExpressionStatement","src":"2224:53:2"}]},"documentation":null,"id":2919,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":2902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2899,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":2919,"src":"2162:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2898,"name":"uint128","nodeType":"ElementaryTypeName","src":"2162:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"},{"constant":false,"id":2901,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":2919,"src":"2173:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2900,"name":"uint128","nodeType":"ElementaryTypeName","src":"2173:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"}],"src":"2161:22:2"},"returnParameters":{"id":2905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2904,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":2919,"src":"2207:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2903,"name":"uint128","nodeType":"ElementaryTypeName","src":"2207:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"}],"src":"2206:11:2"},"scope":2942,"src":"2149:133:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2940,"nodeType":"Block","src":"2355:61:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":2929,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"2370:1:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2930,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"2374:1:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"id":2931,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"2378:1:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"2374:5:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"2370:9:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"id":2934,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2369:11:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"id":2935,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"2384:1:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"2369:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"426f72696e674d6174683a20556e646572666c6f77","id":2937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2387:23:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_00354eeca4367367797d07bf5ab6743c0cc453fe689bbb72132c3c4e2b5612aa","typeString":"literal_string \"BoringMath: Underflow\""},"value":"BoringMath: Underflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_00354eeca4367367797d07bf5ab6743c0cc453fe689bbb72132c3c4e2b5612aa","typeString":"literal_string \"BoringMath: Underflow\""}],"id":2928,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2361:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2361:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2939,"nodeType":"ExpressionStatement","src":"2361:50:2"}]},"documentation":null,"id":2941,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":2924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2921,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":2941,"src":"2299:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2920,"name":"uint128","nodeType":"ElementaryTypeName","src":"2299:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"},{"constant":false,"id":2923,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":2941,"src":"2310:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2922,"name":"uint128","nodeType":"ElementaryTypeName","src":"2310:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"}],"src":"2298:22:2"},"returnParameters":{"id":2927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2926,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":2941,"src":"2344:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2925,"name":"uint128","nodeType":"ElementaryTypeName","src":"2344:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":null,"visibility":"internal"}],"src":"2343:11:2"},"scope":2942,"src":"2286:130:2","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3274,"src":"2123:295:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2943,"nodeType":"StructuredDocumentation","src":"2420:98:2","text":"@notice A library for performing overflow-/underflow-safe addition and subtraction on uint64."},"fullyImplemented":true,"id":2988,"linearizedBaseContracts":[2988],"name":"BoringMath64","nodeType":"ContractDefinition","nodes":[{"body":{"id":2964,"nodeType":"Block","src":"2609:64:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":2953,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"2624:1:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2954,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"2628:1:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"id":2955,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"2632:1:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"2628:5:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"2624:9:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":2958,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2623:11:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":2959,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"2638:1:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"2623:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"426f72696e674d6174683a20416464204f766572666c6f77","id":2961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2641:26:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_77ffeda554f4c047bf45dac1a596ee270f922490aa5e98c6ba2b9599856e6fdf","typeString":"literal_string \"BoringMath: Add Overflow\""},"value":"BoringMath: Add Overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_77ffeda554f4c047bf45dac1a596ee270f922490aa5e98c6ba2b9599856e6fdf","typeString":"literal_string \"BoringMath: Add Overflow\""}],"id":2952,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2615:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2615:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2963,"nodeType":"ExpressionStatement","src":"2615:53:2"}]},"documentation":null,"id":2965,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":2948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2945,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":2965,"src":"2556:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2944,"name":"uint64","nodeType":"ElementaryTypeName","src":"2556:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":2947,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":2965,"src":"2566:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2946,"name":"uint64","nodeType":"ElementaryTypeName","src":"2566:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"}],"src":"2555:20:2"},"returnParameters":{"id":2951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2950,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":2965,"src":"2599:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2949,"name":"uint64","nodeType":"ElementaryTypeName","src":"2599:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"}],"src":"2598:10:2"},"scope":2988,"src":"2543:130:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2986,"nodeType":"Block","src":"2743:61:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":2975,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"2758:1:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2976,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"2762:1:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"id":2977,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"2766:1:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"2762:5:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"2758:9:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":2980,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2757:11:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"id":2981,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"2772:1:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"2757:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"426f72696e674d6174683a20556e646572666c6f77","id":2983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2775:23:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_00354eeca4367367797d07bf5ab6743c0cc453fe689bbb72132c3c4e2b5612aa","typeString":"literal_string \"BoringMath: Underflow\""},"value":"BoringMath: Underflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_00354eeca4367367797d07bf5ab6743c0cc453fe689bbb72132c3c4e2b5612aa","typeString":"literal_string \"BoringMath: Underflow\""}],"id":2974,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2749:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2749:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2985,"nodeType":"ExpressionStatement","src":"2749:50:2"}]},"documentation":null,"id":2987,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":2970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2967,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":2987,"src":"2690:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2966,"name":"uint64","nodeType":"ElementaryTypeName","src":"2690:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":2969,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":2987,"src":"2700:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2968,"name":"uint64","nodeType":"ElementaryTypeName","src":"2700:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"}],"src":"2689:20:2"},"returnParameters":{"id":2973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2972,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":2987,"src":"2733:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2971,"name":"uint64","nodeType":"ElementaryTypeName","src":"2733:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"}],"src":"2732:10:2"},"scope":2988,"src":"2677:127:2","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3274,"src":"2518:288:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2989,"nodeType":"StructuredDocumentation","src":"2808:98:2","text":"@notice A library for performing overflow-/underflow-safe addition and subtraction on uint32."},"fullyImplemented":true,"id":3083,"linearizedBaseContracts":[3083],"name":"BoringMath32","nodeType":"ContractDefinition","nodes":[{"body":{"id":3010,"nodeType":"Block","src":"2997:64:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":2999,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"3012:1:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3000,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"3016:1:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"id":3001,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"3020:1:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3016:5:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3012:9:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":3004,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3011:11:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":3005,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"3026:1:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3011:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"426f72696e674d6174683a20416464204f766572666c6f77","id":3007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3029:26:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_77ffeda554f4c047bf45dac1a596ee270f922490aa5e98c6ba2b9599856e6fdf","typeString":"literal_string \"BoringMath: Add Overflow\""},"value":"BoringMath: Add Overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_77ffeda554f4c047bf45dac1a596ee270f922490aa5e98c6ba2b9599856e6fdf","typeString":"literal_string \"BoringMath: Add Overflow\""}],"id":2998,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3003:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3003:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3009,"nodeType":"ExpressionStatement","src":"3003:53:2"}]},"documentation":null,"id":3011,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":2994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2991,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":3011,"src":"2944:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2990,"name":"uint32","nodeType":"ElementaryTypeName","src":"2944:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":null,"visibility":"internal"},{"constant":false,"id":2993,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":3011,"src":"2954:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2992,"name":"uint32","nodeType":"ElementaryTypeName","src":"2954:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":null,"visibility":"internal"}],"src":"2943:20:2"},"returnParameters":{"id":2997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2996,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":3011,"src":"2987:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2995,"name":"uint32","nodeType":"ElementaryTypeName","src":"2987:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":null,"visibility":"internal"}],"src":"2986:10:2"},"scope":3083,"src":"2931:130:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3032,"nodeType":"Block","src":"3131:61:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":3021,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"3146:1:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3022,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"3150:1:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"id":3023,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"3154:1:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3150:5:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3146:9:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":3026,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3145:11:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"id":3027,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"3160:1:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3145:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"426f72696e674d6174683a20556e646572666c6f77","id":3029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3163:23:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_00354eeca4367367797d07bf5ab6743c0cc453fe689bbb72132c3c4e2b5612aa","typeString":"literal_string \"BoringMath: Underflow\""},"value":"BoringMath: Underflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_00354eeca4367367797d07bf5ab6743c0cc453fe689bbb72132c3c4e2b5612aa","typeString":"literal_string \"BoringMath: Underflow\""}],"id":3020,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3137:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3137:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3031,"nodeType":"ExpressionStatement","src":"3137:50:2"}]},"documentation":null,"id":3033,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3013,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":3033,"src":"3078:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3012,"name":"uint32","nodeType":"ElementaryTypeName","src":"3078:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":null,"visibility":"internal"},{"constant":false,"id":3015,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":3033,"src":"3088:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3014,"name":"uint32","nodeType":"ElementaryTypeName","src":"3088:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":null,"visibility":"internal"}],"src":"3077:20:2"},"returnParameters":{"id":3019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3018,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":3033,"src":"3121:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3017,"name":"uint32","nodeType":"ElementaryTypeName","src":"3121:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":null,"visibility":"internal"}],"src":"3120:10:2"},"scope":3083,"src":"3065:127:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3060,"nodeType":"Block","src":"3262:78:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3043,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"3276:1:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":3044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3281:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3276:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":3046,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"3287:1:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3047,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"3291:1:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"id":3048,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"3295:1:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3291:5:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3287:9:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":3051,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3286:11:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":3052,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"3300:1:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3286:15:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":3054,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"3305:1:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3286:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3276:30:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"426f72696e674d6174683a204d756c204f766572666c6f77","id":3057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3308:26:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_efa2024ddfa13946089ac6325359d421926f574cb871587fa659a82734fa675e","typeString":"literal_string \"BoringMath: Mul Overflow\""},"value":"BoringMath: Mul Overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_efa2024ddfa13946089ac6325359d421926f574cb871587fa659a82734fa675e","typeString":"literal_string \"BoringMath: Mul Overflow\""}],"id":3042,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3268:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3268:67:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3059,"nodeType":"ExpressionStatement","src":"3268:67:2"}]},"documentation":null,"id":3061,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3035,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":3061,"src":"3209:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3034,"name":"uint32","nodeType":"ElementaryTypeName","src":"3209:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":null,"visibility":"internal"},{"constant":false,"id":3037,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":3061,"src":"3219:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3036,"name":"uint32","nodeType":"ElementaryTypeName","src":"3219:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":null,"visibility":"internal"}],"src":"3208:20:2"},"returnParameters":{"id":3041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3040,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":3061,"src":"3252:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3039,"name":"uint32","nodeType":"ElementaryTypeName","src":"3252:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":null,"visibility":"internal"}],"src":"3251:10:2"},"scope":3083,"src":"3196:144:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3081,"nodeType":"Block","src":"3408:75:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3071,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"3422:1:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":3072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3426:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3422:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"426f72696e674d6174683a206469766973696f6e206279207a65726f","id":3074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3429:30:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_221201983926dec81058b7bf5dacbbba131531a5c360958eea396f017b62904c","typeString":"literal_string \"BoringMath: division by zero\""},"value":"BoringMath: division by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_221201983926dec81058b7bf5dacbbba131531a5c360958eea396f017b62904c","typeString":"literal_string \"BoringMath: division by zero\""}],"id":3070,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3414:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3414:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3076,"nodeType":"ExpressionStatement","src":"3414:46:2"},{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3077,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"3473:1:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":3078,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"3477:1:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3473:5:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":3069,"id":3080,"nodeType":"Return","src":"3466:12:2"}]},"documentation":null,"id":3082,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3063,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":3082,"src":"3357:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3062,"name":"uint32","nodeType":"ElementaryTypeName","src":"3357:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":null,"visibility":"internal"},{"constant":false,"id":3065,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":3082,"src":"3367:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3064,"name":"uint32","nodeType":"ElementaryTypeName","src":"3367:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":null,"visibility":"internal"}],"src":"3356:20:2"},"returnParameters":{"id":3069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3068,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":3082,"src":"3400:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3067,"name":"uint32","nodeType":"ElementaryTypeName","src":"3400:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":null,"visibility":"internal"}],"src":"3399:8:2"},"scope":3083,"src":"3344:139:2","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3274,"src":"2906:579:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3084,"nodeType":"StructuredDocumentation","src":"3487:99:2","text":"@notice A library for performing overflow-/underflow-safe addition and subtraction on uint112."},"fullyImplemented":true,"id":3178,"linearizedBaseContracts":[3178],"name":"BoringMath112","nodeType":"ContractDefinition","nodes":[{"body":{"id":3105,"nodeType":"Block","src":"3681:64:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":3094,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"3696:1:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3095,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"3700:1:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"id":3096,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"3704:1:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"3700:5:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"3696:9:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"id":3099,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3695:11:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":3100,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"3710:1:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"3695:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"426f72696e674d6174683a20416464204f766572666c6f77","id":3102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3713:26:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_77ffeda554f4c047bf45dac1a596ee270f922490aa5e98c6ba2b9599856e6fdf","typeString":"literal_string \"BoringMath: Add Overflow\""},"value":"BoringMath: Add Overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_77ffeda554f4c047bf45dac1a596ee270f922490aa5e98c6ba2b9599856e6fdf","typeString":"literal_string \"BoringMath: Add Overflow\""}],"id":3093,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3687:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3687:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3104,"nodeType":"ExpressionStatement","src":"3687:53:2"}]},"documentation":null,"id":3106,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3086,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":3106,"src":"3625:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3085,"name":"uint112","nodeType":"ElementaryTypeName","src":"3625:7:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"value":null,"visibility":"internal"},{"constant":false,"id":3088,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":3106,"src":"3636:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3087,"name":"uint112","nodeType":"ElementaryTypeName","src":"3636:7:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"value":null,"visibility":"internal"}],"src":"3624:22:2"},"returnParameters":{"id":3092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3091,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":3106,"src":"3670:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3090,"name":"uint112","nodeType":"ElementaryTypeName","src":"3670:7:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"value":null,"visibility":"internal"}],"src":"3669:11:2"},"scope":3178,"src":"3612:133:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3127,"nodeType":"Block","src":"3818:61:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":3116,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"3833:1:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3117,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"3837:1:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"id":3118,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"3841:1:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"3837:5:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"3833:9:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"id":3121,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3832:11:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"id":3122,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"3847:1:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"3832:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"426f72696e674d6174683a20556e646572666c6f77","id":3124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3850:23:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_00354eeca4367367797d07bf5ab6743c0cc453fe689bbb72132c3c4e2b5612aa","typeString":"literal_string \"BoringMath: Underflow\""},"value":"BoringMath: Underflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_00354eeca4367367797d07bf5ab6743c0cc453fe689bbb72132c3c4e2b5612aa","typeString":"literal_string \"BoringMath: Underflow\""}],"id":3115,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3824:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3824:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3126,"nodeType":"ExpressionStatement","src":"3824:50:2"}]},"documentation":null,"id":3128,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3108,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":3128,"src":"3762:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3107,"name":"uint112","nodeType":"ElementaryTypeName","src":"3762:7:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"value":null,"visibility":"internal"},{"constant":false,"id":3110,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":3128,"src":"3773:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3109,"name":"uint112","nodeType":"ElementaryTypeName","src":"3773:7:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"value":null,"visibility":"internal"}],"src":"3761:22:2"},"returnParameters":{"id":3114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3113,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":3128,"src":"3807:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3112,"name":"uint112","nodeType":"ElementaryTypeName","src":"3807:7:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"value":null,"visibility":"internal"}],"src":"3806:11:2"},"scope":3178,"src":"3749:130:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3155,"nodeType":"Block","src":"3952:78:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3138,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"3966:1:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":3139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3971:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3966:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":3141,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"3977:1:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3142,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"3981:1:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"id":3143,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"3985:1:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"3981:5:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"3977:9:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"id":3146,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3976:11:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":3147,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"3990:1:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"3976:15:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":3149,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"3995:1:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"3976:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3966:30:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"426f72696e674d6174683a204d756c204f766572666c6f77","id":3152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3998:26:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_efa2024ddfa13946089ac6325359d421926f574cb871587fa659a82734fa675e","typeString":"literal_string \"BoringMath: Mul Overflow\""},"value":"BoringMath: Mul Overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_efa2024ddfa13946089ac6325359d421926f574cb871587fa659a82734fa675e","typeString":"literal_string \"BoringMath: Mul Overflow\""}],"id":3137,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3958:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3958:67:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3154,"nodeType":"ExpressionStatement","src":"3958:67:2"}]},"documentation":null,"id":3156,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3130,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":3156,"src":"3896:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3129,"name":"uint112","nodeType":"ElementaryTypeName","src":"3896:7:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"value":null,"visibility":"internal"},{"constant":false,"id":3132,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":3156,"src":"3907:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3131,"name":"uint112","nodeType":"ElementaryTypeName","src":"3907:7:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"value":null,"visibility":"internal"}],"src":"3895:22:2"},"returnParameters":{"id":3136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3135,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":3156,"src":"3941:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3134,"name":"uint112","nodeType":"ElementaryTypeName","src":"3941:7:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"value":null,"visibility":"internal"}],"src":"3940:11:2"},"scope":3178,"src":"3883:147:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3176,"nodeType":"Block","src":"4101:75:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3166,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"4115:1:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":3167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4119:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4115:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"426f72696e674d6174683a206469766973696f6e206279207a65726f","id":3169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4122:30:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_221201983926dec81058b7bf5dacbbba131531a5c360958eea396f017b62904c","typeString":"literal_string \"BoringMath: division by zero\""},"value":"BoringMath: division by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_221201983926dec81058b7bf5dacbbba131531a5c360958eea396f017b62904c","typeString":"literal_string \"BoringMath: division by zero\""}],"id":3165,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4107:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4107:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3171,"nodeType":"ExpressionStatement","src":"4107:46:2"},{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3172,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"4166:1:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":3173,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"4170:1:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"4166:5:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":3164,"id":3175,"nodeType":"Return","src":"4159:12:2"}]},"documentation":null,"id":3177,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3158,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":3177,"src":"4047:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3157,"name":"uint112","nodeType":"ElementaryTypeName","src":"4047:7:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"value":null,"visibility":"internal"},{"constant":false,"id":3160,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":3177,"src":"4058:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3159,"name":"uint112","nodeType":"ElementaryTypeName","src":"4058:7:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"value":null,"visibility":"internal"}],"src":"4046:22:2"},"returnParameters":{"id":3164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3163,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":3177,"src":"4092:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3162,"name":"uint112","nodeType":"ElementaryTypeName","src":"4092:7:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"value":null,"visibility":"internal"}],"src":"4091:9:2"},"scope":3178,"src":"4034:142:2","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3274,"src":"3586:592:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3179,"nodeType":"StructuredDocumentation","src":"4180:99:2","text":"@notice A library for performing overflow-/underflow-safe addition and subtraction on uint224."},"fullyImplemented":true,"id":3273,"linearizedBaseContracts":[3273],"name":"BoringMath224","nodeType":"ContractDefinition","nodes":[{"body":{"id":3200,"nodeType":"Block","src":"4374:64:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint224","typeString":"uint224"},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":3189,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"4389:1:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint224","typeString":"uint224"},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3190,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"4393:1:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"id":3191,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"4397:1:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"4393:5:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"4389:9:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":3194,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4388:11:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":3195,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"4403:1:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"4388:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"426f72696e674d6174683a20416464204f766572666c6f77","id":3197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4406:26:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_77ffeda554f4c047bf45dac1a596ee270f922490aa5e98c6ba2b9599856e6fdf","typeString":"literal_string \"BoringMath: Add Overflow\""},"value":"BoringMath: Add Overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_77ffeda554f4c047bf45dac1a596ee270f922490aa5e98c6ba2b9599856e6fdf","typeString":"literal_string \"BoringMath: Add Overflow\""}],"id":3188,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4380:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4380:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3199,"nodeType":"ExpressionStatement","src":"4380:53:2"}]},"documentation":null,"id":3201,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3181,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":3201,"src":"4318:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3180,"name":"uint224","nodeType":"ElementaryTypeName","src":"4318:7:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"value":null,"visibility":"internal"},{"constant":false,"id":3183,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":3201,"src":"4329:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3182,"name":"uint224","nodeType":"ElementaryTypeName","src":"4329:7:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"value":null,"visibility":"internal"}],"src":"4317:22:2"},"returnParameters":{"id":3187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3186,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":3201,"src":"4363:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3185,"name":"uint224","nodeType":"ElementaryTypeName","src":"4363:7:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"value":null,"visibility":"internal"}],"src":"4362:11:2"},"scope":3273,"src":"4305:133:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3222,"nodeType":"Block","src":"4511:61:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint224","typeString":"uint224"},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":3211,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"4526:1:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint224","typeString":"uint224"},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3212,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"4530:1:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"id":3213,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"4534:1:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"4530:5:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"4526:9:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":3216,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4525:11:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"id":3217,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"4540:1:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"4525:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"426f72696e674d6174683a20556e646572666c6f77","id":3219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4543:23:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_00354eeca4367367797d07bf5ab6743c0cc453fe689bbb72132c3c4e2b5612aa","typeString":"literal_string \"BoringMath: Underflow\""},"value":"BoringMath: Underflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_00354eeca4367367797d07bf5ab6743c0cc453fe689bbb72132c3c4e2b5612aa","typeString":"literal_string \"BoringMath: Underflow\""}],"id":3210,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4517:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4517:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3221,"nodeType":"ExpressionStatement","src":"4517:50:2"}]},"documentation":null,"id":3223,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3203,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":3223,"src":"4455:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3202,"name":"uint224","nodeType":"ElementaryTypeName","src":"4455:7:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"value":null,"visibility":"internal"},{"constant":false,"id":3205,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":3223,"src":"4466:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3204,"name":"uint224","nodeType":"ElementaryTypeName","src":"4466:7:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"value":null,"visibility":"internal"}],"src":"4454:22:2"},"returnParameters":{"id":3209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3208,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":3223,"src":"4500:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3207,"name":"uint224","nodeType":"ElementaryTypeName","src":"4500:7:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"value":null,"visibility":"internal"}],"src":"4499:11:2"},"scope":3273,"src":"4442:130:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3250,"nodeType":"Block","src":"4645:78:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint224","typeString":"uint224"},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3233,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"4659:1:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":3234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4664:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4659:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint224","typeString":"uint224"},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint224","typeString":"uint224"},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":3236,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"4670:1:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint224","typeString":"uint224"},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3237,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"4674:1:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"id":3238,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"4678:1:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"4674:5:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"4670:9:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":3241,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4669:11:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":3242,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"4683:1:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"4669:15:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":3244,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"4688:1:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"4669:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4659:30:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"426f72696e674d6174683a204d756c204f766572666c6f77","id":3247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4691:26:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_efa2024ddfa13946089ac6325359d421926f574cb871587fa659a82734fa675e","typeString":"literal_string \"BoringMath: Mul Overflow\""},"value":"BoringMath: Mul Overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_efa2024ddfa13946089ac6325359d421926f574cb871587fa659a82734fa675e","typeString":"literal_string \"BoringMath: Mul Overflow\""}],"id":3232,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4651:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4651:67:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3249,"nodeType":"ExpressionStatement","src":"4651:67:2"}]},"documentation":null,"id":3251,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3225,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":3251,"src":"4589:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3224,"name":"uint224","nodeType":"ElementaryTypeName","src":"4589:7:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"value":null,"visibility":"internal"},{"constant":false,"id":3227,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":3251,"src":"4600:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3226,"name":"uint224","nodeType":"ElementaryTypeName","src":"4600:7:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"value":null,"visibility":"internal"}],"src":"4588:22:2"},"returnParameters":{"id":3231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3230,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":3251,"src":"4634:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3229,"name":"uint224","nodeType":"ElementaryTypeName","src":"4634:7:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"value":null,"visibility":"internal"}],"src":"4633:11:2"},"scope":3273,"src":"4576:147:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3271,"nodeType":"Block","src":"4794:75:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint224","typeString":"uint224"},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3261,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"4808:1:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":3262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4812:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4808:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"426f72696e674d6174683a206469766973696f6e206279207a65726f","id":3264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4815:30:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_221201983926dec81058b7bf5dacbbba131531a5c360958eea396f017b62904c","typeString":"literal_string \"BoringMath: division by zero\""},"value":"BoringMath: division by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_221201983926dec81058b7bf5dacbbba131531a5c360958eea396f017b62904c","typeString":"literal_string \"BoringMath: division by zero\""}],"id":3260,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4800:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4800:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3266,"nodeType":"ExpressionStatement","src":"4800:46:2"},{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint224","typeString":"uint224"},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3267,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"4859:1:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":3268,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"4863:1:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"4859:5:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3259,"id":3270,"nodeType":"Return","src":"4852:12:2"}]},"documentation":null,"id":3272,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3253,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":3272,"src":"4740:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3252,"name":"uint224","nodeType":"ElementaryTypeName","src":"4740:7:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"value":null,"visibility":"internal"},{"constant":false,"id":3255,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":3272,"src":"4751:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3254,"name":"uint224","nodeType":"ElementaryTypeName","src":"4751:7:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"value":null,"visibility":"internal"}],"src":"4739:22:2"},"returnParameters":{"id":3259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3258,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":3272,"src":"4785:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3257,"name":"uint224","nodeType":"ElementaryTypeName","src":"4785:7:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"value":null,"visibility":"internal"}],"src":"4784:9:2"},"scope":3273,"src":"4727:142:2","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3274,"src":"4279:592:2"}],"src":"56:4816:2"},"id":2},"openzeppelin-v3/access/Ownable.sol":{"ast":{"absolutePath":"openzeppelin-v3/access/Ownable.sol","exportedSymbols":{"Ownable":[3383]},"id":3384,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3275,"literals":["solidity",">=","0.6",".0","<","0.8",".0"],"nodeType":"PragmaDirective","src":"33:31:3"},{"absolutePath":"openzeppelin-v3/utils/Context.sol","file":"../utils/Context.sol","id":3276,"nodeType":"ImportDirective","scope":3384,"sourceUnit":4422,"src":"66:30:3","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":3278,"name":"Context","nodeType":"UserDefinedTypeName","referencedDeclaration":4421,"src":"621:7:3","typeDescriptions":{"typeIdentifier":"t_contract$_Context_$4421","typeString":"contract Context"}},"id":3279,"nodeType":"InheritanceSpecifier","src":"621:7:3"}],"contractDependencies":[4421],"contractKind":"contract","documentation":{"id":3277,"nodeType":"StructuredDocumentation","src":"97:494:3","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":3383,"linearizedBaseContracts":[3383,4421],"name":"Ownable","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3281,"mutability":"mutable","name":"_owner","nodeType":"VariableDeclaration","overrides":null,"scope":3383,"src":"635:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3280,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"private"},{"anonymous":false,"documentation":null,"id":3287,"name":"OwnershipTransferred","nodeType":"EventDefinition","parameters":{"id":3286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3283,"indexed":true,"mutability":"mutable","name":"previousOwner","nodeType":"VariableDeclaration","overrides":null,"scope":3287,"src":"691:29:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3282,"name":"address","nodeType":"ElementaryTypeName","src":"691:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":3285,"indexed":true,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","overrides":null,"scope":3287,"src":"722:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3284,"name":"address","nodeType":"ElementaryTypeName","src":"722:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"690:57:3"},"src":"664:84:3"},{"body":{"id":3308,"nodeType":"Block","src":"874:135:3","statements":[{"assignments":[3292],"declarations":[{"constant":false,"id":3292,"mutability":"mutable","name":"msgSender","nodeType":"VariableDeclaration","overrides":null,"scope":3308,"src":"884:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3291,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"id":3295,"initialValue":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":3293,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"904:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"904:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"884:32:3"},{"expression":{"argumentTypes":null,"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":3296,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"926:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":3297,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"935:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"926:18:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3299,"nodeType":"ExpressionStatement","src":"926:18:3"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":3303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"988:1:3","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"980:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3301,"name":"address","nodeType":"ElementaryTypeName","src":"980:7:3","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":3304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"980:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":3305,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"992:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3300,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"959:20:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"959:43:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3307,"nodeType":"EmitStatement","src":"954:48:3"}]},"documentation":{"id":3288,"nodeType":"StructuredDocumentation","src":"754:91:3","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":3309,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3289,"nodeType":"ParameterList","parameters":[],"src":"862:2:3"},"returnParameters":{"id":3290,"nodeType":"ParameterList","parameters":[],"src":"874:0:3"},"scope":3383,"src":"850:159:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3317,"nodeType":"Block","src":"1140:30:3","statements":[{"expression":{"argumentTypes":null,"id":3315,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"1157:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3314,"id":3316,"nodeType":"Return","src":"1150:13:3"}]},"documentation":{"id":3310,"nodeType":"StructuredDocumentation","src":"1015:65:3","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":3318,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3311,"nodeType":"ParameterList","parameters":[],"src":"1099:2:3"},"returnParameters":{"id":3314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3313,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":3318,"src":"1131:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3312,"name":"address","nodeType":"ElementaryTypeName","src":"1131:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1130:9:3"},"scope":3383,"src":"1085:85:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3331,"nodeType":"Block","src":"1279:96:3","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":3322,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"1297:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1297:7:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":3324,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"1308:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1308:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"1297:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":3327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1322:34:3","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":3321,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1289:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1289:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3329,"nodeType":"ExpressionStatement","src":"1289:68:3"},{"id":3330,"nodeType":"PlaceholderStatement","src":"1367:1:3"}]},"documentation":{"id":3319,"nodeType":"StructuredDocumentation","src":"1176:77:3","text":" @dev Throws if called by any account other than the owner."},"id":3332,"name":"onlyOwner","nodeType":"ModifierDefinition","overrides":null,"parameters":{"id":3320,"nodeType":"ParameterList","parameters":[],"src":"1276:2:3"},"src":"1258:117:3","virtual":false,"visibility":"internal"},{"body":{"id":3353,"nodeType":"Block","src":"1771:91:3","statements":[{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":3339,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"1807:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":3342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1823:1:3","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1815:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3340,"name":"address","nodeType":"ElementaryTypeName","src":"1815:7:3","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":3343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1815:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":3338,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"1786:20:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1786:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3345,"nodeType":"EmitStatement","src":"1781:45:3"},{"expression":{"argumentTypes":null,"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":3346,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"1836:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":3349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1853:1:3","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1845:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3347,"name":"address","nodeType":"ElementaryTypeName","src":"1845:7:3","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":3350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1845:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"1836:19:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3352,"nodeType":"ExpressionStatement","src":"1836:19:3"}]},"documentation":{"id":3333,"nodeType":"StructuredDocumentation","src":"1381:331:3","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":3354,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":3336,"modifierName":{"argumentTypes":null,"id":3335,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"1761:9:3","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"1761:9:3"}],"name":"renounceOwnership","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3334,"nodeType":"ParameterList","parameters":[],"src":"1743:2:3"},"returnParameters":{"id":3337,"nodeType":"ParameterList","parameters":[],"src":"1771:0:3"},"scope":3383,"src":"1717:145:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3381,"nodeType":"Block","src":"2081:170:3","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3363,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"2099:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":3366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2119:1:3","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2111:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3364,"name":"address","nodeType":"ElementaryTypeName","src":"2111:7:3","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":3367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2111:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"2099:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":3369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2123:40:3","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":3362,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2091:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2091:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3371,"nodeType":"ExpressionStatement","src":"2091:73:3"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":3373,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"2200:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":3374,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"2208:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3372,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"2179:20:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2179:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3376,"nodeType":"EmitStatement","src":"2174:43:3"},{"expression":{"argumentTypes":null,"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":3377,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"2227:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":3378,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"2236:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2227:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3380,"nodeType":"ExpressionStatement","src":"2227:17:3"}]},"documentation":{"id":3355,"nodeType":"StructuredDocumentation","src":"1868:138:3","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":3382,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":3360,"modifierName":{"argumentTypes":null,"id":3359,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"2071:9:3","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"2071:9:3"}],"name":"transferOwnership","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3357,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","overrides":null,"scope":3382,"src":"2038:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3356,"name":"address","nodeType":"ElementaryTypeName","src":"2038:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2037:18:3"},"returnParameters":{"id":3361,"nodeType":"ParameterList","parameters":[],"src":"2081:0:3"},"scope":3383,"src":"2011:240:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":3384,"src":"592:1661:3"}],"src":"33:2221:3"},"id":3},"openzeppelin-v3/math/Math.sol":{"ast":{"absolutePath":"openzeppelin-v3/math/Math.sol","exportedSymbols":{"Math":[3456]},"id":3457,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3385,"literals":["solidity",">=","0.6",".0","<","0.8",".0"],"nodeType":"PragmaDirective","src":"33:31:4"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3386,"nodeType":"StructuredDocumentation","src":"66:73:4","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3456,"linearizedBaseContracts":[3456],"name":"Math","nodeType":"ContractDefinition","nodes":[{"body":{"id":3403,"nodeType":"Block","src":"290:38:4","statements":[{"expression":{"argumentTypes":null,"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3396,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"307:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":3397,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"312:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"307:6:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"argumentTypes":null,"id":3400,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"320:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"307:14:4","trueExpression":{"argumentTypes":null,"id":3399,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"316:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3395,"id":3402,"nodeType":"Return","src":"300:21:4"}]},"documentation":{"id":3387,"nodeType":"StructuredDocumentation","src":"159:59:4","text":" @dev Returns the largest of two numbers."},"id":3404,"implemented":true,"kind":"function","modifiers":[],"name":"max","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3389,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":3404,"src":"236:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3388,"name":"uint256","nodeType":"ElementaryTypeName","src":"236:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3391,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":3404,"src":"247:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3390,"name":"uint256","nodeType":"ElementaryTypeName","src":"247:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"235:22:4"},"returnParameters":{"id":3395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3394,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":3404,"src":"281:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3393,"name":"uint256","nodeType":"ElementaryTypeName","src":"281:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"280:9:4"},"scope":3456,"src":"223:105:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3421,"nodeType":"Block","src":"466:37:4","statements":[{"expression":{"argumentTypes":null,"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3414,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"483:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":3415,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"487:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"483:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"argumentTypes":null,"id":3418,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"495:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"483:13:4","trueExpression":{"argumentTypes":null,"id":3417,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"491:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3413,"id":3420,"nodeType":"Return","src":"476:20:4"}]},"documentation":{"id":3405,"nodeType":"StructuredDocumentation","src":"334:60:4","text":" @dev Returns the smallest of two numbers."},"id":3422,"implemented":true,"kind":"function","modifiers":[],"name":"min","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3407,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":3422,"src":"412:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3406,"name":"uint256","nodeType":"ElementaryTypeName","src":"412:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3409,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":3422,"src":"423:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3408,"name":"uint256","nodeType":"ElementaryTypeName","src":"423:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"411:22:4"},"returnParameters":{"id":3413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3412,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":3422,"src":"457:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3411,"name":"uint256","nodeType":"ElementaryTypeName","src":"457:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"456:9:4"},"scope":3456,"src":"399:104:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3454,"nodeType":"Block","src":"687:119:4","statements":[{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3432,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"759:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"hexValue":"32","id":3433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"763:1:4","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"759:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3435,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"758:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3436,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"769:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"hexValue":"32","id":3437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"773:1:4","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"769:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3439,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"768:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"758:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3441,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"780:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"argumentTypes":null,"hexValue":"32","id":3442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"784:1:4","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"780:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3444,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"788:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"argumentTypes":null,"hexValue":"32","id":3445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"792:1:4","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"788:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"780:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3448,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"779:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"hexValue":"32","id":3449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"797:1:4","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"779:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3451,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"778:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"758:41:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3431,"id":3453,"nodeType":"Return","src":"751:48:4"}]},"documentation":{"id":3423,"nodeType":"StructuredDocumentation","src":"509:102:4","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3455,"implemented":true,"kind":"function","modifiers":[],"name":"average","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3425,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":3455,"src":"633:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3424,"name":"uint256","nodeType":"ElementaryTypeName","src":"633:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3427,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":3455,"src":"644:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3426,"name":"uint256","nodeType":"ElementaryTypeName","src":"644:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"632:22:4"},"returnParameters":{"id":3431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3430,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":3455,"src":"678:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3429,"name":"uint256","nodeType":"ElementaryTypeName","src":"678:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"677:9:4"},"scope":3456,"src":"616:190:4","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3457,"src":"140:668:4"}],"src":"33:776:4"},"id":4},"openzeppelin-v3/math/SafeMath.sol":{"ast":{"absolutePath":"openzeppelin-v3/math/SafeMath.sol","exportedSymbols":{"SafeMath":[3811]},"id":3812,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3458,"literals":["solidity",">=","0.6",".0","<","0.8",".0"],"nodeType":"PragmaDirective","src":"33:31:5"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3459,"nodeType":"StructuredDocumentation","src":"66:563:5","text":" @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":3811,"linearizedBaseContracts":[3811],"name":"SafeMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":3489,"nodeType":"Block","src":"865:98:5","statements":[{"assignments":[3472],"declarations":[{"constant":false,"id":3472,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":3489,"src":"875:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3471,"name":"uint256","nodeType":"ElementaryTypeName","src":"875:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":3476,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3473,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"887:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"id":3474,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"891:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"887:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"875:17:5"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3477,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"906:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":3478,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"910:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"906:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":3484,"nodeType":"IfStatement","src":"902:28:5","trueBody":{"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"hexValue":"66616c7365","id":3480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"921:5:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"argumentTypes":null,"hexValue":"30","id":3481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"928:1:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3482,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"920:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3470,"id":3483,"nodeType":"Return","src":"913:17:5"}},{"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"hexValue":"74727565","id":3485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"948:4:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"argumentTypes":null,"id":3486,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"954:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3487,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"947:9:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3470,"id":3488,"nodeType":"Return","src":"940:16:5"}]},"documentation":{"id":3460,"nodeType":"StructuredDocumentation","src":"653:131:5","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":3490,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3462,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":3490,"src":"805:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3461,"name":"uint256","nodeType":"ElementaryTypeName","src":"805:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3464,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":3490,"src":"816:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3463,"name":"uint256","nodeType":"ElementaryTypeName","src":"816:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"804:22:5"},"returnParameters":{"id":3470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3467,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":3490,"src":"850:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3466,"name":"bool","nodeType":"ElementaryTypeName","src":"850:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":3469,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":3490,"src":"856:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3468,"name":"uint256","nodeType":"ElementaryTypeName","src":"856:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"849:15:5"},"scope":3811,"src":"789:174:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3516,"nodeType":"Block","src":"1185:75:5","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3502,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"1199:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"id":3503,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"1203:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1199:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":3509,"nodeType":"IfStatement","src":"1195:28:5","trueBody":{"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"hexValue":"66616c7365","id":3505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1214:5:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"argumentTypes":null,"hexValue":"30","id":3506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1221:1:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3507,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1213:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3501,"id":3508,"nodeType":"Return","src":"1206:17:5"}},{"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"hexValue":"74727565","id":3510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1241:4:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3511,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"1247:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"id":3512,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"1251:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1247:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3514,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1240:13:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3501,"id":3515,"nodeType":"Return","src":"1233:20:5"}]},"documentation":{"id":3491,"nodeType":"StructuredDocumentation","src":"969:135:5","text":" @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":3517,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3493,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":3517,"src":"1125:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3492,"name":"uint256","nodeType":"ElementaryTypeName","src":"1125:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3495,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":3517,"src":"1136:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3494,"name":"uint256","nodeType":"ElementaryTypeName","src":"1136:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1124:22:5"},"returnParameters":{"id":3501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3498,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":3517,"src":"1170:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3497,"name":"bool","nodeType":"ElementaryTypeName","src":"1170:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":3500,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":3517,"src":"1176:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3499,"name":"uint256","nodeType":"ElementaryTypeName","src":"1176:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1169:15:5"},"scope":3811,"src":"1109:151:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3557,"nodeType":"Block","src":"1484:359:5","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3529,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"1716:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":3530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1721:1:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1716:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":3536,"nodeType":"IfStatement","src":"1712:28:5","trueBody":{"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"hexValue":"74727565","id":3532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1732:4:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"argumentTypes":null,"hexValue":"30","id":3533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1738:1:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3534,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1731:9:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3528,"id":3535,"nodeType":"Return","src":"1724:16:5"}},{"assignments":[3538],"declarations":[{"constant":false,"id":3538,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":3557,"src":"1750:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3537,"name":"uint256","nodeType":"ElementaryTypeName","src":"1750:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":3542,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3539,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"1762:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"id":3540,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"1766:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1762:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1750:17:5"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3543,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"1781:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":3544,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"1785:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1781:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":3546,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"1790:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1781:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":3552,"nodeType":"IfStatement","src":"1777:33:5","trueBody":{"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"hexValue":"66616c7365","id":3548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1801:5:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"argumentTypes":null,"hexValue":"30","id":3549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:1:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3550,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1800:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3528,"id":3551,"nodeType":"Return","src":"1793:17:5"}},{"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"hexValue":"74727565","id":3553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1828:4:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"argumentTypes":null,"id":3554,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"1834:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3555,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1827:9:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3528,"id":3556,"nodeType":"Return","src":"1820:16:5"}]},"documentation":{"id":3518,"nodeType":"StructuredDocumentation","src":"1266:137:5","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":3558,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3520,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":3558,"src":"1424:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3519,"name":"uint256","nodeType":"ElementaryTypeName","src":"1424:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3522,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":3558,"src":"1435:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3521,"name":"uint256","nodeType":"ElementaryTypeName","src":"1435:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1423:22:5"},"returnParameters":{"id":3528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3525,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":3558,"src":"1469:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3524,"name":"bool","nodeType":"ElementaryTypeName","src":"1469:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":3527,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":3558,"src":"1475:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3526,"name":"uint256","nodeType":"ElementaryTypeName","src":"1475:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1468:15:5"},"scope":3811,"src":"1408:435:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3584,"nodeType":"Block","src":"2068:76:5","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3570,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"2082:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":3571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2087:1:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2082:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":3577,"nodeType":"IfStatement","src":"2078:29:5","trueBody":{"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"hexValue":"66616c7365","id":3573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2098:5:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"argumentTypes":null,"hexValue":"30","id":3574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2105:1:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3575,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2097:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3569,"id":3576,"nodeType":"Return","src":"2090:17:5"}},{"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"hexValue":"74727565","id":3578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2125:4:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3579,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"2131:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":3580,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"2135:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2131:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3582,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2124:13:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3569,"id":3583,"nodeType":"Return","src":"2117:20:5"}]},"documentation":{"id":3559,"nodeType":"StructuredDocumentation","src":"1849:138:5","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":3585,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3561,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":3585,"src":"2008:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3560,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3563,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":3585,"src":"2019:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3562,"name":"uint256","nodeType":"ElementaryTypeName","src":"2019:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2007:22:5"},"returnParameters":{"id":3569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3566,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":3585,"src":"2053:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3565,"name":"bool","nodeType":"ElementaryTypeName","src":"2053:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":3568,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":3585,"src":"2059:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3567,"name":"uint256","nodeType":"ElementaryTypeName","src":"2059:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2052:15:5"},"scope":3811,"src":"1992:152:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3611,"nodeType":"Block","src":"2379:76:5","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3597,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"2393:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":3598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2398:1:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2393:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":3604,"nodeType":"IfStatement","src":"2389:29:5","trueBody":{"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"hexValue":"66616c7365","id":3600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2409:5:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"argumentTypes":null,"hexValue":"30","id":3601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2416:1:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3602,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2408:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3596,"id":3603,"nodeType":"Return","src":"2401:17:5"}},{"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"hexValue":"74727565","id":3605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2436:4:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3606,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"2442:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"argumentTypes":null,"id":3607,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"2446:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2442:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3609,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2435:13:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3596,"id":3610,"nodeType":"Return","src":"2428:20:5"}]},"documentation":{"id":3586,"nodeType":"StructuredDocumentation","src":"2150:148:5","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":3612,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3588,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":3612,"src":"2319:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3587,"name":"uint256","nodeType":"ElementaryTypeName","src":"2319:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3590,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":3612,"src":"2330:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3589,"name":"uint256","nodeType":"ElementaryTypeName","src":"2330:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2318:22:5"},"returnParameters":{"id":3596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3593,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":3612,"src":"2364:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3592,"name":"bool","nodeType":"ElementaryTypeName","src":"2364:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":3595,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":3612,"src":"2370:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3594,"name":"uint256","nodeType":"ElementaryTypeName","src":"2370:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2363:15:5"},"scope":3811,"src":"2303:152:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3637,"nodeType":"Block","src":"2757:108:5","statements":[{"assignments":[3623],"declarations":[{"constant":false,"id":3623,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":3637,"src":"2767:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3622,"name":"uint256","nodeType":"ElementaryTypeName","src":"2767:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":3627,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3624,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"2779:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"id":3625,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"2783:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2779:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2767:17:5"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3629,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"2802:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":3630,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"2807:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2802:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"536166654d6174683a206164646974696f6e206f766572666c6f77","id":3632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2810:29:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""},"value":"SafeMath: addition overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""}],"id":3628,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2794:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2794:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3634,"nodeType":"ExpressionStatement","src":"2794:46:5"},{"expression":{"argumentTypes":null,"id":3635,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"2857:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3621,"id":3636,"nodeType":"Return","src":"2850:8:5"}]},"documentation":{"id":3613,"nodeType":"StructuredDocumentation","src":"2461:224:5","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":3638,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3615,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":3638,"src":"2703:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3614,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3617,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":3638,"src":"2714:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3616,"name":"uint256","nodeType":"ElementaryTypeName","src":"2714:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2702:22:5"},"returnParameters":{"id":3621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3620,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":3638,"src":"2748:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3619,"name":"uint256","nodeType":"ElementaryTypeName","src":"2748:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2747:9:5"},"scope":3811,"src":"2690:175:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3659,"nodeType":"Block","src":"3203:88:5","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3649,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3643,"src":"3221:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"id":3650,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3641,"src":"3226:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3221:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"536166654d6174683a207375627472616374696f6e206f766572666c6f77","id":3652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3229:32:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""},"value":"SafeMath: subtraction overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""}],"id":3648,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3213:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3213:49:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3654,"nodeType":"ExpressionStatement","src":"3213:49:5"},{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3655,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3641,"src":"3279:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"id":3656,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3643,"src":"3283:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3279:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3647,"id":3658,"nodeType":"Return","src":"3272:12:5"}]},"documentation":{"id":3639,"nodeType":"StructuredDocumentation","src":"2871:260:5","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":3660,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3641,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":3660,"src":"3149:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3640,"name":"uint256","nodeType":"ElementaryTypeName","src":"3149:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3643,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":3660,"src":"3160:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3642,"name":"uint256","nodeType":"ElementaryTypeName","src":"3160:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3148:22:5"},"returnParameters":{"id":3647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3646,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":3660,"src":"3194:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3645,"name":"uint256","nodeType":"ElementaryTypeName","src":"3194:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3193:9:5"},"scope":3811,"src":"3136:155:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3693,"nodeType":"Block","src":"3605:148:5","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3670,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"3619:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":3671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3624:1:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3619:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":3675,"nodeType":"IfStatement","src":"3615:20:5","trueBody":{"expression":{"argumentTypes":null,"hexValue":"30","id":3673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3634:1:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3669,"id":3674,"nodeType":"Return","src":"3627:8:5"}},{"assignments":[3677],"declarations":[{"constant":false,"id":3677,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":3693,"src":"3645:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3676,"name":"uint256","nodeType":"ElementaryTypeName","src":"3645:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":3681,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3678,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"3657:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"id":3679,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"3661:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3657:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3645:17:5"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3683,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"3680:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":3684,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"3684:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3680:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":3686,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"3689:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3680:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77","id":3688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3692:35:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""},"value":"SafeMath: multiplication overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""}],"id":3682,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3672:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3672:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3690,"nodeType":"ExpressionStatement","src":"3672:56:5"},{"expression":{"argumentTypes":null,"id":3691,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"3745:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3669,"id":3692,"nodeType":"Return","src":"3738:8:5"}]},"documentation":{"id":3661,"nodeType":"StructuredDocumentation","src":"3297:236:5","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":3694,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3663,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":3694,"src":"3551:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3662,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3665,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":3694,"src":"3562:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3664,"name":"uint256","nodeType":"ElementaryTypeName","src":"3562:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3550:22:5"},"returnParameters":{"id":3669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3668,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":3694,"src":"3596:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3667,"name":"uint256","nodeType":"ElementaryTypeName","src":"3596:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3595:9:5"},"scope":3811,"src":"3538:215:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3715,"nodeType":"Block","src":"4284:83:5","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3705,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"4302:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":3706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4306:1:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4302:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"536166654d6174683a206469766973696f6e206279207a65726f","id":3708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4309:28:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""},"value":"SafeMath: division by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""}],"id":3704,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4294:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4294:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3710,"nodeType":"ExpressionStatement","src":"4294:44:5"},{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3711,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"4355:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":3712,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"4359:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4355:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3703,"id":3714,"nodeType":"Return","src":"4348:12:5"}]},"documentation":{"id":3695,"nodeType":"StructuredDocumentation","src":"3759:453:5","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":3716,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3697,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":3716,"src":"4230:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3696,"name":"uint256","nodeType":"ElementaryTypeName","src":"4230:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3699,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":3716,"src":"4241:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3698,"name":"uint256","nodeType":"ElementaryTypeName","src":"4241:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4229:22:5"},"returnParameters":{"id":3703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3702,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":3716,"src":"4275:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3701,"name":"uint256","nodeType":"ElementaryTypeName","src":"4275:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4274:9:5"},"scope":3811,"src":"4217:150:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3737,"nodeType":"Block","src":"4887:81:5","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3727,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"4905:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":3728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4909:1:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4905:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"536166654d6174683a206d6f64756c6f206279207a65726f","id":3730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4912:26:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""},"value":"SafeMath: modulo by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""}],"id":3726,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4897:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4897:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3732,"nodeType":"ExpressionStatement","src":"4897:42:5"},{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3733,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"4956:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"argumentTypes":null,"id":3734,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"4960:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4956:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3725,"id":3736,"nodeType":"Return","src":"4949:12:5"}]},"documentation":{"id":3717,"nodeType":"StructuredDocumentation","src":"4373:442:5","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":3738,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3719,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":3738,"src":"4833:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3718,"name":"uint256","nodeType":"ElementaryTypeName","src":"4833:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3721,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":3738,"src":"4844:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3720,"name":"uint256","nodeType":"ElementaryTypeName","src":"4844:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4832:22:5"},"returnParameters":{"id":3725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3724,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":3738,"src":"4878:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3723,"name":"uint256","nodeType":"ElementaryTypeName","src":"4878:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4877:9:5"},"scope":3811,"src":"4820:148:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3761,"nodeType":"Block","src":"5527:68:5","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3751,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"5545:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"id":3752,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"5550:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5545:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"id":3754,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3745,"src":"5553:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3750,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5537:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5537:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3756,"nodeType":"ExpressionStatement","src":"5537:29:5"},{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3757,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"5583:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"id":3758,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"5587:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5583:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3749,"id":3760,"nodeType":"Return","src":"5576:12:5"}]},"documentation":{"id":3739,"nodeType":"StructuredDocumentation","src":"4974:453:5","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":3762,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3741,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":3762,"src":"5445:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3740,"name":"uint256","nodeType":"ElementaryTypeName","src":"5445:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3743,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":3762,"src":"5456:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3742,"name":"uint256","nodeType":"ElementaryTypeName","src":"5456:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3745,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","overrides":null,"scope":3762,"src":"5467:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3744,"name":"string","nodeType":"ElementaryTypeName","src":"5467:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"5444:50:5"},"returnParameters":{"id":3749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3748,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":3762,"src":"5518:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3747,"name":"uint256","nodeType":"ElementaryTypeName","src":"5518:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5517:9:5"},"scope":3811,"src":"5432:163:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3785,"nodeType":"Block","src":"6347:67:5","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3775,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"6365:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":3776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:1:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6365:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"id":3778,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"6372:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3774,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6357:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6357:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3780,"nodeType":"ExpressionStatement","src":"6357:28:5"},{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3781,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"6402:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":3782,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"6406:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6402:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3773,"id":3784,"nodeType":"Return","src":"6395:12:5"}]},"documentation":{"id":3763,"nodeType":"StructuredDocumentation","src":"5601:646:5","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":3786,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3765,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":3786,"src":"6265:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3764,"name":"uint256","nodeType":"ElementaryTypeName","src":"6265:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3767,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":3786,"src":"6276:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3766,"name":"uint256","nodeType":"ElementaryTypeName","src":"6276:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3769,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","overrides":null,"scope":3786,"src":"6287:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3768,"name":"string","nodeType":"ElementaryTypeName","src":"6287:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"6264:50:5"},"returnParameters":{"id":3773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3772,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":3786,"src":"6338:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3771,"name":"uint256","nodeType":"ElementaryTypeName","src":"6338:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6337:9:5"},"scope":3811,"src":"6252:162:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3809,"nodeType":"Block","src":"7155:67:5","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3799,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"7173:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":3800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7177:1:5","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7173:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"id":3802,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"7180:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3798,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7165:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7165:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3804,"nodeType":"ExpressionStatement","src":"7165:28:5"},{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3805,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"7210:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"argumentTypes":null,"id":3806,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"7214:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7210:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3797,"id":3808,"nodeType":"Return","src":"7203:12:5"}]},"documentation":{"id":3787,"nodeType":"StructuredDocumentation","src":"6420:635:5","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":3810,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3789,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":3810,"src":"7073:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3788,"name":"uint256","nodeType":"ElementaryTypeName","src":"7073:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3791,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":3810,"src":"7084:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3790,"name":"uint256","nodeType":"ElementaryTypeName","src":"7084:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":3793,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","overrides":null,"scope":3810,"src":"7095:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3792,"name":"string","nodeType":"ElementaryTypeName","src":"7095:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"7072:50:5"},"returnParameters":{"id":3797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3796,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":3810,"src":"7146:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3795,"name":"uint256","nodeType":"ElementaryTypeName","src":"7146:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"7145:9:5"},"scope":3811,"src":"7060:162:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3812,"src":"630:6594:5"}],"src":"33:7192:5"},"id":5},"openzeppelin-v3/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"openzeppelin-v3/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[3889]},"id":3890,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3813,"literals":["solidity",">=","0.6",".0","<","0.8",".0"],"nodeType":"PragmaDirective","src":"33:31:6"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":3814,"nodeType":"StructuredDocumentation","src":"66:70:6","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":3889,"linearizedBaseContracts":[3889],"name":"IERC20","nodeType":"ContractDefinition","nodes":[{"body":null,"documentation":{"id":3815,"nodeType":"StructuredDocumentation","src":"160:66:6","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":3820,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3816,"nodeType":"ParameterList","parameters":[],"src":"251:2:6"},"returnParameters":{"id":3819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3818,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":3820,"src":"277:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3817,"name":"uint256","nodeType":"ElementaryTypeName","src":"277:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"276:9:6"},"scope":3889,"src":"231:55:6","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":{"id":3821,"nodeType":"StructuredDocumentation","src":"292:72:6","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":3828,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3823,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","overrides":null,"scope":3828,"src":"388:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3822,"name":"address","nodeType":"ElementaryTypeName","src":"388:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"387:17:6"},"returnParameters":{"id":3827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3826,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":3828,"src":"428:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3825,"name":"uint256","nodeType":"ElementaryTypeName","src":"428:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"427:9:6"},"scope":3889,"src":"369:68:6","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":{"id":3829,"nodeType":"StructuredDocumentation","src":"443:209:6","text":" @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":3838,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3831,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","overrides":null,"scope":3838,"src":"675:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3830,"name":"address","nodeType":"ElementaryTypeName","src":"675:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":3833,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","overrides":null,"scope":3838,"src":"694:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3832,"name":"uint256","nodeType":"ElementaryTypeName","src":"694:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"674:35:6"},"returnParameters":{"id":3837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3836,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":3838,"src":"728:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3835,"name":"bool","nodeType":"ElementaryTypeName","src":"728:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"727:6:6"},"scope":3889,"src":"657:77:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":{"id":3839,"nodeType":"StructuredDocumentation","src":"740:264:6","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":3848,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3841,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","overrides":null,"scope":3848,"src":"1028:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3840,"name":"address","nodeType":"ElementaryTypeName","src":"1028:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":3843,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","overrides":null,"scope":3848,"src":"1043:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3842,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1027:32:6"},"returnParameters":{"id":3847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3846,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":3848,"src":"1083:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3845,"name":"uint256","nodeType":"ElementaryTypeName","src":"1083:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1082:9:6"},"scope":3889,"src":"1009:83:6","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":{"id":3849,"nodeType":"StructuredDocumentation","src":"1098:642:6","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":3858,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3851,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","overrides":null,"scope":3858,"src":"1762:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3850,"name":"address","nodeType":"ElementaryTypeName","src":"1762:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":3853,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","overrides":null,"scope":3858,"src":"1779:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3852,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1761:33:6"},"returnParameters":{"id":3857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3856,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":3858,"src":"1813:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3855,"name":"bool","nodeType":"ElementaryTypeName","src":"1813:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1812:6:6"},"scope":3889,"src":"1745:74:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":{"id":3859,"nodeType":"StructuredDocumentation","src":"1825:296:6","text":" @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":3870,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3861,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","overrides":null,"scope":3870,"src":"2148:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3860,"name":"address","nodeType":"ElementaryTypeName","src":"2148:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":3863,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","overrides":null,"scope":3870,"src":"2164:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3862,"name":"address","nodeType":"ElementaryTypeName","src":"2164:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":3865,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","overrides":null,"scope":3870,"src":"2183:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3864,"name":"uint256","nodeType":"ElementaryTypeName","src":"2183:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2147:51:6"},"returnParameters":{"id":3869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3868,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":3870,"src":"2217:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3867,"name":"bool","nodeType":"ElementaryTypeName","src":"2217:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2216:6:6"},"scope":3889,"src":"2126:97:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":3871,"nodeType":"StructuredDocumentation","src":"2229:158:6","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":3879,"name":"Transfer","nodeType":"EventDefinition","parameters":{"id":3878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3873,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","overrides":null,"scope":3879,"src":"2407:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3872,"name":"address","nodeType":"ElementaryTypeName","src":"2407:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":3875,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":3879,"src":"2429:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3874,"name":"address","nodeType":"ElementaryTypeName","src":"2429:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":3877,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":3879,"src":"2449:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3876,"name":"uint256","nodeType":"ElementaryTypeName","src":"2449:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2406:57:6"},"src":"2392:72:6"},{"anonymous":false,"documentation":{"id":3880,"nodeType":"StructuredDocumentation","src":"2470:148:6","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":3888,"name":"Approval","nodeType":"EventDefinition","parameters":{"id":3887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3882,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","overrides":null,"scope":3888,"src":"2638:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3881,"name":"address","nodeType":"ElementaryTypeName","src":"2638:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":3884,"indexed":true,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","overrides":null,"scope":3888,"src":"2661:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3883,"name":"address","nodeType":"ElementaryTypeName","src":"2661:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":3886,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":3888,"src":"2686:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3885,"name":"uint256","nodeType":"ElementaryTypeName","src":"2686:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2637:63:6"},"src":"2623:78:6"}],"scope":3890,"src":"137:2566:6"}],"src":"33:2671:6"},"id":6},"openzeppelin-v3/token/ERC20/SafeERC20.sol":{"ast":{"absolutePath":"openzeppelin-v3/token/ERC20/SafeERC20.sol","exportedSymbols":{"SafeERC20":[4102]},"id":4103,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3891,"literals":["solidity",">=","0.6",".0","<","0.8",".0"],"nodeType":"PragmaDirective","src":"33:31:7"},{"absolutePath":"openzeppelin-v3/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":3892,"nodeType":"ImportDirective","scope":4103,"sourceUnit":3890,"src":"66:22:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-v3/math/SafeMath.sol","file":"../../math/SafeMath.sol","id":3893,"nodeType":"ImportDirective","scope":4103,"sourceUnit":3812,"src":"89:33:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-v3/utils/Address.sol","file":"../../utils/Address.sol","id":3894,"nodeType":"ImportDirective","scope":4103,"sourceUnit":4399,"src":"123:33:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3895,"nodeType":"StructuredDocumentation","src":"158:457:7","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":4102,"linearizedBaseContracts":[4102],"name":"SafeERC20","nodeType":"ContractDefinition","nodes":[{"id":3898,"libraryName":{"contractScope":null,"id":3896,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":3811,"src":"646:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$3811","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"640:27:7","typeName":{"id":3897,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":3901,"libraryName":{"contractScope":null,"id":3899,"name":"Address","nodeType":"UserDefinedTypeName","referencedDeclaration":4398,"src":"678:7:7","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$4398","typeString":"library Address"}},"nodeType":"UsingForDirective","src":"672:26:7","typeName":{"id":3900,"name":"address","nodeType":"ElementaryTypeName","src":"690:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":3922,"nodeType":"Block","src":"776:103:7","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":3911,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"806:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3914,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"836:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":3838,"src":"836:14:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"836:23:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"argumentTypes":null,"id":3917,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"861:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":3918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"865:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":3912,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"813:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"813:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"813:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3910,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"786:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3889_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"786:86:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3921,"nodeType":"ExpressionStatement","src":"786:86:7"}]},"documentation":null,"id":3923,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3903,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","overrides":null,"scope":3923,"src":"726:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"},"typeName":{"contractScope":null,"id":3902,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":3889,"src":"726:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},"value":null,"visibility":"internal"},{"constant":false,"id":3905,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":3923,"src":"740:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3904,"name":"address","nodeType":"ElementaryTypeName","src":"740:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":3907,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":3923,"src":"752:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3906,"name":"uint256","nodeType":"ElementaryTypeName","src":"752:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"725:41:7"},"returnParameters":{"id":3909,"nodeType":"ParameterList","parameters":[],"src":"776:0:7"},"scope":4102,"src":"704:175:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3947,"nodeType":"Block","src":"975:113:7","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":3935,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"1005:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3938,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"1035:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":3870,"src":"1035:18:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1035:27:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"argumentTypes":null,"id":3941,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"1064:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":3942,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"1070:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":3943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"1074:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":3936,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1012:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1012:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1012:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3934,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"985:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3889_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"985:96:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3946,"nodeType":"ExpressionStatement","src":"985:96:7"}]},"documentation":null,"id":3948,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3925,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","overrides":null,"scope":3948,"src":"911:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"},"typeName":{"contractScope":null,"id":3924,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":3889,"src":"911:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},"value":null,"visibility":"internal"},{"constant":false,"id":3927,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","overrides":null,"scope":3948,"src":"925:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3926,"name":"address","nodeType":"ElementaryTypeName","src":"925:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":3929,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":3948,"src":"939:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3928,"name":"address","nodeType":"ElementaryTypeName","src":"939:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":3931,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":3948,"src":"951:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3930,"name":"uint256","nodeType":"ElementaryTypeName","src":"951:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"910:55:7"},"returnParameters":{"id":3933,"nodeType":"ParameterList","parameters":[],"src":"975:0:7"},"scope":4102,"src":"885:203:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3990,"nodeType":"Block","src":"1424:537:7","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":3959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"1713:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":3960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1722:1:7","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1713:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3962,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1712:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":3967,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1753:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$4102","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$4102","typeString":"library SafeERC20"}],"id":3966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1745:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3965,"name":"address","nodeType":"ElementaryTypeName","src":"1745:7:7","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1745:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":3969,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"1760:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":3963,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"1729:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":3848,"src":"1729:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1729:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":3971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1772:1:7","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1729:44:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3973,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1728:46:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1712:62:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":3975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1788:56:7","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":3958,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1704:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1704:150:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3977,"nodeType":"ExpressionStatement","src":"1704:150:7"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":3979,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"1884:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":3982,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"1914:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":3858,"src":"1914:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1914:22:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"argumentTypes":null,"id":3985,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"1938:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":3986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"1947:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":3980,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1891:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1891:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1891:62:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3978,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"1864:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3889_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1864:90:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3989,"nodeType":"ExpressionStatement","src":"1864:90:7"}]},"documentation":{"id":3949,"nodeType":"StructuredDocumentation","src":"1094:249:7","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":3991,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3951,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","overrides":null,"scope":3991,"src":"1369:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"},"typeName":{"contractScope":null,"id":3950,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":3889,"src":"1369:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},"value":null,"visibility":"internal"},{"constant":false,"id":3953,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","overrides":null,"scope":3991,"src":"1383:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3952,"name":"address","nodeType":"ElementaryTypeName","src":"1383:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":3955,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":3991,"src":"1400:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3954,"name":"uint256","nodeType":"ElementaryTypeName","src":"1400:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1368:46:7"},"returnParameters":{"id":3957,"nodeType":"ParameterList","parameters":[],"src":"1424:0:7"},"scope":4102,"src":"1348:613:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4026,"nodeType":"Block","src":"2053:197:7","statements":[{"assignments":[4001],"declarations":[{"constant":false,"id":4001,"mutability":"mutable","name":"newAllowance","nodeType":"VariableDeclaration","overrides":null,"scope":4026,"src":"2063:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4000,"name":"uint256","nodeType":"ElementaryTypeName","src":"2063:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":4013,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":4011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"2130:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":4006,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2110:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$4102","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$4102","typeString":"library SafeERC20"}],"id":4005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2102:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4004,"name":"address","nodeType":"ElementaryTypeName","src":"2102:7:7","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2102:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":4008,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"2117:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":4002,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3993,"src":"2086:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":3848,"src":"2086:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2086:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3638,"src":"2086:43:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2086:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2063:73:7"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":4015,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3993,"src":"2166:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":4018,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3993,"src":"2196:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":3858,"src":"2196:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2196:22:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"argumentTypes":null,"id":4021,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"2220:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":4022,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"2229:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":4016,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2173:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2173:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2173:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4014,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"2146:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3889_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2146:97:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4025,"nodeType":"ExpressionStatement","src":"2146:97:7"}]},"documentation":null,"id":4027,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":3998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3993,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","overrides":null,"scope":4027,"src":"1998:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"},"typeName":{"contractScope":null,"id":3992,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":3889,"src":"1998:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},"value":null,"visibility":"internal"},{"constant":false,"id":3995,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","overrides":null,"scope":4027,"src":"2012:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3994,"name":"address","nodeType":"ElementaryTypeName","src":"2012:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":3997,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":4027,"src":"2029:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3996,"name":"uint256","nodeType":"ElementaryTypeName","src":"2029:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1997:46:7"},"returnParameters":{"id":3999,"nodeType":"ParameterList","parameters":[],"src":"2053:0:7"},"scope":4102,"src":"1967:283:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4063,"nodeType":"Block","src":"2342:242:7","statements":[{"assignments":[4037],"declarations":[{"constant":false,"id":4037,"mutability":"mutable","name":"newAllowance","nodeType":"VariableDeclaration","overrides":null,"scope":4063,"src":"2352:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4036,"name":"uint256","nodeType":"ElementaryTypeName","src":"2352:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":4050,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":4047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"2419:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":4048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2426:43:7","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":4042,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2399:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$4102","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$4102","typeString":"library SafeERC20"}],"id":4041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2391:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4040,"name":"address","nodeType":"ElementaryTypeName","src":"2391:7:7","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2391:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":4044,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"2406:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":4038,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"2375:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":3848,"src":"2375:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2375:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":3762,"src":"2375:43:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2375:95:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2352:118:7"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":4052,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"2500:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":4055,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"2530:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":3858,"src":"2530:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2530:22:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"argumentTypes":null,"id":4058,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"2554:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":4059,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"2563:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":4053,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2507:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2507:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2507:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4051,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"2480:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3889_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2480:97:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4062,"nodeType":"ExpressionStatement","src":"2480:97:7"}]},"documentation":null,"id":4064,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":4034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4029,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","overrides":null,"scope":4064,"src":"2287:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"},"typeName":{"contractScope":null,"id":4028,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":3889,"src":"2287:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},"value":null,"visibility":"internal"},{"constant":false,"id":4031,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","overrides":null,"scope":4064,"src":"2301:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4030,"name":"address","nodeType":"ElementaryTypeName","src":"2301:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4033,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":4064,"src":"2318:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4032,"name":"uint256","nodeType":"ElementaryTypeName","src":"2318:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2286:46:7"},"returnParameters":{"id":4035,"nodeType":"ParameterList","parameters":[],"src":"2342:0:7"},"scope":4102,"src":"2256:328:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4100,"nodeType":"Block","src":"3037:681:7","statements":[{"assignments":[4073],"declarations":[{"constant":false,"id":4073,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","overrides":null,"scope":4100,"src":"3386:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4072,"name":"bytes","nodeType":"ElementaryTypeName","src":"3386:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"id":4082,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":4079,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"3440:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":4080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3446:34:7","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":4076,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"3420:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}],"id":4075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3412:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4074,"name":"address","nodeType":"ElementaryTypeName","src":"3412:7:7","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3412:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":4193,"src":"3412:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3412:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3386:95:7"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":4083,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4073,"src":"3495:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3495:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":4085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3515:1:7","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3495:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":4099,"nodeType":"IfStatement","src":"3491:221:7","trueBody":{"id":4098,"nodeType":"Block","src":"3518:194:7","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":4090,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4073,"src":"3635:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"components":[{"argumentTypes":null,"id":4092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3648:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":4091,"name":"bool","nodeType":"ElementaryTypeName","src":"3648:4:7","typeDescriptions":{"typeIdentifier":null,"typeString":null}}}],"id":4093,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3647:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"argumentTypes":null,"id":4088,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3624:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3624:10:7","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3624:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":4095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3656:44:7","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":4087,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3616:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3616:85:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4097,"nodeType":"ExpressionStatement","src":"3616:85:7"}]}}]},"documentation":{"id":4065,"nodeType":"StructuredDocumentation","src":"2590:372:7","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":4101,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":4070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4067,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","overrides":null,"scope":4101,"src":"2996:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"},"typeName":{"contractScope":null,"id":4066,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":3889,"src":"2996:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3889","typeString":"contract IERC20"}},"value":null,"visibility":"internal"},{"constant":false,"id":4069,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":4101,"src":"3010:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4068,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"2995:33:7"},"returnParameters":{"id":4071,"nodeType":"ParameterList","parameters":[],"src":"3037:0:7"},"scope":4102,"src":"2967:751:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":4103,"src":"616:3104:7"}],"src":"33:3688:7"},"id":7},"openzeppelin-v3/utils/Address.sol":{"ast":{"absolutePath":"openzeppelin-v3/utils/Address.sol","exportedSymbols":{"Address":[4398]},"id":4399,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4104,"literals":["solidity",">=","0.6",".2","<","0.8",".0"],"nodeType":"PragmaDirective","src":"33:31:8"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":4105,"nodeType":"StructuredDocumentation","src":"66:67:8","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":4398,"linearizedBaseContracts":[4398],"name":"Address","nodeType":"ContractDefinition","nodes":[{"body":{"id":4121,"nodeType":"Block","src":"792:347:8","statements":[{"assignments":[4114],"declarations":[{"constant":false,"id":4114,"mutability":"mutable","name":"size","nodeType":"VariableDeclaration","overrides":null,"scope":4121,"src":"989:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4113,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":4115,"initialValue":null,"nodeType":"VariableDeclarationStatement","src":"989:12:8"},{"AST":{"nodeType":"YulBlock","src":"1076:32:8","statements":[{"nodeType":"YulAssignment","src":"1078:28:8","value":{"arguments":[{"name":"account","nodeType":"YulIdentifier","src":"1098:7:8"}],"functionName":{"name":"extcodesize","nodeType":"YulIdentifier","src":"1086:11:8"},"nodeType":"YulFunctionCall","src":"1086:20:8"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1078:4:8"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":4108,"isOffset":false,"isSlot":false,"src":"1098:7:8","valueSize":1},{"declaration":4114,"isOffset":false,"isSlot":false,"src":"1078:4:8","valueSize":1}],"id":4116,"nodeType":"InlineAssembly","src":"1067:41:8"},{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":4117,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"1124:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":4118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1131:1:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1124:8:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4112,"id":4120,"nodeType":"Return","src":"1117:15:8"}]},"documentation":{"id":4106,"nodeType":"StructuredDocumentation","src":"156:565:8","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="},"id":4122,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":4109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4108,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","overrides":null,"scope":4122,"src":"746:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4107,"name":"address","nodeType":"ElementaryTypeName","src":"746:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"745:17:8"},"returnParameters":{"id":4112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4111,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":4122,"src":"786:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4110,"name":"bool","nodeType":"ElementaryTypeName","src":"786:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"785:6:8"},"scope":4398,"src":"726:413:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4155,"nodeType":"Block","src":"2127:320:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":4133,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2153:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$4398","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$4398","typeString":"library Address"}],"id":4132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4131,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:8","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2145:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2145:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":4136,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"2170:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2145:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":4138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2178:31:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":4130,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2137:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2137:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4140,"nodeType":"ExpressionStatement","src":"2137:73:8"},{"assignments":[4142,null],"declarations":[{"constant":false,"id":4142,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","overrides":null,"scope":4155,"src":"2299:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4141,"name":"bool","nodeType":"ElementaryTypeName","src":"2299:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},null],"id":4149,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"","id":4147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2349:2:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":null,"id":4143,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"2317:9:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2317:14:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"argumentTypes":null,"id":4145,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"2340:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2317:31:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2317:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2298:54:8"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":4151,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"2370:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":4152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2379:60:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":4150,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2362:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2362:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4154,"nodeType":"ExpressionStatement","src":"2362:78:8"}]},"documentation":{"id":4123,"nodeType":"StructuredDocumentation","src":"1145:906:8","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":4156,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":4128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4125,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","overrides":null,"scope":4156,"src":"2075:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":4124,"name":"address","nodeType":"ElementaryTypeName","src":"2075:15:8","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"value":null,"visibility":"internal"},{"constant":false,"id":4127,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","overrides":null,"scope":4156,"src":"2102:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4126,"name":"uint256","nodeType":"ElementaryTypeName","src":"2102:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2074:43:8"},"returnParameters":{"id":4129,"nodeType":"ParameterList","parameters":[],"src":"2127:0:8"},"scope":4398,"src":"2056:391:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4172,"nodeType":"Block","src":"3277:82:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":4167,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"3305:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":4168,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"3313:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":4169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3319:32:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":4166,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[4173,4193],"referencedDeclaration":4193,"src":"3292:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3292:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4165,"id":4171,"nodeType":"Return","src":"3285:67:8"}]},"documentation":{"id":4157,"nodeType":"StructuredDocumentation","src":"2453:730:8","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":4173,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":4162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4159,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","overrides":null,"scope":4173,"src":"3210:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4158,"name":"address","nodeType":"ElementaryTypeName","src":"3210:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4161,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":4173,"src":"3226:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4160,"name":"bytes","nodeType":"ElementaryTypeName","src":"3226:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"3209:35:8"},"returnParameters":{"id":4165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4164,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":4173,"src":"3263:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4163,"name":"bytes","nodeType":"ElementaryTypeName","src":"3263:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"3262:14:8"},"scope":4398,"src":"3188:171:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4192,"nodeType":"Block","src":"3698:76:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":4186,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"3737:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":4187,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"3745:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"hexValue":"30","id":4188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3751:1:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"argumentTypes":null,"id":4189,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"3754:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4185,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[4213,4263],"referencedDeclaration":4263,"src":"3715:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3715:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4184,"id":4191,"nodeType":"Return","src":"3708:59:8"}]},"documentation":{"id":4174,"nodeType":"StructuredDocumentation","src":"3365:211:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":4193,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":4181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4176,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","overrides":null,"scope":4193,"src":"3603:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4175,"name":"address","nodeType":"ElementaryTypeName","src":"3603:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4178,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":4193,"src":"3619:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4177,"name":"bytes","nodeType":"ElementaryTypeName","src":"3619:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":4180,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","overrides":null,"scope":4193,"src":"3638:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4179,"name":"string","nodeType":"ElementaryTypeName","src":"3638:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"3602:63:8"},"returnParameters":{"id":4184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4183,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":4193,"src":"3684:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4182,"name":"bytes","nodeType":"ElementaryTypeName","src":"3684:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"3683:14:8"},"scope":4398,"src":"3581:193:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4212,"nodeType":"Block","src":"4249:111:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":4206,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4196,"src":"4288:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":4207,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"4296:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":4208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"4302:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":4209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4309:43:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":4205,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[4213,4263],"referencedDeclaration":4263,"src":"4266:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4266:87:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4204,"id":4211,"nodeType":"Return","src":"4259:94:8"}]},"documentation":{"id":4194,"nodeType":"StructuredDocumentation","src":"3780:351:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":4213,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":4201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4196,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","overrides":null,"scope":4213,"src":"4167:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4195,"name":"address","nodeType":"ElementaryTypeName","src":"4167:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4198,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":4213,"src":"4183:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4197,"name":"bytes","nodeType":"ElementaryTypeName","src":"4183:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":4200,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":4213,"src":"4202:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4199,"name":"uint256","nodeType":"ElementaryTypeName","src":"4202:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4166:50:8"},"returnParameters":{"id":4204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4203,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":4213,"src":"4235:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4202,"name":"bytes","nodeType":"ElementaryTypeName","src":"4235:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"4234:14:8"},"scope":4398,"src":"4136:224:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4262,"nodeType":"Block","src":"4749:382:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":4230,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4775:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$4398","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$4398","typeString":"library Address"}],"id":4229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4767:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4228,"name":"address","nodeType":"ElementaryTypeName","src":"4767:7:8","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4767:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4767:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":4233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"4792:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4767:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":4235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4799:40:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":4227,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4759:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4759:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4237,"nodeType":"ExpressionStatement","src":"4759:81:8"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":4240,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"4869:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4239,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"4858:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4858:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":4242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4878:31:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":4238,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4850:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4850:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4244,"nodeType":"ExpressionStatement","src":"4850:60:8"},{"assignments":[4246,4248],"declarations":[{"constant":false,"id":4246,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","overrides":null,"scope":4262,"src":"4981:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4245,"name":"bool","nodeType":"ElementaryTypeName","src":"4981:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":4248,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","overrides":null,"scope":4262,"src":"4995:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4247,"name":"bytes","nodeType":"ElementaryTypeName","src":"4995:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"id":4255,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":4253,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"5050:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":4249,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"5022:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5022:11:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"argumentTypes":null,"id":4251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"5042:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5022:27:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5022:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4980:75:8"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":4257,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4246,"src":"5090:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"id":4258,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"5099:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":4259,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"5111:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4256,"name":"_verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"5072:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5072:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4226,"id":4261,"nodeType":"Return","src":"5065:59:8"}]},"documentation":{"id":4214,"nodeType":"StructuredDocumentation","src":"4366:237:8","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":4263,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":4223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4216,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","overrides":null,"scope":4263,"src":"4639:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4215,"name":"address","nodeType":"ElementaryTypeName","src":"4639:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4218,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":4263,"src":"4655:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4217,"name":"bytes","nodeType":"ElementaryTypeName","src":"4655:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":4220,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":4263,"src":"4674:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4219,"name":"uint256","nodeType":"ElementaryTypeName","src":"4674:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":4222,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","overrides":null,"scope":4263,"src":"4689:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4221,"name":"string","nodeType":"ElementaryTypeName","src":"4689:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"4638:78:8"},"returnParameters":{"id":4226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4225,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":4263,"src":"4735:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4224,"name":"bytes","nodeType":"ElementaryTypeName","src":"4735:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"4734:14:8"},"scope":4398,"src":"4608:523:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4279,"nodeType":"Block","src":"5408:97:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":4274,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"5444:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":4275,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"5452:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":4276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5458:39:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":4273,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[4280,4315],"referencedDeclaration":4315,"src":"5425:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5425:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4272,"id":4278,"nodeType":"Return","src":"5418:80:8"}]},"documentation":{"id":4264,"nodeType":"StructuredDocumentation","src":"5137:166:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":4280,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":4269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4266,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","overrides":null,"scope":4280,"src":"5336:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4265,"name":"address","nodeType":"ElementaryTypeName","src":"5336:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4268,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":4280,"src":"5352:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4267,"name":"bytes","nodeType":"ElementaryTypeName","src":"5352:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"5335:35:8"},"returnParameters":{"id":4272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4271,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":4280,"src":"5394:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4270,"name":"bytes","nodeType":"ElementaryTypeName","src":"5394:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"5393:14:8"},"scope":4398,"src":"5308:197:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4314,"nodeType":"Block","src":"5817:288:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":4294,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"5846:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4293,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"5835:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5835:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":4296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5855:38:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":4292,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5827:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5827:67:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4298,"nodeType":"ExpressionStatement","src":"5827:67:8"},{"assignments":[4300,4302],"declarations":[{"constant":false,"id":4300,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","overrides":null,"scope":4314,"src":"5965:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4299,"name":"bool","nodeType":"ElementaryTypeName","src":"5965:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":4302,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","overrides":null,"scope":4314,"src":"5979:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4301,"name":"bytes","nodeType":"ElementaryTypeName","src":"5979:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"id":4307,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":4305,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"6024:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":4303,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"6006:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6006:17:8","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6006:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5964:65:8"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":4309,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"6064:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"id":4310,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"6073:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":4311,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"6085:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4308,"name":"_verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"6046:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6046:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4291,"id":4313,"nodeType":"Return","src":"6039:59:8"}]},"documentation":{"id":4281,"nodeType":"StructuredDocumentation","src":"5511:173:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":4315,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":4288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4283,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","overrides":null,"scope":4315,"src":"5717:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4282,"name":"address","nodeType":"ElementaryTypeName","src":"5717:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4285,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":4315,"src":"5733:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4284,"name":"bytes","nodeType":"ElementaryTypeName","src":"5733:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":4287,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","overrides":null,"scope":4315,"src":"5752:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4286,"name":"string","nodeType":"ElementaryTypeName","src":"5752:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"5716:63:8"},"returnParameters":{"id":4291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4290,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":4315,"src":"5803:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4289,"name":"bytes","nodeType":"ElementaryTypeName","src":"5803:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"5802:14:8"},"scope":4398,"src":"5689:416:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4331,"nodeType":"Block","src":"6381:101:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":4326,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"6419:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":4327,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"6427:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":4328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6433:41:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":4325,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[4332,4367],"referencedDeclaration":4367,"src":"6398:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6398:77:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4324,"id":4330,"nodeType":"Return","src":"6391:84:8"}]},"documentation":{"id":4316,"nodeType":"StructuredDocumentation","src":"6111:168:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":4332,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":4321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4318,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","overrides":null,"scope":4332,"src":"6314:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4317,"name":"address","nodeType":"ElementaryTypeName","src":"6314:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4320,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":4332,"src":"6330:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4319,"name":"bytes","nodeType":"ElementaryTypeName","src":"6330:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"6313:35:8"},"returnParameters":{"id":4324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4323,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":4332,"src":"6367:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4322,"name":"bytes","nodeType":"ElementaryTypeName","src":"6367:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"6366:14:8"},"scope":4398,"src":"6284:198:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4366,"nodeType":"Block","src":"6793:292:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":4346,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"6822:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4345,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"6811:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6811:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":4348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6831:40:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":4344,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6803:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6803:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4350,"nodeType":"ExpressionStatement","src":"6803:69:8"},{"assignments":[4352,4354],"declarations":[{"constant":false,"id":4352,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","overrides":null,"scope":4366,"src":"6943:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4351,"name":"bool","nodeType":"ElementaryTypeName","src":"6943:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":4354,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","overrides":null,"scope":4366,"src":"6957:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4353,"name":"bytes","nodeType":"ElementaryTypeName","src":"6957:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"id":4359,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":4357,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"7004:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":4355,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"6984:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6984:19:8","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6984:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6942:67:8"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":4361,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"7044:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"id":4362,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"7053:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":4363,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"7065:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4360,"name":"_verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"7026:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7026:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4343,"id":4365,"nodeType":"Return","src":"7019:59:8"}]},"documentation":{"id":4333,"nodeType":"StructuredDocumentation","src":"6488:175:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":4367,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":4340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4335,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","overrides":null,"scope":4367,"src":"6698:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4334,"name":"address","nodeType":"ElementaryTypeName","src":"6698:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":4337,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":4367,"src":"6714:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4336,"name":"bytes","nodeType":"ElementaryTypeName","src":"6714:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":4339,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","overrides":null,"scope":4367,"src":"6733:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4338,"name":"string","nodeType":"ElementaryTypeName","src":"6733:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"6697:63:8"},"returnParameters":{"id":4343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4342,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":4367,"src":"6779:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4341,"name":"bytes","nodeType":"ElementaryTypeName","src":"6779:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"6778:14:8"},"scope":4398,"src":"6668:417:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4396,"nodeType":"Block","src":"7220:596:8","statements":[{"condition":{"argumentTypes":null,"id":4378,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"7234:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4394,"nodeType":"Block","src":"7291:519:8","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":4382,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"7375:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7375:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":4384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7395:1:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7375:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4392,"nodeType":"Block","src":"7747:53:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":4389,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4373,"src":"7772:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4388,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7765:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7765:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4391,"nodeType":"ExpressionStatement","src":"7765:20:8"}]},"id":4393,"nodeType":"IfStatement","src":"7371:429:8","trueBody":{"id":4387,"nodeType":"Block","src":"7398:343:8","statements":[{"AST":{"nodeType":"YulBlock","src":"7582:145:8","statements":[{"nodeType":"YulVariableDeclaration","src":"7604:40:8","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"7633:10:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7627:5:8"},"nodeType":"YulFunctionCall","src":"7627:17:8"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"7608:15:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7676:2:8","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"7680:10:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7672:3:8"},"nodeType":"YulFunctionCall","src":"7672:19:8"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"7693:15:8"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7665:6:8"},"nodeType":"YulFunctionCall","src":"7665:44:8"},"nodeType":"YulExpressionStatement","src":"7665:44:8"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":4371,"isOffset":false,"isSlot":false,"src":"7633:10:8","valueSize":1},{"declaration":4371,"isOffset":false,"isSlot":false,"src":"7680:10:8","valueSize":1}],"id":4386,"nodeType":"InlineAssembly","src":"7573:154:8"}]}}]},"id":4395,"nodeType":"IfStatement","src":"7230:580:8","trueBody":{"id":4381,"nodeType":"Block","src":"7243:42:8","statements":[{"expression":{"argumentTypes":null,"id":4379,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"7264:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4377,"id":4380,"nodeType":"Return","src":"7257:17:8"}]}}]},"documentation":null,"id":4397,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyCallResult","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":4374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4369,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","overrides":null,"scope":4397,"src":"7118:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4368,"name":"bool","nodeType":"ElementaryTypeName","src":"7118:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":4371,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","overrides":null,"scope":4397,"src":"7132:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4370,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":4373,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","overrides":null,"scope":4397,"src":"7157:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4372,"name":"string","nodeType":"ElementaryTypeName","src":"7157:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"7117:67:8"},"returnParameters":{"id":4377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4376,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":4397,"src":"7206:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4375,"name":"bytes","nodeType":"ElementaryTypeName","src":"7206:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"7205:14:8"},"scope":4398,"src":"7091:725:8","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4399,"src":"134:7684:8"}],"src":"33:7786:8"},"id":8},"openzeppelin-v3/utils/Context.sol":{"ast":{"absolutePath":"openzeppelin-v3/utils/Context.sol","exportedSymbols":{"Context":[4421]},"id":4422,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4400,"literals":["solidity",">=","0.6",".0","<","0.8",".0"],"nodeType":"PragmaDirective","src":"33:31:9"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":4421,"linearizedBaseContracts":[4421],"name":"Context","nodeType":"ContractDefinition","nodes":[{"body":{"id":4408,"nodeType":"Block","src":"668:34:9","statements":[{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":4405,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"685:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"685:10:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":4404,"id":4407,"nodeType":"Return","src":"678:17:9"}]},"documentation":null,"id":4409,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":4401,"nodeType":"ParameterList","parameters":[],"src":"617:2:9"},"returnParameters":{"id":4404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4403,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":4409,"src":"651:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":4402,"name":"address","nodeType":"ElementaryTypeName","src":"651:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"value":null,"visibility":"internal"}],"src":"650:17:9"},"scope":4421,"src":"598:104:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4419,"nodeType":"Block","src":"773:165:9","statements":[{"expression":{"argumentTypes":null,"id":4414,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"783:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Context_$4421","typeString":"contract Context"}},"id":4415,"nodeType":"ExpressionStatement","src":"783:4:9"},{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":4416,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"923:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","referencedDeclaration":null,"src":"923:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":4413,"id":4418,"nodeType":"Return","src":"916:15:9"}]},"documentation":null,"id":4420,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":4410,"nodeType":"ParameterList","parameters":[],"src":"725:2:9"},"returnParameters":{"id":4413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4412,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":4420,"src":"759:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4411,"name":"bytes","nodeType":"ElementaryTypeName","src":"759:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"758:14:9"},"scope":4421,"src":"708:230:9","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":4422,"src":"566:374:9"}],"src":"33:908:9"},"id":9},"openzeppelin-v3/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"openzeppelin-v3/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[4461]},"id":4462,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4423,"literals":["solidity",">=","0.6",".0","<","0.8",".0"],"nodeType":"PragmaDirective","src":"33:31:10"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":4424,"nodeType":"StructuredDocumentation","src":"66:750:10","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":4461,"linearizedBaseContracts":[4461],"name":"ReentrancyGuard","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":4427,"mutability":"constant","name":"_NOT_ENTERED","nodeType":"VariableDeclaration","overrides":null,"scope":4461,"src":"1605:41:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4425,"name":"uint256","nodeType":"ElementaryTypeName","src":"1605:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"hexValue":"31","id":4426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:10","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":4430,"mutability":"constant","name":"_ENTERED","nodeType":"VariableDeclaration","overrides":null,"scope":4461,"src":"1652:37:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4428,"name":"uint256","nodeType":"ElementaryTypeName","src":"1652:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"hexValue":"32","id":4429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1688:1:10","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":4432,"mutability":"mutable","name":"_status","nodeType":"VariableDeclaration","overrides":null,"scope":4461,"src":"1696:23:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4431,"name":"uint256","nodeType":"ElementaryTypeName","src":"1696:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"private"},{"body":{"id":4439,"nodeType":"Block","src":"1750:39:10","statements":[{"expression":{"argumentTypes":null,"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":4435,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"1760:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":4436,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"1770:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1760:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4438,"nodeType":"ExpressionStatement","src":"1760:22:10"}]},"documentation":null,"id":4440,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":4433,"nodeType":"ParameterList","parameters":[],"src":"1738:2:10"},"returnParameters":{"id":4434,"nodeType":"ParameterList","parameters":[],"src":"1750:0:10"},"scope":4461,"src":"1726:63:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4459,"nodeType":"Block","src":"2188:421:10","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":4444,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"2277:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":4445,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4430,"src":"2288:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2277:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":4447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2298:33:10","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":4443,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2269:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2269:63:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4449,"nodeType":"ExpressionStatement","src":"2269:63:10"},{"expression":{"argumentTypes":null,"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":4450,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"2407:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":4451,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4430,"src":"2417:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2407:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4453,"nodeType":"ExpressionStatement","src":"2407:18:10"},{"id":4454,"nodeType":"PlaceholderStatement","src":"2436:1:10"},{"expression":{"argumentTypes":null,"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":4455,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"2580:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":4456,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"2590:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2580:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4458,"nodeType":"ExpressionStatement","src":"2580:22:10"}]},"documentation":{"id":4441,"nodeType":"StructuredDocumentation","src":"1795:364:10","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and make it call a\n `private` function that does the actual work."},"id":4460,"name":"nonReentrant","nodeType":"ModifierDefinition","overrides":null,"parameters":{"id":4442,"nodeType":"ParameterList","parameters":[],"src":"2185:2:10"},"src":"2164:445:10","virtual":false,"visibility":"internal"}],"scope":4462,"src":"817:1794:10"}],"src":"33:2579:10"},"id":10}},"contracts":{"contracts/core/dao/PopLocker.sol":{"PopLocker":{"abi":[{"inputs":[{"internalType":"contract IERC20","name":"_stakingToken","type":"address"},{"internalType":"contract IRewardsEscrow","name":"_rewardsEscrow","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_previousDuration","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_newDuration","type":"uint256"}],"name":"EscrowDurationUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_user","type":"address"},{"indexed":true,"internalType":"address","name":"_kicked","type":"address"},{"indexed":false,"internalType":"uint256","name":"_reward","type":"uint256"}],"name":"KickReward","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_token","type":"address"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"Recovered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_user","type":"address"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"Relocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_token","type":"address"},{"indexed":false,"internalType":"uint256","name":"_reward","type":"uint256"}],"name":"RewardAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_user","type":"address"},{"indexed":true,"internalType":"address","name":"_rewardsToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"_reward","type":"uint256"}],"name":"RewardPaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_previous","type":"address"},{"indexed":false,"internalType":"address","name":"_new","type":"address"}],"name":"RewardsEscrowUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_user","type":"address"},{"indexed":false,"internalType":"uint256","name":"_paidAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_lockedAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_boostedAmount","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_user","type":"address"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"address","name":"_rewardsToken","type":"address"},{"internalType":"address","name":"_distributor","type":"address"},{"internalType":"bool","name":"_useBoost","type":"bool"}],"name":"addReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_rewardsToken","type":"address"},{"internalType":"address","name":"_distributor","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"approveRewardDistributor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_epoch","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"balanceAtEpochOf","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balances","outputs":[{"internalType":"uint112","name":"locked","type":"uint112"},{"internalType":"uint112","name":"boosted","type":"uint112"},{"internalType":"uint32","name":"nextUnlockIndex","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"boostPayment","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"boostRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"boostedSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"checkpointEpoch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"claimableRewards","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct PopLocker.EarnedData[]","name":"userRewards","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"denominator","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"epochCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"epochs","outputs":[{"internalType":"uint224","name":"supply","type":"uint224"},{"internalType":"uint32","name":"date","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"escrowDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_time","type":"uint256"}],"name":"findEpochId","outputs":[{"internalType":"uint256","name":"epoch","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"getReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_rewardsToken","type":"address"}],"name":"getRewardForDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isShutdown","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"kickExpiredLocks","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"kickRewardEpochDelay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"kickRewardPerEpoch","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_rewardsToken","type":"address"}],"name":"lastTimeRewardApplicable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_spendRatio","type":"uint256"}],"name":"lock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lockDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"lockedBalanceOf","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"lockedBalances","outputs":[{"internalType":"uint256","name":"total","type":"uint256"},{"internalType":"uint256","name":"unlockable","type":"uint256"},{"internalType":"uint256","name":"locked","type":"uint256"},{"components":[{"internalType":"uint112","name":"amount","type":"uint112"},{"internalType":"uint112","name":"boosted","type":"uint112"},{"internalType":"uint32","name":"unlockTime","type":"uint32"}],"internalType":"struct PopLocker.LockedBalance[]","name":"lockData","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lockedSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maximumBoostPayment","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextBoostRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextMaximumBoostPayment","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_rewardsToken","type":"address"},{"internalType":"uint256","name":"_reward","type":"uint256"}],"name":"notifyRewardAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"_relock","type":"bool"}],"name":"processExpiredLocks","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_relock","type":"bool"},{"internalType":"uint256","name":"_spendRatio","type":"uint256"},{"internalType":"address","name":"_withdrawTo","type":"address"}],"name":"processExpiredLocks","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"},{"internalType":"uint256","name":"_tokenAmount","type":"uint256"}],"name":"recoverERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"rewardData","outputs":[{"internalType":"bool","name":"useBoost","type":"bool"},{"internalType":"uint40","name":"periodFinish","type":"uint40"},{"internalType":"uint208","name":"rewardRate","type":"uint208"},{"internalType":"uint40","name":"lastUpdateTime","type":"uint40"},{"internalType":"uint208","name":"rewardPerTokenStored","type":"uint208"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"rewardDistributors","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_rewardsToken","type":"address"}],"name":"rewardPerToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"rewardTokens","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"rewardWeightOf","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"rewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rewardsDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rewardsEscrow","outputs":[{"internalType":"contract IRewardsEscrow","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"setApprovals","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_max","type":"uint256"},{"internalType":"uint256","name":"_rate","type":"uint256"},{"internalType":"address","name":"_receivingAddress","type":"address"}],"name":"setBoost","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"duration","type":"uint256"}],"name":"setEscrowDuration","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_rate","type":"uint256"},{"internalType":"uint256","name":"_delay","type":"uint256"}],"name":"setKickIncentive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_rewardsEscrow","type":"address"}],"name":"setRewardsEscrow","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"shutdown","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stakingToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"supply","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_epoch","type":"uint256"}],"name":"totalSupplyAtEpoch","outputs":[{"internalType":"uint256","name":"supply","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userLocks","outputs":[{"internalType":"uint112","name":"amount","type":"uint112"},{"internalType":"uint112","name":"boosted","type":"uint112"},{"internalType":"uint32","name":"unlockTime","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"userRewardPerTokenPaid","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"linkReferences":{},"object":"60a0604052600060108190556127106011819055601291909155601355606460145560046015556016805460ff191690553480156200003d57600080fd5b506040516200452938038062004529833981016040819052620000609162000350565b600160009081556200007162000233565b600180546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506040805180820190915260158082527f566f7465204c6f636b656420504f5020546f6b656e000000000000000000000060209092019182526200010591601791620002b4565b50604080518082019091526005808252640766c504f560dc1b60209092019182526200013491601891620002b4565b50600960f91b608052600280546001600160a01b03199081166001600160a01b0385811691909117909255600380549091169183169190911790556301e133806006556000620001ad62093a8062000199428262000237602090811b6200213317901c565b6200027860201b620021651790919060201c565b60408051808201909152600080825263ffffffff92831660208301908152600c8054600181018255925291517fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c790910180549251909316600160e01b026001600160e01b039182166001600160e01b031990931692909217161790555062000415915050565b3390565b6000808211620002645760405162461bcd60e51b81526004016200025b906200038e565b60405180910390fd5b8183816200026e57fe5b0490505b92915050565b600081158062000295575050808202828282816200029257fe5b04145b620002725760405162461bcd60e51b81526004016200025b90620003c5565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002f757805160ff191683800117855562000327565b8280016001018555821562000327579182015b82811115620003275782518255916020019190600101906200030a565b506200033592915062000339565b5090565b5b808211156200033557600081556001016200033a565b6000806040838503121562000363578182fd5b82516200037081620003fc565b60208401519092506200038381620003fc565b809150509250929050565b6020808252601c908201527f426f72696e674d6174683a206469766973696f6e206279207a65726f00000000604082015260600190565b60208082526018908201527f426f72696e674d6174683a204d756c204f766572666c6f770000000000000000604082015260600190565b6001600160a01b03811681146200041257600080fd5b50565b60805160f81c6140f66200043360003980610c1652506140f66000f3fe608060405234801561001057600080fd5b50600436106103195760003560e01c80638757b15b116101a9578063c00007b0116100ef578063e432488d1161009d578063e432488d14610681578063e465fe8014610689578063e70b9e271461069c578063f1229777146106af578063f2157932146106c2578063f2fde38b146106ca578063f8261597146106dd578063fc0e74d1146106f057610319565b8063c00007b0146105f7578063c1009f4b1461060a578063c6b61e4c14610612578063ca5c7b9114610633578063d3c45c761461063b578063dc01f60d1461064e578063e2ab691d1461066e57610319565b8063a81653c911610157578063a81653c91461058b578063a98e05bb1461059e578063aa33fedb146105a6578063b187bc22146105b9578063b5ed7a66146105c1578063b66503cf146105c9578063bcd11014146105dc578063bf86d690146105ef57610319565b80638757b15b1461053d578063887c7dc5146105455780638980f11f146105585780638da5cb5b1461056b57806395d89b411461057357806396ce07951461057b5780639bdc74671461058357610319565b806357c2c2ba1161026e57806370b36d791161021c57806370b36d79146104cf57806370e664cd146104e2578063715018a6146104f557806372f702f3146104fd57806375aadf61146105125780637bb7bed11461051a5780637bd48c7c1461052d578063829965cc1461053557610319565b806357c2c2ba14610455578063593557361461045d578063638634ee1461047057806363f1c8e2146104835780636724c910146104965780637035ab98146104a957806370a08231146104bc57610319565b80632fe87108116102cb5780632fe87108146103b9578063312ff839146103cc578063313ce567146103e1578063321bc347146103f6578063386a95251461040957806339fc97131461041157806348e5d9f81461043157610319565b8063045544431461031e5780630483a7f61461033c57806306fdde031461035f57806318160ddd146103745780631c6073951461037c57806327e235e31461038f5780632e9564e4146103b1575b600080fd5b6103266106f8565b6040516103339190613fa8565b60405180910390f35b61034f61034a366004613677565b6106ff565b6040516103339493929190613fde565b6103676108c5565b60405161033391906139c5565b61032661095b565b61032661038a366004613813565b610a31565b6103a261039d366004613677565b610b5d565b60405161033393929190613f60565b610326610b93565b6103266103c7366004613677565b610b99565b6103df6103da36600461376d565b610bc8565b005b6103e9610c14565b6040516103339190614060565b6103df6104043660046137e3565b610c38565b610326610cb7565b61042461041f366004613692565b610cbe565b6040516103339190613984565b61044461043f366004613677565b610cde565b60405161033395949392919061398f565b610326610d2a565b61032661046b366004613677565b610d30565b61032661047e366004613677565b610d54565b6103df610491366004613836565b610d82565b6103df6104a43660046136c6565b610e0f565b6103266104b7366004613692565b610ec7565b6103266104ca366004613677565b610ee4565b6103266104dd3660046137e3565b611008565b6103df6104f03660046137a5565b61112a565b6103df61116e565b6105056111f7565b60405161033391906138a0565b610326611206565b6105056105283660046137e3565b61120c565b610326611233565b610326611239565b6103df61123f565b6103df610553366004613677565b61127e565b6103df610566366004613710565b6112cf565b6105056113d5565b6103676113e4565b610326611445565b61032661144b565b6103df610599366004613857565b611451565b610505611522565b6103a26105b4366004613710565b611531565b61032661157d565b610326611583565b6103df6105d7366004613710565b611589565b6103266105ea366004613677565b61181f565b610424611855565b6103df610605366004613677565b61185e565b6103df611ba1565b6106256106203660046137e3565b611ba9565b604051610333929190613f89565b610326611bde565b6103df6106493660046136c6565b611be4565b61066161065c366004613677565b611d09565b604051610333919061392c565b6103df61067c36600461373a565b611e4a565b610326611e95565b6103df610697366004613677565b611e9b565b6103266106aa366004613692565b611f43565b6103266106bd366004613677565b611f60565b610505611f6b565b6103df6106d8366004613677565b611f7a565b6103266106eb3660046137e3565b61203b565b6103df6120e5565b626ebe0081565b6001600160a01b0381166000908152600e60209081526040808320600d9092528220805483928392606092600160e01b900463ffffffff1684815b84548110156108ad574285828154811061075057fe5b600091825260209091200154600160e01b900463ffffffff16111561087757816107cd57845481900367ffffffffffffffff8111801561078f57600080fd5b506040519080825280602002602001820160405280156107c957816020015b6107b6613629565b8152602001906001900390816107ae5790505b5095505b8481815481106107d957fe5b60009182526020918290206040805160608101825291909201546001600160701b038082168352600160701b8204169382019390935263ffffffff600160e01b9093049290921690820152865187908490811061083257fe5b6020026020010181905250818060010192505061087085828154811061085457fe5b60009182526020909120015488906001600160701b031661219c565b96506108a5565b6108a285828154811061088657fe5b60009182526020909120015489906001600160701b031661219c565b97505b60010161073a565b505090546001600160701b0316955050509193509193565b60178054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109515780601f1061092657610100808354040283529160200191610951565b820191906000526020600020905b81548152906001019060200180831161093457829003601f168201915b5050505050905090565b60008061097562093a8061096f4282612133565b90612165565b9050600061098682626ebe006121bf565b600c80549192508390600019830183811061099d57fe5b600091825260209091200154600160e01b900463ffffffff1614156109c157600019015b60001981015b6001810115610a2a576000600c82815481106109df57fe5b60009182526020909120018054909150600160e01b900463ffffffff168410610a085750610a2a565b8054610a1e9087906001600160e01b031661219c565b955050600019016109c7565b5050505090565b6001600160a01b0381166000908152600e60205260408120600c805483919086908110610a5a57fe5b600091825260208220015463ffffffff600160e01b90910481169250610a87908390626ebe00906121bf16565b90506000610a9c62093a8061096f4282612133565b8454909150600019015b6001810115610b51576000610aea62093a80600c02878481548110610ac757fe5b60009182526020909120015463ffffffff600160e01b909104811691906121bf16565b9050848111158015610afb57508281105b15610b475783811115610b4157610b3a868381548110610b1757fe5b6000918252602090912001548890600160701b90046001600160701b031661219c565b9650610b47565b50610b51565b5060001901610aa6565b50505050505b92915050565b600d602052600090815260409020546001600160701b0380821691600160701b810490911690600160e01b900463ffffffff1683565b60115481565b6001600160a01b0381166000908152600d6020526040902054600160701b90046001600160701b03165b919050565b60026000541415610bf45760405162461bcd60e51b8152600401610beb90613e56565b60405180910390fd5b6002600081905550610c0c33826000333360006121e2565b506001600055565b7f000000000000000000000000000000000000000000000000000000000000000090565b610c4061278d565b6001600160a01b0316610c516113d5565b6001600160a01b031614610c775760405162461bcd60e51b8152600401610beb90613c7f565b7f21c46a061cb9c101660f51f5c9fc9768c5f6e8cf5dea8ca5cd03cb6db13956f360065482604051610caa929190613fd0565b60405180910390a1600655565b62093a8081565b600760209081526000928352604080842090915290825290205460ff1681565b6005602052600090815260409020805460019091015460ff82169164ffffffffff61010082048116926001600160d01b03600160301b90930483169291811691600160281b9091041685565b60065481565b6001600160a01b03166000908152600d60205260409020546001600160701b031690565b6001600160a01b038116600090815260056020526040812054610b5790610100900464ffffffffff16612791565b610d8a61278d565b6001600160a01b0316610d9b6113d5565b6001600160a01b031614610dc15760405162461bcd60e51b8152600401610beb90613c7f565b6101f4821115610de35760405162461bcd60e51b8152600401610beb90613b55565b6002811015610e045760405162461bcd60e51b8152600401610beb90613d22565b601491909155601555565b610e1761278d565b6001600160a01b0316610e286113d5565b6001600160a01b031614610e4e5760405162461bcd60e51b8152600401610beb90613c7f565b6001600160a01b03831660009081526005602052604090206001015464ffffffffff16610e8d5760405162461bcd60e51b8152600401610beb90613cb4565b6001600160a01b03928316600090815260076020908152604080832094909516825292909252919020805460ff1916911515919091179055565b600860209081526000928352604080842090915290825290205481565b6001600160a01b0381166000908152600e60209081526040808320600d90925290912080548254600160701b82046001600160701b0316939291600160e01b900463ffffffff1690815b81811015610fa75742858281548110610f4357fe5b600091825260209091200154600160e01b900463ffffffff1611610f9a57610f93858281548110610f7057fe5b6000918252602090912001548790600160701b90046001600160701b03166121bf565b9550610f9f565b610fa7565b600101610f2e565b506000610fbb62093a8061096f4282612133565b9050600082118015610fe4575080610fe262093a80600c02876001860381548110610ac757fe5b145b15610ffe57610ffb856001840381548110610f7057fe5b95505b5050505050919050565b60008061104962093a8061096f62093a80600c878154811061102657fe5b60009182526020909120015463ffffffff600160e01b9091048116919061213316565b9050600061105a82626ebe006121bf565b9050600061106f62093a8061096f4282612133565b905080600c868154811061107f57fe5b600091825260209091200154600160e01b900463ffffffff1614156110a657600019909401935b845b6001810115611121576000600c82815481106110c057fe5b60009182526020909120018054909150600160e01b900463ffffffff1684106110e95750611121565b611115600c83815481106110f957fe5b60009182526020909120015487906001600160e01b031661219c565b955050600019016110a8565b50505050919050565b6002600054141561114d5760405162461bcd60e51b8152600401610beb90613e56565b6002600081905550611164338484843360006121e2565b5050600160005550565b61117661278d565b6001600160a01b03166111876113d5565b6001600160a01b0316146111ad5760405162461bcd60e51b8152600401610beb90613c7f565b6001546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600180546001600160a01b0319169055565b6002546001600160a01b031681565b600b5481565b6004818154811061121957fe5b6000918252602090912001546001600160a01b0316905081565b60125481565b600c5490565b60035460025461125d916001600160a01b039182169116600061279d565b60035460025461127c916001600160a01b03918216911660001961279d565b565b600260005414156112a15760405162461bcd60e51b8152600401610beb90613e56565b6002600081905550610c0c8160008084336112ca60155462093a8061216590919063ffffffff16565b6121e2565b6112d761278d565b6001600160a01b03166112e86113d5565b6001600160a01b03161461130e5760405162461bcd60e51b8152600401610beb90613c7f565b6002546001600160a01b038381169116141561133c5760405162461bcd60e51b8152600401610beb90613ceb565b6001600160a01b03821660009081526005602052604090206001015464ffffffffff161561137c5760405162461bcd60e51b8152600401610beb90613e1f565b6113986113876113d5565b6001600160a01b038416908361289c565b7f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa2882826040516113c99291906138f2565b60405180910390a15050565b6001546001600160a01b031690565b60188054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109515780601f1061092657610100808354040283529160200191610951565b61271081565b60145481565b61145961278d565b6001600160a01b031661146a6113d5565b6001600160a01b0316146114905760405162461bcd60e51b8152600401610beb90613c7f565b6105dc83106114b15760405162461bcd60e51b8152600401610beb90613b2b565b61753082106114d25760405162461bcd60e51b8152600401610beb90613b55565b6001600160a01b0381166114f85760405162461bcd60e51b8152600401610beb90613ba2565b601292909255601355600f80546001600160a01b0319166001600160a01b03909216919091179055565b600f546001600160a01b031681565b600e602052816000526040600020818154811061154a57fe5b6000918252602090912001546001600160701b038082169350600160701b8204169150600160e01b900463ffffffff1683565b60105481565b60135481565b6000808052600d6020527f81955a0a11e65eac625c29e8882660bae4e165a75d72780094acae8ece9a29ee8054600160701b90046001600160701b0316825b600454811015611754576000600482815481106115e157fe5b6000918252602090912001546001600160a01b03169050611609611604826128bb565b6129ca565b6001600160a01b03821660009081526005602052604090206001810180546001600160d01b0393909316600160281b02600160281b600160f81b0319909316929092179091555461166f9061166a9064ffffffffff61010090910416612791565b6129f7565b6001600160a01b038281166000908152600560205260409020600101805464ffffffffff191664ffffffffff939093169290921790915585161561174b576001600160a01b0381166000908152600560205260409020546116ec908690839060ff166116e55786546001600160701b03166116e7565b855b612a1e565b6001600160a01b0386811660008181526009602090815260408083209487168084529482528083209590955560058152848220600101549282526008815284822093825292909252919020600160281b9091046001600160d01b031690555b506001016115c8565b5050506001600160a01b038316600090815260076020908152604080832033845290915290205460ff1661179a5760405162461bcd60e51b8152600401610beb90613c57565b600082116117ba5760405162461bcd60e51b8152600401610beb90613c34565b6117c48383612a96565b6117d96001600160a01b038416333085612bc9565b826001600160a01b03167fac24935fd910bc682b5ccb1a07b718cadf8cf2f6d1404c4f3ddc3662dae40e29836040516118129190613fa8565b60405180910390a2505050565b6001600160a01b038116600090815260056020526040812054610b5790600160301b90046001600160d01b031662093a80612165565b60165460ff1681565b600260005414156118815760405162461bcd60e51b8152600401610beb90613e56565b600260009081556001600160a01b0382168152600d6020526040812080548392600160701b9091046001600160701b0316905b600454811015611a2f576000600482815481106118cd57fe5b6000918252602090912001546001600160a01b031690506118f0611604826128bb565b6001600160a01b03821660009081526005602052604090206001810180546001600160d01b0393909316600160281b02600160281b600160f81b031990931692909217909155546119519061166a9064ffffffffff61010090910416612791565b6001600160a01b038281166000908152600560205260409020600101805464ffffffffff191664ffffffffff9390931692909217909155851615611a26576001600160a01b0381166000908152600560205260409020546119c7908690839060ff166116e55786546001600160701b03166116e7565b6001600160a01b0386811660008181526009602090815260408083209487168084529482528083209590955560058152848220600101549282526008815284822093825292909252919020600160281b9091046001600160d01b031690555b506001016118b4565b50505060005b60045481101561116457600060048281548110611a4e57fe5b60009182526020808320909101546001600160a01b038781168452600983526040808520919092168085529252909120549091508015611b97576001600160a01b0380861660009081526009602090815260408083209386168352929052908120819055611abd82600a612133565b90506000611acc826009612165565b9050611ae26001600160a01b038516888461289c565b60035460065460405163e2ab691d60e01b81526001600160a01b039092169163e2ab691d91611b17918b91869160040161390b565b600060405180830381600087803b158015611b3157600080fd5b505af1158015611b45573d6000803e3d6000fd5b50505050836001600160a01b0316876001600160a01b03167f540798df468d7b23d11f156fdb954cb19ad414d150722a7b6d55ba369dea792e85604051611b8c9190613fa8565b60405180910390a350505b5050600101611a35565b61127c612bf0565b600c8181548110611bb657fe5b6000918252602090912001546001600160e01b0381169150600160e01b900463ffffffff1682565b600a5481565b611bec61278d565b6001600160a01b0316611bfd6113d5565b6001600160a01b031614611c235760405162461bcd60e51b8152600401610beb90613c7f565b6001600160a01b03831660009081526005602052604090206001015464ffffffffff1615611c5057600080fd5b6004805460018082019092557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b039586169081179091556000908152600560209081526040808320808501805464ffffffffff19164264ffffffffff16908117909155815465ffffffffff0019166101009091021760ff1990811696151596909617905560078252808320959096168252939093529290912080549091169091179055565b60045460609067ffffffffffffffff81118015611d2557600080fd5b50604051908082528060200260200182016040528015611d5f57816020015b611d4c613649565b815260200190600190039081611d445790505b506001600160a01b0383166000908152600d60205260408120805492935091600160701b90046001600160701b0316905b8351811015611e4257600060048281548110611da857fe5b9060005260206000200160009054906101000a90046001600160a01b0316905080858381518110611dd557fe5b6020908102919091018101516001600160a01b039283169052908216600090815260059091526040902054611e1f908790839060ff166116e55786546001600160701b03166116e7565b858381518110611e2b57fe5b602090810291909101810151015250600101611d90565b505050919050565b60026000541415611e6d5760405162461bcd60e51b8152600401610beb90613e56565b6002600081905554611e8a906001600160a01b0316333085612bc9565b611164838383612d58565b60155481565b611ea361278d565b6001600160a01b0316611eb46113d5565b6001600160a01b031614611eda5760405162461bcd60e51b8152600401610beb90613c7f565b6003546040517fee4ec82b92f0e1fe230e6604a4752fa407a28069f106dc41e53edc28c4bc504e91611f19916001600160a01b039091169084906138b4565b60405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b600960209081526000928352604080842090915290825290205481565b6000610b57826128bb565b6003546001600160a01b031681565b611f8261278d565b6001600160a01b0316611f936113d5565b6001600160a01b031614611fb95760405162461bcd60e51b8152600401610beb90613c7f565b6001600160a01b038116611fdf5760405162461bcd60e51b8152600401610beb90613a95565b6001546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b600c54600090600019018161205762093a8061096f8682612133565b935060005b60808110156120dd57828210612071576120dd565b600060026001848601010490506000600c828154811061208d57fe5b600091825260209091200154600160e01b900463ffffffff169050868114156120bc57509350610bc392505050565b868110156120cc578193506120d3565b6001820394505b505060010161205c565b509392505050565b6120ed61278d565b6001600160a01b03166120fe6113d5565b6001600160a01b0316146121245760405162461bcd60e51b8152600401610beb90613c7f565b6016805460ff19166001179055565b60008082116121545760405162461bcd60e51b8152600401610beb90613a5e565b81838161215d57fe5b049392505050565b60008115806121805750508082028282828161217d57fe5b04145b610b575760405162461bcd60e51b8152600401610beb90613ee3565b81810181811015610b575760405162461bcd60e51b8152600401610beb90613bcb565b80820382811115610b575760405162461bcd60e51b8152600401610beb906139f8565b6001600160a01b0386166000908152600d6020526040812080548892600160701b9091046001600160701b0316905b60045481101561238c5760006004828154811061222a57fe5b6000918252602090912001546001600160a01b0316905061224d611604826128bb565b6001600160a01b03821660009081526005602052604090206001810180546001600160d01b0393909316600160281b02600160281b600160f81b031990931692909217909155546122ae9061166a9064ffffffffff61010090910416612791565b6001600160a01b038281166000908152600560205260409020600101805464ffffffffff191664ffffffffff9390931692909217909155851615612383576001600160a01b038116600090815260056020526040902054612324908690839060ff166116e55786546001600160701b03166116e7565b6001600160a01b0386811660008181526009602090815260408083209487168084529482528083209590955560058152848220600101549282526008815284822093825292909252919020600160281b9091046001600160d01b031690555b50600101612211565b5050506001600160a01b0387166000908152600e60209081526040808320600d9092528220815460165492939192829190829060ff16806123fd57506123d242896121bf565b8660018403815481106123e157fe5b600091825260209091200154600160e01b900463ffffffff1611155b156124745784546001600160701b038082169550600160701b90910416925061242582613329565b855463ffffffff91909116600160e01b026001600160e01b03909116178555871561246f5761246c8887600185038154811061245d57fe5b9060005260206000200161334f565b90505b61257b565b8454600160e01b900463ffffffff16805b8381101561255b57612497428b6121bf565b8882815481106124a357fe5b600091825260209091200154600160e01b900463ffffffff1611156124c75761255b565b6124f48882815481106124d657fe5b6000918252602090912001546001600160701b0388811691166133e5565b955061252a88828154811061250557fe5b6000918252602090912001546001600160701b0387811691600160701b9004166133e5565b9450891561254f5761254c6125458b8a848154811061245d57fe5b849061219c565b92505b60019182019101612485565b50855463ffffffff909116600160e01b026001600160e01b039091161785555b6000846001600160701b0316116125a45760405162461bcd60e51b8152600401610beb90613b7c565b84546125b9906001600160701b031685613414565b85546001600160701b0319166001600160701b03918216178087556125e791600160701b9091041684613414565b8554600160701b600160e01b031916600160701b6001600160701b0392831602178655600a546126189186166121bf565b600a55600b54612631906001600160701b0385166121bf565b600b5580156126bc5761265661264682613443565b6001600160701b03861690613414565b600254909450612670906001600160a01b03168a8361289c565b8c6001600160a01b0316896001600160a01b03167f7e7ff29ed04cfb223bc9b02606f69520517c117ee82c9158ed2d96323c1ef385836040516126b39190613fa8565b60405180910390a35b8b1561271c576126d68a856001600160701b03168d612d58565b8c6001600160a01b03167fe2d155d9d74decc198a9a9b4f5bddb24ee0842ee745c9ce57e3573b971e50d9d8560405161270f9190613f4c565b60405180910390a261277e565b60025461273c906001600160a01b03168b6001600160701b03871661289c565b8c6001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5856040516127759190613f4c565b60405180910390a25b50505050505050505050505050565b3390565b6000610b57428361346c565b8015806128255750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e906127d390309086906004016138b4565b60206040518083038186803b1580156127eb57600080fd5b505afa1580156127ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061282391906137fb565b155b6128415760405162461bcd60e51b8152600401610beb90613e8d565b6128978363095ea7b360e01b84846040516024016128609291906138f2565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613482565b505050565b6128978363a9059cbb60e01b84846040516024016128609291906138f2565b6000600b54600014156128fa57506001600160a01b038116600090815260056020526040902060010154600160281b90046001600160d01b0316610bc3565b6001600160a01b038216600090815260056020526040902054610b57906129989060ff1661292a57600a5461292e565b600b545b6001600160a01b0385166000908152600560205260409020805460019091015461299291670de0b6b3a76400009161096f916001600160d01b03600160301b82041691839164ffffffffff9182169161298c91610100900416612791565b906121bf565b90612133565b6001600160a01b038416600090815260056020526040902060010154600160281b90046001600160d01b03169061219c565b60006001600160d01b038211156129f35760405162461bcd60e51b8152600401610beb90613a27565b5090565b600064ffffffffff8211156129f35760405162461bcd60e51b8152600401610beb90613f15565b6001600160a01b038084166000818152600960209081526040808320948716808452948252808320549383526008825280832094835293905291822054612a8c9190612a8690670de0b6b3a76400009061299290612a7f9061298c8a6128bb565b8790612165565b9061219c565b90505b9392505050565b6001600160a01b03821660009081526005602052604090208054610100900464ffffffffff164210612af857612ad26116048362093a80612133565b81546001600160d01b0391909116600160301b0265ffffffffffff909116178155612b70565b8054600090612b1390610100900464ffffffffff16426121bf565b8254909150600090612b36908390600160301b90046001600160d01b0316612165565b9050612b4c61160462093a80612992878561219c565b83546001600160d01b0391909116600160301b0265ffffffffffff90911617835550505b612b79426129f7565b60018201805464ffffffffff191664ffffffffff92909216919091179055612ba761166a4262093a8061219c565b815464ffffffffff919091166101000265ffffffffff00199091161790555050565b612bea846323b872dd60e01b858585604051602401612860939291906138ce565b50505050565b6000612c0362093a8061096f4282612133565b600c805491925082906000198301838110612c1a57fe5b600091825260209091200154600160e01b900463ffffffff161015612d54575b600c80548391906000198101908110612c4f57fe5b600091825260209091200154600160e01b900463ffffffff1614612d30576000612cae62093a80600c6001600c805490500381548110612c8b57fe5b60009182526020909120015463ffffffff600160e01b9091048116919061219c16565b60408051808201909152600080825263ffffffff92831660208301908152600c8054600181018255925291517fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c790910180549251909316600160e01b026001600160e01b039182166001600160e01b0319909316929092171617905550612c3a565b60135460115414612d42576013546011555b60125460105414612d54576012546010555b5050565b6001600160a01b0383166000908152600d6020526040812080548592600160701b9091046001600160701b0316905b600454811015612f0257600060048281548110612da057fe5b6000918252602090912001546001600160a01b03169050612dc3611604826128bb565b6001600160a01b03821660009081526005602052604090206001810180546001600160d01b0393909316600160281b02600160281b600160f81b03199093169290921790915554612e249061166a9064ffffffffff61010090910416612791565b6001600160a01b038281166000908152600560205260409020600101805464ffffffffff191664ffffffffff9390931692909217909155851615612ef9576001600160a01b038116600090815260056020526040902054612e9a908690839060ff166116e55786546001600160701b03166116e7565b6001600160a01b0386811660008181526009602090815260408083209487168084529482528083209590955560058152848220600101549282526008815284822093825292909252919020600160281b9091046001600160d01b031690555b50600101612d87565b50505060008311612f255760405162461bcd60e51b8152600401610beb90613adb565b601054821115612f475760405162461bcd60e51b8152600401610beb90613b03565b60165460ff1615612f6a5760405162461bcd60e51b8152600401610beb90613d45565b6001600160a01b0384166000908152600d60205260409020612f8a612bf0565b6000612f9c6127106129928787612165565b90506000612fc5601054600014612fb557601054612fb8565b60015b6011546129929088612165565b90506000612fdb612fd688856121bf565b613443565b90506000612ffc612fd6612ff56127106129928c88612165565b8a9061219c565b8554909150613014906001600160701b0316836133e5565b85546001600160701b0319166001600160701b039182161780875561304291600160701b90910416826133e5565b8554600160701b600160e01b031916600160701b6001600160701b0392831602178655600a5461307391841661219c565b600a55600b5461308c906001600160701b03831661219c565b600b5560006130a262093a8061096f4282612133565b905060006130b382626ebe0061219c565b6001600160a01b038c166000908152600e602052604090205490915080158061311d57506001600160a01b038c166000908152600e602052604090208054839190600019840190811061310257fe5b600091825260209091200154600160e01b900463ffffffff16105b156131cc576001600160a01b038c166000908152600e6020908152604080832081516060810183526001600160701b03808b16825289811682860190815263ffffffff808a16958401958652845460018101865594885295909620915191909201805495519351909416600160e01b026001600160e01b03938316600160701b02600160701b600160e01b0319929093166001600160701b03199096169590951716171691909117905561326c565b6001600160a01b038c166000908152600e60205260408120805460001984019081106131f457fe5b60009182526020909120018054909150613217906001600160701b0316876133e5565b81546001600160701b0319166001600160701b039182161780835561324591600160701b90910416866133e5565b81546001600160701b0391909116600160701b02600160701b600160e01b03199091161790555b600c805460009190600019810190811061328257fe5b600091825260209091200180549091506132ae906001600160e01b03166001600160701b038716613511565b81546001600160e01b0319166001600160e01b039190911617815587156132ec57600f546002546132ec916001600160a01b0391821691168a61289c565b8c6001600160a01b03167fb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed8d888860405161277593929190613fb1565b600063ffffffff8211156129f35760405162461bcd60e51b8152600401610beb90613d9e565b60008061336762093a8061096f8161299242896121bf565b83549091506000906133949062093a809061299290859063ffffffff600160e01b9091048116906121bf16565b905060006133bb6133b38360010160145461216590919063ffffffff16565b61271061346c565b85549091506133db9061271090612992906001600160701b031684612165565b9695505050505050565b8181016001600160701b038083169082161015610b575760405162461bcd60e51b8152600401610beb90613bcb565b8082036001600160701b038084169082161115610b575760405162461bcd60e51b8152600401610beb906139f8565b60006001600160701b038211156129f35760405162461bcd60e51b8152600401610beb90613bfd565b600081831061347b5781612a8f565b5090919050565b60606134d7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166135409092919063ffffffff16565b80519091501561289757808060200190518101906134f59190613789565b6128975760405162461bcd60e51b8152600401610beb90613dd5565b8181016001600160e01b038083169082161015610b575760405162461bcd60e51b8152600401610beb90613bcb565b6060612a8c848460008585613554856135ea565b6135705760405162461bcd60e51b8152600401610beb90613d67565b60006060866001600160a01b0316858760405161358d9190613884565b60006040518083038185875af1925050503d80600081146135ca576040519150601f19603f3d011682016040523d82523d6000602084013e6135cf565b606091505b50915091506135df8282866135f0565b979650505050505050565b3b151590565b606083156135ff575081612a8f565b82511561360f5782518084602001fd5b8160405162461bcd60e51b8152600401610beb91906139c5565b604080516060810182526000808252602082018190529181019190915290565b604080518082019091526000808252602082015290565b80356001600160a01b0381168114610b5757600080fd5b600060208284031215613688578081fd5b612a8f8383613660565b600080604083850312156136a4578081fd5b6136ae8484613660565b91506136bd8460208501613660565b90509250929050565b6000806000606084860312156136da578081fd5b83356136e58161409a565b925060208401356136f58161409a565b91506040840135613705816140b2565b809150509250925092565b60008060408385031215613722578182fd5b61372c8484613660565b946020939093013593505050565b60008060006060848603121561374e578283fd5b6137588585613660565b95602085013595506040909401359392505050565b60006020828403121561377e578081fd5b8135612a8f816140b2565b60006020828403121561379a578081fd5b8151612a8f816140b2565b6000806000606084860312156137b9578283fd5b83356137c4816140b2565b9250602084013591506137da8560408601613660565b90509250925092565b6000602082840312156137f4578081fd5b5035919050565b60006020828403121561380c578081fd5b5051919050565b60008060408385031215613825578182fd5b823591506136bd8460208501613660565b60008060408385031215613848578182fd5b50508035926020909101359150565b60008060006060848603121561386b578283fd5b833592506020840135915060408401356137058161409a565b6000825161389681846020870161406e565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b602080825282518282018190526000919060409081850190868401855b8281101561397757815180516001600160a01b03168552860151868501529284019290850190600101613949565b5091979650505050505050565b901515815260200190565b941515855264ffffffffff93841660208601526001600160d01b0392831660408601529216606084015216608082015260a00190565b60006020825282518060208401526139e481604085016020870161406e565b601f01601f19169190910160400192915050565b602080825260159082015274426f72696e674d6174683a20556e646572666c6f7760581b604082015260600190565b6020808252601c908201527f426f72696e674d6174683a2075696e74323038204f766572666c6f7700000000604082015260600190565b6020808252601c908201527f426f72696e674d6174683a206469766973696f6e206279207a65726f00000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252600e908201526d043616e6e6f74207374616b6520360941b604082015260600190565b6020808252600e908201526d1bdd995c881b585e081cdc195b9960921b604082015260600190565b60208082526010908201526f1bdd995c881b585e081c185e5b595b9d60821b604082015260600190565b6020808252600d908201526c6f766572206d6178207261746560981b604082015260600190565b6020808252600c908201526b6e6f20657870206c6f636b7360a01b604082015260600190565b6020808252600f908201526e696e76616c6964206164647265737360881b604082015260600190565b602080825260189082015277426f72696e674d6174683a20416464204f766572666c6f7760401b604082015260600190565b6020808252601c908201527f426f72696e674d6174683a2075696e74313132204f766572666c6f7700000000604082015260600190565b602080825260099082015268139bc81c995dd85c9960ba1b604082015260600190565b6020808252600e908201526d1b9bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601c908201527f7265776172647320746f6b656e20646f6573206e6f7420657869737400000000604082015260600190565b6020808252601d908201527f43616e6e6f74207769746864726177207374616b696e6720746f6b656e000000604082015260600190565b6020808252600990820152686d696e2064656c617960b81b604082015260600190565b60208082526008908201526739b43aba3237bbb760c11b604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252601b908201527f426f72696e674d6174683a2075696e743332204f766572666c6f770000000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252601c908201527f43616e6e6f742077697468647261772072657761726420746f6b656e00000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526036908201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60408201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606082015260800190565b602080825260189082015277426f72696e674d6174683a204d756c204f766572666c6f7760401b604082015260600190565b6020808252601b908201527f426f72696e674d6174683a2075696e743430204f766572666c6f770000000000604082015260600190565b6001600160701b0391909116815260200190565b6001600160701b03938416815291909216602082015263ffffffff909116604082015260600190565b6001600160e01b0392909216825263ffffffff16602082015260400190565b90815260200190565b9283526001600160701b03918216602084015216604082015260600190565b918252602082015260400190565b6000608082018683526020868185015260408681860152606060808187015283875180865260a0880191508489019550865b8181101561404f57865180516001600160701b03908116855287820151168785015285015163ffffffff16858401529585019591830191600101614010565b50909b9a5050505050505050505050565b60ff91909116815260200190565b60005b83811015614089578181015183820152602001614071565b83811115612bea5750506000910152565b6001600160a01b03811681146140af57600080fd5b50565b80151581146140af57600080fdfea2646970667358221220416f85e4e8b536d3ce0e4215a41874773c09745124bf1576425660c9ca944ef164736f6c634300060c0033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x10 DUP2 SWAP1 SSTORE PUSH2 0x2710 PUSH1 0x11 DUP2 SWAP1 SSTORE PUSH1 0x12 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x13 SSTORE PUSH1 0x64 PUSH1 0x14 SSTORE PUSH1 0x4 PUSH1 0x15 SSTORE PUSH1 0x16 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4529 CODESIZE SUB DUP1 PUSH3 0x4529 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x60 SWAP2 PUSH3 0x350 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH3 0x71 PUSH3 0x233 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x0 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x15 DUP1 DUP3 MSTORE PUSH32 0x566F7465204C6F636B656420504F5020546F6B656E0000000000000000000000 PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0x105 SWAP2 PUSH1 0x17 SWAP2 PUSH3 0x2B4 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP1 DUP3 MSTORE PUSH5 0x766C504F5 PUSH1 0xDC SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0x134 SWAP2 PUSH1 0x18 SWAP2 PUSH3 0x2B4 JUMP JUMPDEST POP PUSH1 0x9 PUSH1 0xF9 SHL PUSH1 0x80 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH4 0x1E13380 PUSH1 0x6 SSTORE PUSH1 0x0 PUSH3 0x1AD PUSH3 0x93A80 PUSH3 0x199 TIMESTAMP DUP3 PUSH3 0x237 PUSH1 0x20 SWAP1 DUP2 SHL PUSH3 0x2133 OR SWAP1 SHR JUMP JUMPDEST PUSH3 0x278 PUSH1 0x20 SHL PUSH3 0x2165 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH4 0xFFFFFFFF SWAP3 DUP4 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0xC DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP3 MSTORE SWAP2 MLOAD PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP3 MLOAD SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0xE0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP2 DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR AND OR SWAP1 SSTORE POP PUSH3 0x415 SWAP2 POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH3 0x264 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x25B SWAP1 PUSH3 0x38E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH3 0x26E JUMPI INVALID JUMPDEST DIV SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 PUSH3 0x295 JUMPI POP POP DUP1 DUP3 MUL DUP3 DUP3 DUP3 DUP2 PUSH3 0x292 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH3 0x272 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x25B SWAP1 PUSH3 0x3C5 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x2F7 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x327 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x327 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x327 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x30A JUMP JUMPDEST POP PUSH3 0x335 SWAP3 SWAP2 POP PUSH3 0x339 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x335 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x33A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x363 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x370 DUP2 PUSH3 0x3FC JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH3 0x383 DUP2 PUSH3 0x3FC JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x426F72696E674D6174683A206469766973696F6E206279207A65726F00000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x426F72696E674D6174683A204D756C204F766572666C6F770000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xF8 SHR PUSH2 0x40F6 PUSH3 0x433 PUSH1 0x0 CODECOPY DUP1 PUSH2 0xC16 MSTORE POP PUSH2 0x40F6 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x319 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8757B15B GT PUSH2 0x1A9 JUMPI DUP1 PUSH4 0xC00007B0 GT PUSH2 0xEF JUMPI DUP1 PUSH4 0xE432488D GT PUSH2 0x9D JUMPI DUP1 PUSH4 0xE432488D EQ PUSH2 0x681 JUMPI DUP1 PUSH4 0xE465FE80 EQ PUSH2 0x689 JUMPI DUP1 PUSH4 0xE70B9E27 EQ PUSH2 0x69C JUMPI DUP1 PUSH4 0xF1229777 EQ PUSH2 0x6AF JUMPI DUP1 PUSH4 0xF2157932 EQ PUSH2 0x6C2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6CA JUMPI DUP1 PUSH4 0xF8261597 EQ PUSH2 0x6DD JUMPI DUP1 PUSH4 0xFC0E74D1 EQ PUSH2 0x6F0 JUMPI PUSH2 0x319 JUMP JUMPDEST DUP1 PUSH4 0xC00007B0 EQ PUSH2 0x5F7 JUMPI DUP1 PUSH4 0xC1009F4B EQ PUSH2 0x60A JUMPI DUP1 PUSH4 0xC6B61E4C EQ PUSH2 0x612 JUMPI DUP1 PUSH4 0xCA5C7B91 EQ PUSH2 0x633 JUMPI DUP1 PUSH4 0xD3C45C76 EQ PUSH2 0x63B JUMPI DUP1 PUSH4 0xDC01F60D EQ PUSH2 0x64E JUMPI DUP1 PUSH4 0xE2AB691D EQ PUSH2 0x66E JUMPI PUSH2 0x319 JUMP JUMPDEST DUP1 PUSH4 0xA81653C9 GT PUSH2 0x157 JUMPI DUP1 PUSH4 0xA81653C9 EQ PUSH2 0x58B JUMPI DUP1 PUSH4 0xA98E05BB EQ PUSH2 0x59E JUMPI DUP1 PUSH4 0xAA33FEDB EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0xB187BC22 EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0xB5ED7A66 EQ PUSH2 0x5C1 JUMPI DUP1 PUSH4 0xB66503CF EQ PUSH2 0x5C9 JUMPI DUP1 PUSH4 0xBCD11014 EQ PUSH2 0x5DC JUMPI DUP1 PUSH4 0xBF86D690 EQ PUSH2 0x5EF JUMPI PUSH2 0x319 JUMP JUMPDEST DUP1 PUSH4 0x8757B15B EQ PUSH2 0x53D JUMPI DUP1 PUSH4 0x887C7DC5 EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0x8980F11F EQ PUSH2 0x558 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x56B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0x96CE0795 EQ PUSH2 0x57B JUMPI DUP1 PUSH4 0x9BDC7467 EQ PUSH2 0x583 JUMPI PUSH2 0x319 JUMP JUMPDEST DUP1 PUSH4 0x57C2C2BA GT PUSH2 0x26E JUMPI DUP1 PUSH4 0x70B36D79 GT PUSH2 0x21C JUMPI DUP1 PUSH4 0x70B36D79 EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0x70E664CD EQ PUSH2 0x4E2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0x75AADF61 EQ PUSH2 0x512 JUMPI DUP1 PUSH4 0x7BB7BED1 EQ PUSH2 0x51A JUMPI DUP1 PUSH4 0x7BD48C7C EQ PUSH2 0x52D JUMPI DUP1 PUSH4 0x829965CC EQ PUSH2 0x535 JUMPI PUSH2 0x319 JUMP JUMPDEST DUP1 PUSH4 0x57C2C2BA EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0x59355736 EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0x638634EE EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0x63F1C8E2 EQ PUSH2 0x483 JUMPI DUP1 PUSH4 0x6724C910 EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0x7035AB98 EQ PUSH2 0x4A9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4BC JUMPI PUSH2 0x319 JUMP JUMPDEST DUP1 PUSH4 0x2FE87108 GT PUSH2 0x2CB JUMPI DUP1 PUSH4 0x2FE87108 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0x312FF839 EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x321BC347 EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0x386A9525 EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0x39FC9713 EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0x48E5D9F8 EQ PUSH2 0x431 JUMPI PUSH2 0x319 JUMP JUMPDEST DUP1 PUSH4 0x4554443 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x483A7F6 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x1C607395 EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x2E9564E4 EQ PUSH2 0x3B1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x326 PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x3FA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34F PUSH2 0x34A CALLDATASIZE PUSH1 0x4 PUSH2 0x3677 JUMP JUMPDEST PUSH2 0x6FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3FDE JUMP JUMPDEST PUSH2 0x367 PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x39C5 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x95B JUMP JUMPDEST PUSH2 0x326 PUSH2 0x38A CALLDATASIZE PUSH1 0x4 PUSH2 0x3813 JUMP JUMPDEST PUSH2 0xA31 JUMP JUMPDEST PUSH2 0x3A2 PUSH2 0x39D CALLDATASIZE PUSH1 0x4 PUSH2 0x3677 JUMP JUMPDEST PUSH2 0xB5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F60 JUMP JUMPDEST PUSH2 0x326 PUSH2 0xB93 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x3C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3677 JUMP JUMPDEST PUSH2 0xB99 JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x3DA CALLDATASIZE PUSH1 0x4 PUSH2 0x376D JUMP JUMPDEST PUSH2 0xBC8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E9 PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x4060 JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x404 CALLDATASIZE PUSH1 0x4 PUSH2 0x37E3 JUMP JUMPDEST PUSH2 0xC38 JUMP JUMPDEST PUSH2 0x326 PUSH2 0xCB7 JUMP JUMPDEST PUSH2 0x424 PUSH2 0x41F CALLDATASIZE PUSH1 0x4 PUSH2 0x3692 JUMP JUMPDEST PUSH2 0xCBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x3984 JUMP JUMPDEST PUSH2 0x444 PUSH2 0x43F CALLDATASIZE PUSH1 0x4 PUSH2 0x3677 JUMP JUMPDEST PUSH2 0xCDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x398F JUMP JUMPDEST PUSH2 0x326 PUSH2 0xD2A JUMP JUMPDEST PUSH2 0x326 PUSH2 0x46B CALLDATASIZE PUSH1 0x4 PUSH2 0x3677 JUMP JUMPDEST PUSH2 0xD30 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x47E CALLDATASIZE PUSH1 0x4 PUSH2 0x3677 JUMP JUMPDEST PUSH2 0xD54 JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x491 CALLDATASIZE PUSH1 0x4 PUSH2 0x3836 JUMP JUMPDEST PUSH2 0xD82 JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x4A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x36C6 JUMP JUMPDEST PUSH2 0xE0F JUMP JUMPDEST PUSH2 0x326 PUSH2 0x4B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3692 JUMP JUMPDEST PUSH2 0xEC7 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x4CA CALLDATASIZE PUSH1 0x4 PUSH2 0x3677 JUMP JUMPDEST PUSH2 0xEE4 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x4DD CALLDATASIZE PUSH1 0x4 PUSH2 0x37E3 JUMP JUMPDEST PUSH2 0x1008 JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x4F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x37A5 JUMP JUMPDEST PUSH2 0x112A JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x116E JUMP JUMPDEST PUSH2 0x505 PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x38A0 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x505 PUSH2 0x528 CALLDATASIZE PUSH1 0x4 PUSH2 0x37E3 JUMP JUMPDEST PUSH2 0x120C JUMP JUMPDEST PUSH2 0x326 PUSH2 0x1233 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x1239 JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x123F JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x553 CALLDATASIZE PUSH1 0x4 PUSH2 0x3677 JUMP JUMPDEST PUSH2 0x127E JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x566 CALLDATASIZE PUSH1 0x4 PUSH2 0x3710 JUMP JUMPDEST PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x505 PUSH2 0x13D5 JUMP JUMPDEST PUSH2 0x367 PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x1445 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x144B JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x599 CALLDATASIZE PUSH1 0x4 PUSH2 0x3857 JUMP JUMPDEST PUSH2 0x1451 JUMP JUMPDEST PUSH2 0x505 PUSH2 0x1522 JUMP JUMPDEST PUSH2 0x3A2 PUSH2 0x5B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3710 JUMP JUMPDEST PUSH2 0x1531 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x157D JUMP JUMPDEST PUSH2 0x326 PUSH2 0x1583 JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x5D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3710 JUMP JUMPDEST PUSH2 0x1589 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x5EA CALLDATASIZE PUSH1 0x4 PUSH2 0x3677 JUMP JUMPDEST PUSH2 0x181F JUMP JUMPDEST PUSH2 0x424 PUSH2 0x1855 JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x605 CALLDATASIZE PUSH1 0x4 PUSH2 0x3677 JUMP JUMPDEST PUSH2 0x185E JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x1BA1 JUMP JUMPDEST PUSH2 0x625 PUSH2 0x620 CALLDATASIZE PUSH1 0x4 PUSH2 0x37E3 JUMP JUMPDEST PUSH2 0x1BA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP3 SWAP2 SWAP1 PUSH2 0x3F89 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x1BDE JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x649 CALLDATASIZE PUSH1 0x4 PUSH2 0x36C6 JUMP JUMPDEST PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0x661 PUSH2 0x65C CALLDATASIZE PUSH1 0x4 PUSH2 0x3677 JUMP JUMPDEST PUSH2 0x1D09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x392C JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x67C CALLDATASIZE PUSH1 0x4 PUSH2 0x373A JUMP JUMPDEST PUSH2 0x1E4A JUMP JUMPDEST PUSH2 0x326 PUSH2 0x1E95 JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x697 CALLDATASIZE PUSH1 0x4 PUSH2 0x3677 JUMP JUMPDEST PUSH2 0x1E9B JUMP JUMPDEST PUSH2 0x326 PUSH2 0x6AA CALLDATASIZE PUSH1 0x4 PUSH2 0x3692 JUMP JUMPDEST PUSH2 0x1F43 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x6BD CALLDATASIZE PUSH1 0x4 PUSH2 0x3677 JUMP JUMPDEST PUSH2 0x1F60 JUMP JUMPDEST PUSH2 0x505 PUSH2 0x1F6B JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x6D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3677 JUMP JUMPDEST PUSH2 0x1F7A JUMP JUMPDEST PUSH2 0x326 PUSH2 0x6EB CALLDATASIZE PUSH1 0x4 PUSH2 0x37E3 JUMP JUMPDEST PUSH2 0x203B JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x20E5 JUMP JUMPDEST PUSH3 0x6EBE00 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xD SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD DUP4 SWAP3 DUP4 SWAP3 PUSH1 0x60 SWAP3 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP5 DUP2 JUMPDEST DUP5 SLOAD DUP2 LT ISZERO PUSH2 0x8AD JUMPI TIMESTAMP DUP6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x750 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x877 JUMPI DUP2 PUSH2 0x7CD JUMPI DUP5 SLOAD DUP2 SWAP1 SUB PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x78F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7C9 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x7B6 PUSH2 0x3629 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x7AE JUMPI SWAP1 POP JUMPDEST POP SWAP6 POP JUMPDEST DUP5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7D9 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE SWAP2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP4 DIV SWAP3 SWAP1 SWAP3 AND SWAP1 DUP3 ADD MSTORE DUP7 MLOAD DUP8 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x832 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0x870 DUP6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x854 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x219C JUMP JUMPDEST SWAP7 POP PUSH2 0x8A5 JUMP JUMPDEST PUSH2 0x8A2 DUP6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x886 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP10 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x219C JUMP JUMPDEST SWAP8 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x73A JUMP JUMPDEST POP POP SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP6 POP POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x17 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x951 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x926 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x951 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x934 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x975 PUSH3 0x93A80 PUSH2 0x96F TIMESTAMP DUP3 PUSH2 0x2133 JUMP JUMPDEST SWAP1 PUSH2 0x2165 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x986 DUP3 PUSH3 0x6EBE00 PUSH2 0x21BF JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD SWAP2 SWAP3 POP DUP4 SWAP1 PUSH1 0x0 NOT DUP4 ADD DUP4 DUP2 LT PUSH2 0x99D JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x9C1 JUMPI PUSH1 0x0 NOT ADD JUMPDEST PUSH1 0x0 NOT DUP2 ADD JUMPDEST PUSH1 0x1 DUP2 ADD ISZERO PUSH2 0xA2A JUMPI PUSH1 0x0 PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9DF JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP5 LT PUSH2 0xA08 JUMPI POP PUSH2 0xA2A JUMP JUMPDEST DUP1 SLOAD PUSH2 0xA1E SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH2 0x219C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x0 NOT ADD PUSH2 0x9C7 JUMP JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xC DUP1 SLOAD DUP4 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0xA5A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP3 POP PUSH2 0xA87 SWAP1 DUP4 SWAP1 PUSH3 0x6EBE00 SWAP1 PUSH2 0x21BF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA9C PUSH3 0x93A80 PUSH2 0x96F TIMESTAMP DUP3 PUSH2 0x2133 JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 NOT ADD JUMPDEST PUSH1 0x1 DUP2 ADD ISZERO PUSH2 0xB51 JUMPI PUSH1 0x0 PUSH2 0xAEA PUSH3 0x93A80 PUSH1 0xC MUL DUP8 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xAC7 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP2 SWAP1 PUSH2 0x21BF AND JUMP JUMPDEST SWAP1 POP DUP5 DUP2 GT ISZERO DUP1 ISZERO PUSH2 0xAFB JUMPI POP DUP3 DUP2 LT JUMPDEST ISZERO PUSH2 0xB47 JUMPI DUP4 DUP2 GT ISZERO PUSH2 0xB41 JUMPI PUSH2 0xB3A DUP7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xB17 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP9 SWAP1 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x219C JUMP JUMPDEST SWAP7 POP PUSH2 0xB47 JUMP JUMPDEST POP PUSH2 0xB51 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD PUSH2 0xAA6 JUMP JUMPDEST POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP1 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP4 JUMP JUMPDEST PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xBF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0xC0C CALLER DUP3 PUSH1 0x0 CALLER CALLER PUSH1 0x0 PUSH2 0x21E2 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xC40 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC51 PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3C7F JUMP JUMPDEST PUSH32 0x21C46A061CB9C101660F51F5C9FC9768C5F6E8CF5DEA8CA5CD03CB6DB13956F3 PUSH1 0x6 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH2 0xCAA SWAP3 SWAP2 SWAP1 PUSH2 0x3FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH3 0x93A80 DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP3 AND SWAP2 PUSH5 0xFFFFFFFFFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB PUSH1 0x1 PUSH1 0x30 SHL SWAP1 SWAP4 DIV DUP4 AND SWAP3 SWAP2 DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x28 SHL SWAP1 SWAP2 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xB57 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH5 0xFFFFFFFFFF AND PUSH2 0x2791 JUMP JUMPDEST PUSH2 0xD8A PUSH2 0x278D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD9B PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xDC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3C7F JUMP JUMPDEST PUSH2 0x1F4 DUP3 GT ISZERO PUSH2 0xDE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3B55 JUMP JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0xE04 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3D22 JUMP JUMPDEST PUSH1 0x14 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x15 SSTORE JUMP JUMPDEST PUSH2 0xE17 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE28 PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xE4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3C7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH5 0xFFFFFFFFFF AND PUSH2 0xE8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3CB4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP6 AND DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP4 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFA7 JUMPI TIMESTAMP DUP6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF43 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND GT PUSH2 0xF9A JUMPI PUSH2 0xF93 DUP6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF70 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP8 SWAP1 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x21BF JUMP JUMPDEST SWAP6 POP PUSH2 0xF9F JUMP JUMPDEST PUSH2 0xFA7 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xF2E JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xFBB PUSH3 0x93A80 PUSH2 0x96F TIMESTAMP DUP3 PUSH2 0x2133 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0xFE4 JUMPI POP DUP1 PUSH2 0xFE2 PUSH3 0x93A80 PUSH1 0xC MUL DUP8 PUSH1 0x1 DUP7 SUB DUP2 SLOAD DUP2 LT PUSH2 0xAC7 JUMPI INVALID JUMPDEST EQ JUMPDEST ISZERO PUSH2 0xFFE JUMPI PUSH2 0xFFB DUP6 PUSH1 0x1 DUP5 SUB DUP2 SLOAD DUP2 LT PUSH2 0xF70 JUMPI INVALID JUMPDEST SWAP6 POP JUMPDEST POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1049 PUSH3 0x93A80 PUSH2 0x96F PUSH3 0x93A80 PUSH1 0xC DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x1026 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP2 SWAP1 PUSH2 0x2133 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x105A DUP3 PUSH3 0x6EBE00 PUSH2 0x21BF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x106F PUSH3 0x93A80 PUSH2 0x96F TIMESTAMP DUP3 PUSH2 0x2133 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xC DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x107F JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x10A6 JUMPI PUSH1 0x0 NOT SWAP1 SWAP5 ADD SWAP4 JUMPDEST DUP5 JUMPDEST PUSH1 0x1 DUP2 ADD ISZERO PUSH2 0x1121 JUMPI PUSH1 0x0 PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10C0 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP5 LT PUSH2 0x10E9 JUMPI POP PUSH2 0x1121 JUMP JUMPDEST PUSH2 0x1115 PUSH1 0xC DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x10F9 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH2 0x219C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x0 NOT ADD PUSH2 0x10A8 JUMP JUMPDEST POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x114D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x1164 CALLER DUP5 DUP5 DUP5 CALLER PUSH1 0x0 PUSH2 0x21E2 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP JUMP JUMPDEST PUSH2 0x1176 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1187 PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x11AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3C7F JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1219 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH2 0x125D SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND PUSH1 0x0 PUSH2 0x279D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH2 0x127C SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND PUSH1 0x0 NOT PUSH2 0x279D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x12A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0xC0C DUP2 PUSH1 0x0 DUP1 DUP5 CALLER PUSH2 0x12CA PUSH1 0x15 SLOAD PUSH3 0x93A80 PUSH2 0x2165 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x21E2 JUMP JUMPDEST PUSH2 0x12D7 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x12E8 PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x130E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3C7F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x133C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3CEB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH5 0xFFFFFFFFFF AND ISZERO PUSH2 0x137C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3E1F JUMP JUMPDEST PUSH2 0x1398 PUSH2 0x1387 PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 PUSH2 0x289C JUMP JUMPDEST PUSH32 0x8C1256B8896378CD5044F80C202F9772B9D77DC85C8A6EB51967210B09BFAA28 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x13C9 SWAP3 SWAP2 SWAP1 PUSH2 0x38F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x18 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x951 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x926 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x951 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1459 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x146A PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1490 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3C7F JUMP JUMPDEST PUSH2 0x5DC DUP4 LT PUSH2 0x14B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3B2B JUMP JUMPDEST PUSH2 0x7530 DUP3 LT PUSH2 0x14D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3B55 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x14F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3BA2 JUMP JUMPDEST PUSH1 0x12 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x13 SSTORE PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x154A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP4 POP PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV AND SWAP2 POP PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP4 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH32 0x81955A0A11E65EAC625C29E8882660BAE4E165A75D72780094ACAE8ECE9A29EE DUP1 SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP3 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x1754 JUMPI PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x15E1 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH2 0x1609 PUSH2 0x1604 DUP3 PUSH2 0x28BB JUMP JUMPDEST PUSH2 0x29CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x28 SHL MUL PUSH1 0x1 PUSH1 0x28 SHL PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SLOAD PUSH2 0x166F SWAP1 PUSH2 0x166A SWAP1 PUSH5 0xFFFFFFFFFF PUSH2 0x100 SWAP1 SWAP2 DIV AND PUSH2 0x2791 JUMP JUMPDEST PUSH2 0x29F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE DUP6 AND ISZERO PUSH2 0x174B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x16EC SWAP1 DUP7 SWAP1 DUP4 SWAP1 PUSH1 0xFF AND PUSH2 0x16E5 JUMPI DUP7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x16E7 JUMP JUMPDEST DUP6 JUMPDEST PUSH2 0x2A1E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x5 DUP2 MSTORE DUP5 DUP3 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP3 DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE DUP5 DUP3 KECCAK256 SWAP4 DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x28 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP1 SSTORE JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x15C8 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x179A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3C57 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x17BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3C34 JUMP JUMPDEST PUSH2 0x17C4 DUP4 DUP4 PUSH2 0x2A96 JUMP JUMPDEST PUSH2 0x17D9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER ADDRESS DUP6 PUSH2 0x2BC9 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xAC24935FD910BC682B5CCB1A07B718CADF8CF2F6D1404C4F3DDC3662DAE40E29 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1812 SWAP2 SWAP1 PUSH2 0x3FA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xB57 SWAP1 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND PUSH3 0x93A80 PUSH2 0x2165 JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x1881 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x1A2F JUMPI PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x18CD JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH2 0x18F0 PUSH2 0x1604 DUP3 PUSH2 0x28BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x28 SHL MUL PUSH1 0x1 PUSH1 0x28 SHL PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SLOAD PUSH2 0x1951 SWAP1 PUSH2 0x166A SWAP1 PUSH5 0xFFFFFFFFFF PUSH2 0x100 SWAP1 SWAP2 DIV AND PUSH2 0x2791 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE DUP6 AND ISZERO PUSH2 0x1A26 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x19C7 SWAP1 DUP7 SWAP1 DUP4 SWAP1 PUSH1 0xFF AND PUSH2 0x16E5 JUMPI DUP7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x16E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x5 DUP2 MSTORE DUP5 DUP3 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP3 DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE DUP5 DUP3 KECCAK256 SWAP4 DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x28 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP1 SSTORE JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x18B4 JUMP JUMPDEST POP POP POP PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x1164 JUMPI PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1A4E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP5 MSTORE PUSH1 0x9 DUP4 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP2 SWAP1 SWAP3 AND DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 ISZERO PUSH2 0x1B97 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x1ABD DUP3 PUSH1 0xA PUSH2 0x2133 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1ACC DUP3 PUSH1 0x9 PUSH2 0x2165 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AE2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP9 DUP5 PUSH2 0x289C JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE2AB691D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xE2AB691D SWAP2 PUSH2 0x1B17 SWAP2 DUP12 SWAP2 DUP7 SWAP2 PUSH1 0x4 ADD PUSH2 0x390B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x540798DF468D7B23D11F156FDB954CB19AD414D150722A7B6D55BA369DEA792E DUP6 PUSH1 0x40 MLOAD PUSH2 0x1B8C SWAP2 SWAP1 PUSH2 0x3FA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x1A35 JUMP JUMPDEST PUSH2 0x127C PUSH2 0x2BF0 JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1BB6 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP2 AND SWAP2 POP PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP3 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1BEC PUSH2 0x278D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1BFD PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1C23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3C7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH5 0xFFFFFFFFFF AND ISZERO PUSH2 0x1C50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 DUP6 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND TIMESTAMP PUSH5 0xFFFFFFFFFF AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SLOAD PUSH6 0xFFFFFFFFFF00 NOT AND PUSH2 0x100 SWAP1 SWAP2 MUL OR PUSH1 0xFF NOT SWAP1 DUP2 AND SWAP7 ISZERO ISZERO SWAP7 SWAP1 SWAP7 OR SWAP1 SSTORE PUSH1 0x7 DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP6 SWAP1 SWAP7 AND DUP3 MSTORE SWAP4 SWAP1 SWAP4 MSTORE SWAP3 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x60 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x1D25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1D5F JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1D4C PUSH2 0x3649 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1D44 JUMPI SWAP1 POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1E42 JUMPI PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1DA8 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1DD5 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP1 MSTORE SWAP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1E1F SWAP1 DUP8 SWAP1 DUP4 SWAP1 PUSH1 0xFF AND PUSH2 0x16E5 JUMPI DUP7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x16E7 JUMP JUMPDEST DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1E2B JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x1D90 JUMP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x1E6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE SLOAD PUSH2 0x1E8A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP6 PUSH2 0x2BC9 JUMP JUMPDEST PUSH2 0x1164 DUP4 DUP4 DUP4 PUSH2 0x2D58 JUMP JUMPDEST PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1EA3 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1EB4 PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1EDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3C7F JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH32 0xEE4EC82B92F0E1FE230E6604A4752FA407A28069F106DC41E53EDC28C4BC504E SWAP2 PUSH2 0x1F19 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 SWAP1 PUSH2 0x38B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB57 DUP3 PUSH2 0x28BB JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1F82 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F93 PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1FB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3C7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1FDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3A95 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH1 0x0 NOT ADD DUP2 PUSH2 0x2057 PUSH3 0x93A80 PUSH2 0x96F DUP7 DUP3 PUSH2 0x2133 JUMP JUMPDEST SWAP4 POP PUSH1 0x0 JUMPDEST PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x20DD JUMPI DUP3 DUP3 LT PUSH2 0x2071 JUMPI PUSH2 0x20DD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 DUP5 DUP7 ADD ADD DIV SWAP1 POP PUSH1 0x0 PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x208D JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP DUP7 DUP2 EQ ISZERO PUSH2 0x20BC JUMPI POP SWAP4 POP PUSH2 0xBC3 SWAP3 POP POP POP JUMP JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x20CC JUMPI DUP2 SWAP4 POP PUSH2 0x20D3 JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP5 POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x205C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x20ED PUSH2 0x278D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x20FE PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2124 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3C7F JUMP JUMPDEST PUSH1 0x16 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x2154 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3A5E JUMP JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x215D JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 PUSH2 0x2180 JUMPI POP POP DUP1 DUP3 MUL DUP3 DUP3 DUP3 DUP2 PUSH2 0x217D JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0xB57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3EE3 JUMP JUMPDEST DUP2 DUP2 ADD DUP2 DUP2 LT ISZERO PUSH2 0xB57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3BCB JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0xB57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x39F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x238C JUMPI PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x222A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH2 0x224D PUSH2 0x1604 DUP3 PUSH2 0x28BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x28 SHL MUL PUSH1 0x1 PUSH1 0x28 SHL PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SLOAD PUSH2 0x22AE SWAP1 PUSH2 0x166A SWAP1 PUSH5 0xFFFFFFFFFF PUSH2 0x100 SWAP1 SWAP2 DIV AND PUSH2 0x2791 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE DUP6 AND ISZERO PUSH2 0x2383 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2324 SWAP1 DUP7 SWAP1 DUP4 SWAP1 PUSH1 0xFF AND PUSH2 0x16E5 JUMPI DUP7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x16E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x5 DUP2 MSTORE DUP5 DUP3 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP3 DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE DUP5 DUP3 KECCAK256 SWAP4 DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x28 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP1 SSTORE JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x2211 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xD SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP2 SLOAD PUSH1 0x16 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 DUP3 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x23FD JUMPI POP PUSH2 0x23D2 TIMESTAMP DUP10 PUSH2 0x21BF JUMP JUMPDEST DUP7 PUSH1 0x1 DUP5 SUB DUP2 SLOAD DUP2 LT PUSH2 0x23E1 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x2474 JUMPI DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP6 POP PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP2 DIV AND SWAP3 POP PUSH2 0x2425 DUP3 PUSH2 0x3329 JUMP JUMPDEST DUP6 SLOAD PUSH4 0xFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xE0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP1 SWAP2 AND OR DUP6 SSTORE DUP8 ISZERO PUSH2 0x246F JUMPI PUSH2 0x246C DUP9 DUP8 PUSH1 0x1 DUP6 SUB DUP2 SLOAD DUP2 LT PUSH2 0x245D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH2 0x334F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x257B JUMP JUMPDEST DUP5 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x255B JUMPI PUSH2 0x2497 TIMESTAMP DUP12 PUSH2 0x21BF JUMP JUMPDEST DUP9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x24A3 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x24C7 JUMPI PUSH2 0x255B JUMP JUMPDEST PUSH2 0x24F4 DUP9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x24D6 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP9 DUP2 AND SWAP2 AND PUSH2 0x33E5 JUMP JUMPDEST SWAP6 POP PUSH2 0x252A DUP9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2505 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH2 0x33E5 JUMP JUMPDEST SWAP5 POP DUP10 ISZERO PUSH2 0x254F JUMPI PUSH2 0x254C PUSH2 0x2545 DUP12 DUP11 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x245D JUMPI INVALID JUMPDEST DUP5 SWAP1 PUSH2 0x219C JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH1 0x1 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2485 JUMP JUMPDEST POP DUP6 SLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xE0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP1 SWAP2 AND OR DUP6 SSTORE JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND GT PUSH2 0x25A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3B7C JUMP JUMPDEST DUP5 SLOAD PUSH2 0x25B9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP6 PUSH2 0x3414 JUMP JUMPDEST DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 DUP3 AND OR DUP1 DUP8 SSTORE PUSH2 0x25E7 SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP2 DIV AND DUP5 PUSH2 0x3414 JUMP JUMPDEST DUP6 SLOAD PUSH1 0x1 PUSH1 0x70 SHL PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x70 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP3 DUP4 AND MUL OR DUP7 SSTORE PUSH1 0xA SLOAD PUSH2 0x2618 SWAP2 DUP7 AND PUSH2 0x21BF JUMP JUMPDEST PUSH1 0xA SSTORE PUSH1 0xB SLOAD PUSH2 0x2631 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP6 AND PUSH2 0x21BF JUMP JUMPDEST PUSH1 0xB SSTORE DUP1 ISZERO PUSH2 0x26BC JUMPI PUSH2 0x2656 PUSH2 0x2646 DUP3 PUSH2 0x3443 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP7 AND SWAP1 PUSH2 0x3414 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP5 POP PUSH2 0x2670 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 DUP4 PUSH2 0x289C JUMP JUMPDEST DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x7E7FF29ED04CFB223BC9B02606F69520517C117EE82C9158ED2D96323C1EF385 DUP4 PUSH1 0x40 MLOAD PUSH2 0x26B3 SWAP2 SWAP1 PUSH2 0x3FA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP12 ISZERO PUSH2 0x271C JUMPI PUSH2 0x26D6 DUP11 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP14 PUSH2 0x2D58 JUMP JUMPDEST DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xE2D155D9D74DECC198A9A9B4F5BDDB24EE0842EE745C9CE57E3573B971E50D9D DUP6 PUSH1 0x40 MLOAD PUSH2 0x270F SWAP2 SWAP1 PUSH2 0x3F4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x277E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x273C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH2 0x289C JUMP JUMPDEST DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2775 SWAP2 SWAP1 PUSH2 0x3F4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB57 TIMESTAMP DUP4 PUSH2 0x346C JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x2825 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH2 0x27D3 SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x38B4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x27EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x27FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2823 SWAP2 SWAP1 PUSH2 0x37FB JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x2841 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3E8D JUMP JUMPDEST PUSH2 0x2897 DUP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2860 SWAP3 SWAP2 SWAP1 PUSH2 0x38F2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x3482 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2897 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2860 SWAP3 SWAP2 SWAP1 PUSH2 0x38F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x28FA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x28 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND PUSH2 0xBC3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB57 SWAP1 PUSH2 0x2998 SWAP1 PUSH1 0xFF AND PUSH2 0x292A JUMPI PUSH1 0xA SLOAD PUSH2 0x292E JUMP JUMPDEST PUSH1 0xB SLOAD JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH2 0x2992 SWAP2 PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x96F SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB PUSH1 0x1 PUSH1 0x30 SHL DUP3 DIV AND SWAP2 DUP4 SWAP2 PUSH5 0xFFFFFFFFFF SWAP2 DUP3 AND SWAP2 PUSH2 0x298C SWAP2 PUSH2 0x100 SWAP1 DIV AND PUSH2 0x2791 JUMP JUMPDEST SWAP1 PUSH2 0x21BF JUMP JUMPDEST SWAP1 PUSH2 0x2133 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x28 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP1 PUSH2 0x219C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP3 GT ISZERO PUSH2 0x29F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3A27 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH5 0xFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x29F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3F15 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD SWAP4 DUP4 MSTORE PUSH1 0x8 DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 DUP4 MSTORE SWAP4 SWAP1 MSTORE SWAP2 DUP3 KECCAK256 SLOAD PUSH2 0x2A8C SWAP2 SWAP1 PUSH2 0x2A86 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x2992 SWAP1 PUSH2 0x2A7F SWAP1 PUSH2 0x298C DUP11 PUSH2 0x28BB JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x2165 JUMP JUMPDEST SWAP1 PUSH2 0x219C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH5 0xFFFFFFFFFF AND TIMESTAMP LT PUSH2 0x2AF8 JUMPI PUSH2 0x2AD2 PUSH2 0x1604 DUP4 PUSH3 0x93A80 PUSH2 0x2133 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x30 SHL MUL PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH2 0x2B70 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x2B13 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH5 0xFFFFFFFFFF AND TIMESTAMP PUSH2 0x21BF JUMP JUMPDEST DUP3 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x2B36 SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND PUSH2 0x2165 JUMP JUMPDEST SWAP1 POP PUSH2 0x2B4C PUSH2 0x1604 PUSH3 0x93A80 PUSH2 0x2992 DUP8 DUP6 PUSH2 0x219C JUMP JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x30 SHL MUL PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP2 AND OR DUP4 SSTORE POP POP JUMPDEST PUSH2 0x2B79 TIMESTAMP PUSH2 0x29F7 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x2BA7 PUSH2 0x166A TIMESTAMP PUSH3 0x93A80 PUSH2 0x219C JUMP JUMPDEST DUP2 SLOAD PUSH5 0xFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH2 0x100 MUL PUSH6 0xFFFFFFFFFF00 NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x2BEA DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2860 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x38CE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C03 PUSH3 0x93A80 PUSH2 0x96F TIMESTAMP DUP3 PUSH2 0x2133 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD SWAP2 SWAP3 POP DUP3 SWAP1 PUSH1 0x0 NOT DUP4 ADD DUP4 DUP2 LT PUSH2 0x2C1A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x2D54 JUMPI JUMPDEST PUSH1 0xC DUP1 SLOAD DUP4 SWAP2 SWAP1 PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0x2C4F JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND EQ PUSH2 0x2D30 JUMPI PUSH1 0x0 PUSH2 0x2CAE PUSH3 0x93A80 PUSH1 0xC PUSH1 0x1 PUSH1 0xC DUP1 SLOAD SWAP1 POP SUB DUP2 SLOAD DUP2 LT PUSH2 0x2C8B JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP2 SWAP1 PUSH2 0x219C AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH4 0xFFFFFFFF SWAP3 DUP4 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0xC DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP3 MSTORE SWAP2 MLOAD PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP3 MLOAD SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0xE0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP2 DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR AND OR SWAP1 SSTORE POP PUSH2 0x2C3A JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x11 SLOAD EQ PUSH2 0x2D42 JUMPI PUSH1 0x13 SLOAD PUSH1 0x11 SSTORE JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x10 SLOAD EQ PUSH2 0x2D54 JUMPI PUSH1 0x12 SLOAD PUSH1 0x10 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x2F02 JUMPI PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2DA0 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH2 0x2DC3 PUSH2 0x1604 DUP3 PUSH2 0x28BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x28 SHL MUL PUSH1 0x1 PUSH1 0x28 SHL PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SLOAD PUSH2 0x2E24 SWAP1 PUSH2 0x166A SWAP1 PUSH5 0xFFFFFFFFFF PUSH2 0x100 SWAP1 SWAP2 DIV AND PUSH2 0x2791 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE DUP6 AND ISZERO PUSH2 0x2EF9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2E9A SWAP1 DUP7 SWAP1 DUP4 SWAP1 PUSH1 0xFF AND PUSH2 0x16E5 JUMPI DUP7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x16E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x5 DUP2 MSTORE DUP5 DUP3 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP3 DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE DUP5 DUP3 KECCAK256 SWAP4 DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x28 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP1 SSTORE JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x2D87 JUMP JUMPDEST POP POP POP PUSH1 0x0 DUP4 GT PUSH2 0x2F25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3ADB JUMP JUMPDEST PUSH1 0x10 SLOAD DUP3 GT ISZERO PUSH2 0x2F47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3B03 JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2F6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3D45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x2F8A PUSH2 0x2BF0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F9C PUSH2 0x2710 PUSH2 0x2992 DUP8 DUP8 PUSH2 0x2165 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2FC5 PUSH1 0x10 SLOAD PUSH1 0x0 EQ PUSH2 0x2FB5 JUMPI PUSH1 0x10 SLOAD PUSH2 0x2FB8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x2992 SWAP1 DUP9 PUSH2 0x2165 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2FDB PUSH2 0x2FD6 DUP9 DUP6 PUSH2 0x21BF JUMP JUMPDEST PUSH2 0x3443 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2FFC PUSH2 0x2FD6 PUSH2 0x2FF5 PUSH2 0x2710 PUSH2 0x2992 DUP13 DUP9 PUSH2 0x2165 JUMP JUMPDEST DUP11 SWAP1 PUSH2 0x219C JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH2 0x3014 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP4 PUSH2 0x33E5 JUMP JUMPDEST DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 DUP3 AND OR DUP1 DUP8 SSTORE PUSH2 0x3042 SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP2 DIV AND DUP3 PUSH2 0x33E5 JUMP JUMPDEST DUP6 SLOAD PUSH1 0x1 PUSH1 0x70 SHL PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x70 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP3 DUP4 AND MUL OR DUP7 SSTORE PUSH1 0xA SLOAD PUSH2 0x3073 SWAP2 DUP5 AND PUSH2 0x219C JUMP JUMPDEST PUSH1 0xA SSTORE PUSH1 0xB SLOAD PUSH2 0x308C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP4 AND PUSH2 0x219C JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0x0 PUSH2 0x30A2 PUSH3 0x93A80 PUSH2 0x96F TIMESTAMP DUP3 PUSH2 0x2133 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x30B3 DUP3 PUSH3 0x6EBE00 PUSH2 0x219C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 ISZERO DUP1 PUSH2 0x311D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 SWAP2 SWAP1 PUSH1 0x0 NOT DUP5 ADD SWAP1 DUP2 LT PUSH2 0x3102 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND LT JUMPDEST ISZERO PUSH2 0x31CC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP12 AND DUP3 MSTORE DUP10 DUP2 AND DUP3 DUP7 ADD SWAP1 DUP2 MSTORE PUSH4 0xFFFFFFFF DUP1 DUP11 AND SWAP6 DUP5 ADD SWAP6 DUP7 MSTORE DUP5 SLOAD PUSH1 0x1 DUP2 ADD DUP7 SSTORE SWAP5 DUP9 MSTORE SWAP6 SWAP1 SWAP7 KECCAK256 SWAP2 MLOAD SWAP2 SWAP1 SWAP3 ADD DUP1 SLOAD SWAP6 MLOAD SWAP4 MLOAD SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0xE0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP4 DUP4 AND PUSH1 0x1 PUSH1 0x70 SHL MUL PUSH1 0x1 PUSH1 0x70 SHL PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP3 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB NOT SWAP1 SWAP7 AND SWAP6 SWAP1 SWAP6 OR AND OR AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x326C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT DUP5 ADD SWAP1 DUP2 LT PUSH2 0x31F4 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH2 0x3217 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP8 PUSH2 0x33E5 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 DUP3 AND OR DUP1 DUP4 SSTORE PUSH2 0x3245 SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP2 DIV AND DUP7 PUSH2 0x33E5 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x70 SHL MUL PUSH1 0x1 PUSH1 0x70 SHL PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0x3282 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH2 0x32AE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH2 0x3511 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR DUP2 SSTORE DUP8 ISZERO PUSH2 0x32EC JUMPI PUSH1 0xF SLOAD PUSH1 0x2 SLOAD PUSH2 0x32EC SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP11 PUSH2 0x289C JUMP JUMPDEST DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED DUP14 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x2775 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3FB1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 GT ISZERO PUSH2 0x29F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3D9E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3367 PUSH3 0x93A80 PUSH2 0x96F DUP2 PUSH2 0x2992 TIMESTAMP DUP10 PUSH2 0x21BF JUMP JUMPDEST DUP4 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x3394 SWAP1 PUSH3 0x93A80 SWAP1 PUSH2 0x2992 SWAP1 DUP6 SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP1 PUSH2 0x21BF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x33BB PUSH2 0x33B3 DUP4 PUSH1 0x1 ADD PUSH1 0x14 SLOAD PUSH2 0x2165 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x346C JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH2 0x33DB SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x2992 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP5 PUSH2 0x2165 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP4 AND SWAP1 DUP3 AND LT ISZERO PUSH2 0xB57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3BCB JUMP JUMPDEST DUP1 DUP3 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP5 AND SWAP1 DUP3 AND GT ISZERO PUSH2 0xB57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x39F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP3 GT ISZERO PUSH2 0x29F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3BFD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x347B JUMPI DUP2 PUSH2 0x2A8F JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x34D7 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3540 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2897 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x34F5 SWAP2 SWAP1 PUSH2 0x3789 JUMP JUMPDEST PUSH2 0x2897 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3DD5 JUMP JUMPDEST DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP1 DUP4 AND SWAP1 DUP3 AND LT ISZERO PUSH2 0xB57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3BCB JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2A8C DUP5 DUP5 PUSH1 0x0 DUP6 DUP6 PUSH2 0x3554 DUP6 PUSH2 0x35EA JUMP JUMPDEST PUSH2 0x3570 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3D67 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x358D SWAP2 SWAP1 PUSH2 0x3884 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x35CA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x35CF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x35DF DUP3 DUP3 DUP7 PUSH2 0x35F0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x35FF JUMPI POP DUP2 PUSH2 0x2A8F JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x360F JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP2 SWAP1 PUSH2 0x39C5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3688 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2A8F DUP4 DUP4 PUSH2 0x3660 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x36A4 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x36AE DUP5 DUP5 PUSH2 0x3660 JUMP JUMPDEST SWAP2 POP PUSH2 0x36BD DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x3660 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x36DA JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x36E5 DUP2 PUSH2 0x409A JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x36F5 DUP2 PUSH2 0x409A JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x3705 DUP2 PUSH2 0x40B2 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3722 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x372C DUP5 DUP5 PUSH2 0x3660 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x374E JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x3758 DUP6 DUP6 PUSH2 0x3660 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x377E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2A8F DUP2 PUSH2 0x40B2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x379A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2A8F DUP2 PUSH2 0x40B2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x37B9 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x37C4 DUP2 PUSH2 0x40B2 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x37DA DUP6 PUSH1 0x40 DUP7 ADD PUSH2 0x3660 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37F4 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x380C JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3825 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x36BD DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x3660 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3848 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x386B JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x3705 DUP2 PUSH2 0x409A JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3896 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x406E JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3977 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3949 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 ISZERO ISZERO DUP6 MSTORE PUSH5 0xFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP3 DUP4 AND PUSH1 0x40 DUP7 ADD MSTORE SWAP3 AND PUSH1 0x60 DUP5 ADD MSTORE AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x39E4 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x406E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x426F72696E674D6174683A20556E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x426F72696E674D6174683A2075696E74323038204F766572666C6F7700000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x426F72696E674D6174683A206469766973696F6E206279207A65726F00000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x43616E6E6F74207374616B65203 PUSH1 0x94 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x1BDD995C881B585E081CDC195B99 PUSH1 0x92 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x1BDD995C881B585E081C185E5B595B9D PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x6F766572206D61782072617465 PUSH1 0x98 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x6E6F20657870206C6F636B73 PUSH1 0xA0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x696E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH24 0x426F72696E674D6174683A20416464204F766572666C6F77 PUSH1 0x40 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x426F72696E674D6174683A2075696E74313132204F766572666C6F7700000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x139BC81C995DD85C99 PUSH1 0xBA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x1B9BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x7265776172647320746F6B656E20646F6573206E6F7420657869737400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207769746864726177207374616B696E6720746F6B656E000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x6D696E2064656C6179 PUSH1 0xB8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x8 SWAP1 DUP3 ADD MSTORE PUSH8 0x39B43ABA3237BBB7 PUSH1 0xC1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x426F72696E674D6174683A2075696E743332204F766572666C6F770000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742077697468647261772072657761726420746F6B656E00000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x36 SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x40 DUP3 ADD MSTORE PUSH22 0x20746F206E6F6E2D7A65726F20616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH24 0x426F72696E674D6174683A204D756C204F766572666C6F77 PUSH1 0x40 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x426F72696E674D6174683A2075696E743430204F766572666C6F770000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH4 0xFFFFFFFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD DUP7 DUP4 MSTORE PUSH1 0x20 DUP7 DUP2 DUP6 ADD MSTORE PUSH1 0x40 DUP7 DUP2 DUP7 ADD MSTORE PUSH1 0x60 PUSH1 0x80 DUP2 DUP8 ADD MSTORE DUP4 DUP8 MLOAD DUP1 DUP7 MSTORE PUSH1 0xA0 DUP9 ADD SWAP2 POP DUP5 DUP10 ADD SWAP6 POP DUP7 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x404F JUMPI DUP7 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE DUP8 DUP3 ADD MLOAD AND DUP8 DUP6 ADD MSTORE DUP6 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP6 DUP5 ADD MSTORE SWAP6 DUP6 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x4010 JUMP JUMPDEST POP SWAP1 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4089 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4071 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2BEA JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x40AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x40AF JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE PUSH16 0x85E4E8B536D3CE0E4215A41874773C09 PUSH21 0x5124BF1576425660C9CA944EF164736F6C63430006 0xC STOP CALLER ","sourceMap":"763:25309:0:-:0;;;2660:1;2623:38;;;;2692:5;2665:32;;;;2701:42;;;;;2747:36;;2886:3;2850:39;;2931:1;2893:39;;2950:30;;;-1:-1:-1;;2950:30:0;;;3141:423;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1645:1:10;1760:7;:22;;;904:12:3;:10;:12::i;:::-;926:6;:18;;-1:-1:-1;;;;;;926:18:3;-1:-1:-1;;;;;926:18:3;;;;;;;;959:43;;926:18;;-1:-1:-1;926:18:3;-1:-1:-1;;959:43:3;;-1:-1:-1;;959:43:3;-1:-1:-1;3229:31:0::1;::::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;;::::0;;::::1;::::0;;;::::1;::::0;:5:::1;::::0;:31:::1;:::i;:::-;-1:-1:-1::0;3266:17:0::1;::::0;;;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;;;3266:17:0::1;::::0;;::::1;::::0;;;::::1;::::0;:7:::1;::::0;:17:::1;:::i;:::-;-1:-1:-1::0;;;;3289:14:0::1;::::0;3310:12:::1;:28:::0;;-1:-1:-1;;;;;;3310:28:0;;::::1;-1:-1:-1::0;;;;;3310:28:0;;::::1;::::0;;;::::1;::::0;;;3344:13:::1;:30:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;3397:8:::1;3380:14;:25:::0;-1:-1:-1;3435:57:0::1;1893:6;3435:36;:15;1893:6:::0;3435:19:::1;;::::0;;::::1;;;:36:::0;::::1;:::i;:::-;:40;;;;;;:57;;;;:::i;:::-;3510:48;::::0;;;;::::1;::::0;;;-1:-1:-1;3510:48:0;;;::::1;::::0;;::::1;;::::0;::::1;::::0;;;3498:6:::1;:61:::0;;::::1;::::0;::::1;::::0;;;;;;;;;::::1;::::0;;;;;;::::1;-1:-1:-1::0;;;3498:61:0::1;-1:-1:-1::0;;;;;3498:61:0;;::::1;-1:-1:-1::0;;;;;;3498:61:0;;::::1;::::0;;;::::1;;;::::0;;-1:-1:-1;763:25309:0;;-1:-1:-1;;763:25309:0;598:104:9;685:10;598:104;:::o;677:142:2:-;735:7;762:1;758;:5;750:46;;;;-1:-1:-1;;;750:46:2;;;;;;;:::i;:::-;;;;;;;;;813:1;809;:5;;;;;;802:12;;677:142;;;;;:::o;526:147::-;584:9;609:6;;;:30;;-1:-1:-1;;624:5:2;;;638:1;633;624:5;633:1;619:15;;;;;:20;609:30;601:67;;;;-1:-1:-1;;;601:67:2;;;;;;;:::i;763:25309:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;763:25309:0;;;-1:-1:-1;763:25309:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;363:475:-1;;;533:2;521:9;512:7;508:23;504:32;501:2;;;-1:-1;;539:12;501:2;104:6;98:13;116:48;158:5;116:48;:::i;:::-;717:2;790:22;;277:13;591:89;;-1:-1;295:56;277:13;295:56;:::i;:::-;725:97;;;;495:343;;;;;:::o;1515:416::-;1715:2;1729:47;;;1070:2;1700:18;;;2465:19;1106:30;2505:14;;;1086:51;1156:12;;;1686:245::o;1938:416::-;2138:2;2152:47;;;1407:2;2123:18;;;2465:19;1443:26;2505:14;;;1423:47;1489:12;;;2109:245::o;2993:147::-;-1:-1;;;;;2927:54;;3067:50;;3057:2;;3131:1;;3121:12;3057:2;3051:89;:::o;:::-;763:25309:0;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{"150":[{"length":32,"start":3094}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106103195760003560e01c80638757b15b116101a9578063c00007b0116100ef578063e432488d1161009d578063e432488d14610681578063e465fe8014610689578063e70b9e271461069c578063f1229777146106af578063f2157932146106c2578063f2fde38b146106ca578063f8261597146106dd578063fc0e74d1146106f057610319565b8063c00007b0146105f7578063c1009f4b1461060a578063c6b61e4c14610612578063ca5c7b9114610633578063d3c45c761461063b578063dc01f60d1461064e578063e2ab691d1461066e57610319565b8063a81653c911610157578063a81653c91461058b578063a98e05bb1461059e578063aa33fedb146105a6578063b187bc22146105b9578063b5ed7a66146105c1578063b66503cf146105c9578063bcd11014146105dc578063bf86d690146105ef57610319565b80638757b15b1461053d578063887c7dc5146105455780638980f11f146105585780638da5cb5b1461056b57806395d89b411461057357806396ce07951461057b5780639bdc74671461058357610319565b806357c2c2ba1161026e57806370b36d791161021c57806370b36d79146104cf57806370e664cd146104e2578063715018a6146104f557806372f702f3146104fd57806375aadf61146105125780637bb7bed11461051a5780637bd48c7c1461052d578063829965cc1461053557610319565b806357c2c2ba14610455578063593557361461045d578063638634ee1461047057806363f1c8e2146104835780636724c910146104965780637035ab98146104a957806370a08231146104bc57610319565b80632fe87108116102cb5780632fe87108146103b9578063312ff839146103cc578063313ce567146103e1578063321bc347146103f6578063386a95251461040957806339fc97131461041157806348e5d9f81461043157610319565b8063045544431461031e5780630483a7f61461033c57806306fdde031461035f57806318160ddd146103745780631c6073951461037c57806327e235e31461038f5780632e9564e4146103b1575b600080fd5b6103266106f8565b6040516103339190613fa8565b60405180910390f35b61034f61034a366004613677565b6106ff565b6040516103339493929190613fde565b6103676108c5565b60405161033391906139c5565b61032661095b565b61032661038a366004613813565b610a31565b6103a261039d366004613677565b610b5d565b60405161033393929190613f60565b610326610b93565b6103266103c7366004613677565b610b99565b6103df6103da36600461376d565b610bc8565b005b6103e9610c14565b6040516103339190614060565b6103df6104043660046137e3565b610c38565b610326610cb7565b61042461041f366004613692565b610cbe565b6040516103339190613984565b61044461043f366004613677565b610cde565b60405161033395949392919061398f565b610326610d2a565b61032661046b366004613677565b610d30565b61032661047e366004613677565b610d54565b6103df610491366004613836565b610d82565b6103df6104a43660046136c6565b610e0f565b6103266104b7366004613692565b610ec7565b6103266104ca366004613677565b610ee4565b6103266104dd3660046137e3565b611008565b6103df6104f03660046137a5565b61112a565b6103df61116e565b6105056111f7565b60405161033391906138a0565b610326611206565b6105056105283660046137e3565b61120c565b610326611233565b610326611239565b6103df61123f565b6103df610553366004613677565b61127e565b6103df610566366004613710565b6112cf565b6105056113d5565b6103676113e4565b610326611445565b61032661144b565b6103df610599366004613857565b611451565b610505611522565b6103a26105b4366004613710565b611531565b61032661157d565b610326611583565b6103df6105d7366004613710565b611589565b6103266105ea366004613677565b61181f565b610424611855565b6103df610605366004613677565b61185e565b6103df611ba1565b6106256106203660046137e3565b611ba9565b604051610333929190613f89565b610326611bde565b6103df6106493660046136c6565b611be4565b61066161065c366004613677565b611d09565b604051610333919061392c565b6103df61067c36600461373a565b611e4a565b610326611e95565b6103df610697366004613677565b611e9b565b6103266106aa366004613692565b611f43565b6103266106bd366004613677565b611f60565b610505611f6b565b6103df6106d8366004613677565b611f7a565b6103266106eb3660046137e3565b61203b565b6103df6120e5565b626ebe0081565b6001600160a01b0381166000908152600e60209081526040808320600d9092528220805483928392606092600160e01b900463ffffffff1684815b84548110156108ad574285828154811061075057fe5b600091825260209091200154600160e01b900463ffffffff16111561087757816107cd57845481900367ffffffffffffffff8111801561078f57600080fd5b506040519080825280602002602001820160405280156107c957816020015b6107b6613629565b8152602001906001900390816107ae5790505b5095505b8481815481106107d957fe5b60009182526020918290206040805160608101825291909201546001600160701b038082168352600160701b8204169382019390935263ffffffff600160e01b9093049290921690820152865187908490811061083257fe5b6020026020010181905250818060010192505061087085828154811061085457fe5b60009182526020909120015488906001600160701b031661219c565b96506108a5565b6108a285828154811061088657fe5b60009182526020909120015489906001600160701b031661219c565b97505b60010161073a565b505090546001600160701b0316955050509193509193565b60178054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109515780601f1061092657610100808354040283529160200191610951565b820191906000526020600020905b81548152906001019060200180831161093457829003601f168201915b5050505050905090565b60008061097562093a8061096f4282612133565b90612165565b9050600061098682626ebe006121bf565b600c80549192508390600019830183811061099d57fe5b600091825260209091200154600160e01b900463ffffffff1614156109c157600019015b60001981015b6001810115610a2a576000600c82815481106109df57fe5b60009182526020909120018054909150600160e01b900463ffffffff168410610a085750610a2a565b8054610a1e9087906001600160e01b031661219c565b955050600019016109c7565b5050505090565b6001600160a01b0381166000908152600e60205260408120600c805483919086908110610a5a57fe5b600091825260208220015463ffffffff600160e01b90910481169250610a87908390626ebe00906121bf16565b90506000610a9c62093a8061096f4282612133565b8454909150600019015b6001810115610b51576000610aea62093a80600c02878481548110610ac757fe5b60009182526020909120015463ffffffff600160e01b909104811691906121bf16565b9050848111158015610afb57508281105b15610b475783811115610b4157610b3a868381548110610b1757fe5b6000918252602090912001548890600160701b90046001600160701b031661219c565b9650610b47565b50610b51565b5060001901610aa6565b50505050505b92915050565b600d602052600090815260409020546001600160701b0380821691600160701b810490911690600160e01b900463ffffffff1683565b60115481565b6001600160a01b0381166000908152600d6020526040902054600160701b90046001600160701b03165b919050565b60026000541415610bf45760405162461bcd60e51b8152600401610beb90613e56565b60405180910390fd5b6002600081905550610c0c33826000333360006121e2565b506001600055565b7f000000000000000000000000000000000000000000000000000000000000000090565b610c4061278d565b6001600160a01b0316610c516113d5565b6001600160a01b031614610c775760405162461bcd60e51b8152600401610beb90613c7f565b7f21c46a061cb9c101660f51f5c9fc9768c5f6e8cf5dea8ca5cd03cb6db13956f360065482604051610caa929190613fd0565b60405180910390a1600655565b62093a8081565b600760209081526000928352604080842090915290825290205460ff1681565b6005602052600090815260409020805460019091015460ff82169164ffffffffff61010082048116926001600160d01b03600160301b90930483169291811691600160281b9091041685565b60065481565b6001600160a01b03166000908152600d60205260409020546001600160701b031690565b6001600160a01b038116600090815260056020526040812054610b5790610100900464ffffffffff16612791565b610d8a61278d565b6001600160a01b0316610d9b6113d5565b6001600160a01b031614610dc15760405162461bcd60e51b8152600401610beb90613c7f565b6101f4821115610de35760405162461bcd60e51b8152600401610beb90613b55565b6002811015610e045760405162461bcd60e51b8152600401610beb90613d22565b601491909155601555565b610e1761278d565b6001600160a01b0316610e286113d5565b6001600160a01b031614610e4e5760405162461bcd60e51b8152600401610beb90613c7f565b6001600160a01b03831660009081526005602052604090206001015464ffffffffff16610e8d5760405162461bcd60e51b8152600401610beb90613cb4565b6001600160a01b03928316600090815260076020908152604080832094909516825292909252919020805460ff1916911515919091179055565b600860209081526000928352604080842090915290825290205481565b6001600160a01b0381166000908152600e60209081526040808320600d90925290912080548254600160701b82046001600160701b0316939291600160e01b900463ffffffff1690815b81811015610fa75742858281548110610f4357fe5b600091825260209091200154600160e01b900463ffffffff1611610f9a57610f93858281548110610f7057fe5b6000918252602090912001548790600160701b90046001600160701b03166121bf565b9550610f9f565b610fa7565b600101610f2e565b506000610fbb62093a8061096f4282612133565b9050600082118015610fe4575080610fe262093a80600c02876001860381548110610ac757fe5b145b15610ffe57610ffb856001840381548110610f7057fe5b95505b5050505050919050565b60008061104962093a8061096f62093a80600c878154811061102657fe5b60009182526020909120015463ffffffff600160e01b9091048116919061213316565b9050600061105a82626ebe006121bf565b9050600061106f62093a8061096f4282612133565b905080600c868154811061107f57fe5b600091825260209091200154600160e01b900463ffffffff1614156110a657600019909401935b845b6001810115611121576000600c82815481106110c057fe5b60009182526020909120018054909150600160e01b900463ffffffff1684106110e95750611121565b611115600c83815481106110f957fe5b60009182526020909120015487906001600160e01b031661219c565b955050600019016110a8565b50505050919050565b6002600054141561114d5760405162461bcd60e51b8152600401610beb90613e56565b6002600081905550611164338484843360006121e2565b5050600160005550565b61117661278d565b6001600160a01b03166111876113d5565b6001600160a01b0316146111ad5760405162461bcd60e51b8152600401610beb90613c7f565b6001546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600180546001600160a01b0319169055565b6002546001600160a01b031681565b600b5481565b6004818154811061121957fe5b6000918252602090912001546001600160a01b0316905081565b60125481565b600c5490565b60035460025461125d916001600160a01b039182169116600061279d565b60035460025461127c916001600160a01b03918216911660001961279d565b565b600260005414156112a15760405162461bcd60e51b8152600401610beb90613e56565b6002600081905550610c0c8160008084336112ca60155462093a8061216590919063ffffffff16565b6121e2565b6112d761278d565b6001600160a01b03166112e86113d5565b6001600160a01b03161461130e5760405162461bcd60e51b8152600401610beb90613c7f565b6002546001600160a01b038381169116141561133c5760405162461bcd60e51b8152600401610beb90613ceb565b6001600160a01b03821660009081526005602052604090206001015464ffffffffff161561137c5760405162461bcd60e51b8152600401610beb90613e1f565b6113986113876113d5565b6001600160a01b038416908361289c565b7f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa2882826040516113c99291906138f2565b60405180910390a15050565b6001546001600160a01b031690565b60188054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109515780601f1061092657610100808354040283529160200191610951565b61271081565b60145481565b61145961278d565b6001600160a01b031661146a6113d5565b6001600160a01b0316146114905760405162461bcd60e51b8152600401610beb90613c7f565b6105dc83106114b15760405162461bcd60e51b8152600401610beb90613b2b565b61753082106114d25760405162461bcd60e51b8152600401610beb90613b55565b6001600160a01b0381166114f85760405162461bcd60e51b8152600401610beb90613ba2565b601292909255601355600f80546001600160a01b0319166001600160a01b03909216919091179055565b600f546001600160a01b031681565b600e602052816000526040600020818154811061154a57fe5b6000918252602090912001546001600160701b038082169350600160701b8204169150600160e01b900463ffffffff1683565b60105481565b60135481565b6000808052600d6020527f81955a0a11e65eac625c29e8882660bae4e165a75d72780094acae8ece9a29ee8054600160701b90046001600160701b0316825b600454811015611754576000600482815481106115e157fe5b6000918252602090912001546001600160a01b03169050611609611604826128bb565b6129ca565b6001600160a01b03821660009081526005602052604090206001810180546001600160d01b0393909316600160281b02600160281b600160f81b0319909316929092179091555461166f9061166a9064ffffffffff61010090910416612791565b6129f7565b6001600160a01b038281166000908152600560205260409020600101805464ffffffffff191664ffffffffff939093169290921790915585161561174b576001600160a01b0381166000908152600560205260409020546116ec908690839060ff166116e55786546001600160701b03166116e7565b855b612a1e565b6001600160a01b0386811660008181526009602090815260408083209487168084529482528083209590955560058152848220600101549282526008815284822093825292909252919020600160281b9091046001600160d01b031690555b506001016115c8565b5050506001600160a01b038316600090815260076020908152604080832033845290915290205460ff1661179a5760405162461bcd60e51b8152600401610beb90613c57565b600082116117ba5760405162461bcd60e51b8152600401610beb90613c34565b6117c48383612a96565b6117d96001600160a01b038416333085612bc9565b826001600160a01b03167fac24935fd910bc682b5ccb1a07b718cadf8cf2f6d1404c4f3ddc3662dae40e29836040516118129190613fa8565b60405180910390a2505050565b6001600160a01b038116600090815260056020526040812054610b5790600160301b90046001600160d01b031662093a80612165565b60165460ff1681565b600260005414156118815760405162461bcd60e51b8152600401610beb90613e56565b600260009081556001600160a01b0382168152600d6020526040812080548392600160701b9091046001600160701b0316905b600454811015611a2f576000600482815481106118cd57fe5b6000918252602090912001546001600160a01b031690506118f0611604826128bb565b6001600160a01b03821660009081526005602052604090206001810180546001600160d01b0393909316600160281b02600160281b600160f81b031990931692909217909155546119519061166a9064ffffffffff61010090910416612791565b6001600160a01b038281166000908152600560205260409020600101805464ffffffffff191664ffffffffff9390931692909217909155851615611a26576001600160a01b0381166000908152600560205260409020546119c7908690839060ff166116e55786546001600160701b03166116e7565b6001600160a01b0386811660008181526009602090815260408083209487168084529482528083209590955560058152848220600101549282526008815284822093825292909252919020600160281b9091046001600160d01b031690555b506001016118b4565b50505060005b60045481101561116457600060048281548110611a4e57fe5b60009182526020808320909101546001600160a01b038781168452600983526040808520919092168085529252909120549091508015611b97576001600160a01b0380861660009081526009602090815260408083209386168352929052908120819055611abd82600a612133565b90506000611acc826009612165565b9050611ae26001600160a01b038516888461289c565b60035460065460405163e2ab691d60e01b81526001600160a01b039092169163e2ab691d91611b17918b91869160040161390b565b600060405180830381600087803b158015611b3157600080fd5b505af1158015611b45573d6000803e3d6000fd5b50505050836001600160a01b0316876001600160a01b03167f540798df468d7b23d11f156fdb954cb19ad414d150722a7b6d55ba369dea792e85604051611b8c9190613fa8565b60405180910390a350505b5050600101611a35565b61127c612bf0565b600c8181548110611bb657fe5b6000918252602090912001546001600160e01b0381169150600160e01b900463ffffffff1682565b600a5481565b611bec61278d565b6001600160a01b0316611bfd6113d5565b6001600160a01b031614611c235760405162461bcd60e51b8152600401610beb90613c7f565b6001600160a01b03831660009081526005602052604090206001015464ffffffffff1615611c5057600080fd5b6004805460018082019092557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b039586169081179091556000908152600560209081526040808320808501805464ffffffffff19164264ffffffffff16908117909155815465ffffffffff0019166101009091021760ff1990811696151596909617905560078252808320959096168252939093529290912080549091169091179055565b60045460609067ffffffffffffffff81118015611d2557600080fd5b50604051908082528060200260200182016040528015611d5f57816020015b611d4c613649565b815260200190600190039081611d445790505b506001600160a01b0383166000908152600d60205260408120805492935091600160701b90046001600160701b0316905b8351811015611e4257600060048281548110611da857fe5b9060005260206000200160009054906101000a90046001600160a01b0316905080858381518110611dd557fe5b6020908102919091018101516001600160a01b039283169052908216600090815260059091526040902054611e1f908790839060ff166116e55786546001600160701b03166116e7565b858381518110611e2b57fe5b602090810291909101810151015250600101611d90565b505050919050565b60026000541415611e6d5760405162461bcd60e51b8152600401610beb90613e56565b6002600081905554611e8a906001600160a01b0316333085612bc9565b611164838383612d58565b60155481565b611ea361278d565b6001600160a01b0316611eb46113d5565b6001600160a01b031614611eda5760405162461bcd60e51b8152600401610beb90613c7f565b6003546040517fee4ec82b92f0e1fe230e6604a4752fa407a28069f106dc41e53edc28c4bc504e91611f19916001600160a01b039091169084906138b4565b60405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b600960209081526000928352604080842090915290825290205481565b6000610b57826128bb565b6003546001600160a01b031681565b611f8261278d565b6001600160a01b0316611f936113d5565b6001600160a01b031614611fb95760405162461bcd60e51b8152600401610beb90613c7f565b6001600160a01b038116611fdf5760405162461bcd60e51b8152600401610beb90613a95565b6001546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b600c54600090600019018161205762093a8061096f8682612133565b935060005b60808110156120dd57828210612071576120dd565b600060026001848601010490506000600c828154811061208d57fe5b600091825260209091200154600160e01b900463ffffffff169050868114156120bc57509350610bc392505050565b868110156120cc578193506120d3565b6001820394505b505060010161205c565b509392505050565b6120ed61278d565b6001600160a01b03166120fe6113d5565b6001600160a01b0316146121245760405162461bcd60e51b8152600401610beb90613c7f565b6016805460ff19166001179055565b60008082116121545760405162461bcd60e51b8152600401610beb90613a5e565b81838161215d57fe5b049392505050565b60008115806121805750508082028282828161217d57fe5b04145b610b575760405162461bcd60e51b8152600401610beb90613ee3565b81810181811015610b575760405162461bcd60e51b8152600401610beb90613bcb565b80820382811115610b575760405162461bcd60e51b8152600401610beb906139f8565b6001600160a01b0386166000908152600d6020526040812080548892600160701b9091046001600160701b0316905b60045481101561238c5760006004828154811061222a57fe5b6000918252602090912001546001600160a01b0316905061224d611604826128bb565b6001600160a01b03821660009081526005602052604090206001810180546001600160d01b0393909316600160281b02600160281b600160f81b031990931692909217909155546122ae9061166a9064ffffffffff61010090910416612791565b6001600160a01b038281166000908152600560205260409020600101805464ffffffffff191664ffffffffff9390931692909217909155851615612383576001600160a01b038116600090815260056020526040902054612324908690839060ff166116e55786546001600160701b03166116e7565b6001600160a01b0386811660008181526009602090815260408083209487168084529482528083209590955560058152848220600101549282526008815284822093825292909252919020600160281b9091046001600160d01b031690555b50600101612211565b5050506001600160a01b0387166000908152600e60209081526040808320600d9092528220815460165492939192829190829060ff16806123fd57506123d242896121bf565b8660018403815481106123e157fe5b600091825260209091200154600160e01b900463ffffffff1611155b156124745784546001600160701b038082169550600160701b90910416925061242582613329565b855463ffffffff91909116600160e01b026001600160e01b03909116178555871561246f5761246c8887600185038154811061245d57fe5b9060005260206000200161334f565b90505b61257b565b8454600160e01b900463ffffffff16805b8381101561255b57612497428b6121bf565b8882815481106124a357fe5b600091825260209091200154600160e01b900463ffffffff1611156124c75761255b565b6124f48882815481106124d657fe5b6000918252602090912001546001600160701b0388811691166133e5565b955061252a88828154811061250557fe5b6000918252602090912001546001600160701b0387811691600160701b9004166133e5565b9450891561254f5761254c6125458b8a848154811061245d57fe5b849061219c565b92505b60019182019101612485565b50855463ffffffff909116600160e01b026001600160e01b039091161785555b6000846001600160701b0316116125a45760405162461bcd60e51b8152600401610beb90613b7c565b84546125b9906001600160701b031685613414565b85546001600160701b0319166001600160701b03918216178087556125e791600160701b9091041684613414565b8554600160701b600160e01b031916600160701b6001600160701b0392831602178655600a546126189186166121bf565b600a55600b54612631906001600160701b0385166121bf565b600b5580156126bc5761265661264682613443565b6001600160701b03861690613414565b600254909450612670906001600160a01b03168a8361289c565b8c6001600160a01b0316896001600160a01b03167f7e7ff29ed04cfb223bc9b02606f69520517c117ee82c9158ed2d96323c1ef385836040516126b39190613fa8565b60405180910390a35b8b1561271c576126d68a856001600160701b03168d612d58565b8c6001600160a01b03167fe2d155d9d74decc198a9a9b4f5bddb24ee0842ee745c9ce57e3573b971e50d9d8560405161270f9190613f4c565b60405180910390a261277e565b60025461273c906001600160a01b03168b6001600160701b03871661289c565b8c6001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5856040516127759190613f4c565b60405180910390a25b50505050505050505050505050565b3390565b6000610b57428361346c565b8015806128255750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e906127d390309086906004016138b4565b60206040518083038186803b1580156127eb57600080fd5b505afa1580156127ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061282391906137fb565b155b6128415760405162461bcd60e51b8152600401610beb90613e8d565b6128978363095ea7b360e01b84846040516024016128609291906138f2565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613482565b505050565b6128978363a9059cbb60e01b84846040516024016128609291906138f2565b6000600b54600014156128fa57506001600160a01b038116600090815260056020526040902060010154600160281b90046001600160d01b0316610bc3565b6001600160a01b038216600090815260056020526040902054610b57906129989060ff1661292a57600a5461292e565b600b545b6001600160a01b0385166000908152600560205260409020805460019091015461299291670de0b6b3a76400009161096f916001600160d01b03600160301b82041691839164ffffffffff9182169161298c91610100900416612791565b906121bf565b90612133565b6001600160a01b038416600090815260056020526040902060010154600160281b90046001600160d01b03169061219c565b60006001600160d01b038211156129f35760405162461bcd60e51b8152600401610beb90613a27565b5090565b600064ffffffffff8211156129f35760405162461bcd60e51b8152600401610beb90613f15565b6001600160a01b038084166000818152600960209081526040808320948716808452948252808320549383526008825280832094835293905291822054612a8c9190612a8690670de0b6b3a76400009061299290612a7f9061298c8a6128bb565b8790612165565b9061219c565b90505b9392505050565b6001600160a01b03821660009081526005602052604090208054610100900464ffffffffff164210612af857612ad26116048362093a80612133565b81546001600160d01b0391909116600160301b0265ffffffffffff909116178155612b70565b8054600090612b1390610100900464ffffffffff16426121bf565b8254909150600090612b36908390600160301b90046001600160d01b0316612165565b9050612b4c61160462093a80612992878561219c565b83546001600160d01b0391909116600160301b0265ffffffffffff90911617835550505b612b79426129f7565b60018201805464ffffffffff191664ffffffffff92909216919091179055612ba761166a4262093a8061219c565b815464ffffffffff919091166101000265ffffffffff00199091161790555050565b612bea846323b872dd60e01b858585604051602401612860939291906138ce565b50505050565b6000612c0362093a8061096f4282612133565b600c805491925082906000198301838110612c1a57fe5b600091825260209091200154600160e01b900463ffffffff161015612d54575b600c80548391906000198101908110612c4f57fe5b600091825260209091200154600160e01b900463ffffffff1614612d30576000612cae62093a80600c6001600c805490500381548110612c8b57fe5b60009182526020909120015463ffffffff600160e01b9091048116919061219c16565b60408051808201909152600080825263ffffffff92831660208301908152600c8054600181018255925291517fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c790910180549251909316600160e01b026001600160e01b039182166001600160e01b0319909316929092171617905550612c3a565b60135460115414612d42576013546011555b60125460105414612d54576012546010555b5050565b6001600160a01b0383166000908152600d6020526040812080548592600160701b9091046001600160701b0316905b600454811015612f0257600060048281548110612da057fe5b6000918252602090912001546001600160a01b03169050612dc3611604826128bb565b6001600160a01b03821660009081526005602052604090206001810180546001600160d01b0393909316600160281b02600160281b600160f81b03199093169290921790915554612e249061166a9064ffffffffff61010090910416612791565b6001600160a01b038281166000908152600560205260409020600101805464ffffffffff191664ffffffffff9390931692909217909155851615612ef9576001600160a01b038116600090815260056020526040902054612e9a908690839060ff166116e55786546001600160701b03166116e7565b6001600160a01b0386811660008181526009602090815260408083209487168084529482528083209590955560058152848220600101549282526008815284822093825292909252919020600160281b9091046001600160d01b031690555b50600101612d87565b50505060008311612f255760405162461bcd60e51b8152600401610beb90613adb565b601054821115612f475760405162461bcd60e51b8152600401610beb90613b03565b60165460ff1615612f6a5760405162461bcd60e51b8152600401610beb90613d45565b6001600160a01b0384166000908152600d60205260409020612f8a612bf0565b6000612f9c6127106129928787612165565b90506000612fc5601054600014612fb557601054612fb8565b60015b6011546129929088612165565b90506000612fdb612fd688856121bf565b613443565b90506000612ffc612fd6612ff56127106129928c88612165565b8a9061219c565b8554909150613014906001600160701b0316836133e5565b85546001600160701b0319166001600160701b039182161780875561304291600160701b90910416826133e5565b8554600160701b600160e01b031916600160701b6001600160701b0392831602178655600a5461307391841661219c565b600a55600b5461308c906001600160701b03831661219c565b600b5560006130a262093a8061096f4282612133565b905060006130b382626ebe0061219c565b6001600160a01b038c166000908152600e602052604090205490915080158061311d57506001600160a01b038c166000908152600e602052604090208054839190600019840190811061310257fe5b600091825260209091200154600160e01b900463ffffffff16105b156131cc576001600160a01b038c166000908152600e6020908152604080832081516060810183526001600160701b03808b16825289811682860190815263ffffffff808a16958401958652845460018101865594885295909620915191909201805495519351909416600160e01b026001600160e01b03938316600160701b02600160701b600160e01b0319929093166001600160701b03199096169590951716171691909117905561326c565b6001600160a01b038c166000908152600e60205260408120805460001984019081106131f457fe5b60009182526020909120018054909150613217906001600160701b0316876133e5565b81546001600160701b0319166001600160701b039182161780835561324591600160701b90910416866133e5565b81546001600160701b0391909116600160701b02600160701b600160e01b03199091161790555b600c805460009190600019810190811061328257fe5b600091825260209091200180549091506132ae906001600160e01b03166001600160701b038716613511565b81546001600160e01b0319166001600160e01b039190911617815587156132ec57600f546002546132ec916001600160a01b0391821691168a61289c565b8c6001600160a01b03167fb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed8d888860405161277593929190613fb1565b600063ffffffff8211156129f35760405162461bcd60e51b8152600401610beb90613d9e565b60008061336762093a8061096f8161299242896121bf565b83549091506000906133949062093a809061299290859063ffffffff600160e01b9091048116906121bf16565b905060006133bb6133b38360010160145461216590919063ffffffff16565b61271061346c565b85549091506133db9061271090612992906001600160701b031684612165565b9695505050505050565b8181016001600160701b038083169082161015610b575760405162461bcd60e51b8152600401610beb90613bcb565b8082036001600160701b038084169082161115610b575760405162461bcd60e51b8152600401610beb906139f8565b60006001600160701b038211156129f35760405162461bcd60e51b8152600401610beb90613bfd565b600081831061347b5781612a8f565b5090919050565b60606134d7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166135409092919063ffffffff16565b80519091501561289757808060200190518101906134f59190613789565b6128975760405162461bcd60e51b8152600401610beb90613dd5565b8181016001600160e01b038083169082161015610b575760405162461bcd60e51b8152600401610beb90613bcb565b6060612a8c848460008585613554856135ea565b6135705760405162461bcd60e51b8152600401610beb90613d67565b60006060866001600160a01b0316858760405161358d9190613884565b60006040518083038185875af1925050503d80600081146135ca576040519150601f19603f3d011682016040523d82523d6000602084013e6135cf565b606091505b50915091506135df8282866135f0565b979650505050505050565b3b151590565b606083156135ff575081612a8f565b82511561360f5782518084602001fd5b8160405162461bcd60e51b8152600401610beb91906139c5565b604080516060810182526000808252602082018190529181019190915290565b604080518082019091526000808252602082015290565b80356001600160a01b0381168114610b5757600080fd5b600060208284031215613688578081fd5b612a8f8383613660565b600080604083850312156136a4578081fd5b6136ae8484613660565b91506136bd8460208501613660565b90509250929050565b6000806000606084860312156136da578081fd5b83356136e58161409a565b925060208401356136f58161409a565b91506040840135613705816140b2565b809150509250925092565b60008060408385031215613722578182fd5b61372c8484613660565b946020939093013593505050565b60008060006060848603121561374e578283fd5b6137588585613660565b95602085013595506040909401359392505050565b60006020828403121561377e578081fd5b8135612a8f816140b2565b60006020828403121561379a578081fd5b8151612a8f816140b2565b6000806000606084860312156137b9578283fd5b83356137c4816140b2565b9250602084013591506137da8560408601613660565b90509250925092565b6000602082840312156137f4578081fd5b5035919050565b60006020828403121561380c578081fd5b5051919050565b60008060408385031215613825578182fd5b823591506136bd8460208501613660565b60008060408385031215613848578182fd5b50508035926020909101359150565b60008060006060848603121561386b578283fd5b833592506020840135915060408401356137058161409a565b6000825161389681846020870161406e565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b602080825282518282018190526000919060409081850190868401855b8281101561397757815180516001600160a01b03168552860151868501529284019290850190600101613949565b5091979650505050505050565b901515815260200190565b941515855264ffffffffff93841660208601526001600160d01b0392831660408601529216606084015216608082015260a00190565b60006020825282518060208401526139e481604085016020870161406e565b601f01601f19169190910160400192915050565b602080825260159082015274426f72696e674d6174683a20556e646572666c6f7760581b604082015260600190565b6020808252601c908201527f426f72696e674d6174683a2075696e74323038204f766572666c6f7700000000604082015260600190565b6020808252601c908201527f426f72696e674d6174683a206469766973696f6e206279207a65726f00000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252600e908201526d043616e6e6f74207374616b6520360941b604082015260600190565b6020808252600e908201526d1bdd995c881b585e081cdc195b9960921b604082015260600190565b60208082526010908201526f1bdd995c881b585e081c185e5b595b9d60821b604082015260600190565b6020808252600d908201526c6f766572206d6178207261746560981b604082015260600190565b6020808252600c908201526b6e6f20657870206c6f636b7360a01b604082015260600190565b6020808252600f908201526e696e76616c6964206164647265737360881b604082015260600190565b602080825260189082015277426f72696e674d6174683a20416464204f766572666c6f7760401b604082015260600190565b6020808252601c908201527f426f72696e674d6174683a2075696e74313132204f766572666c6f7700000000604082015260600190565b602080825260099082015268139bc81c995dd85c9960ba1b604082015260600190565b6020808252600e908201526d1b9bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601c908201527f7265776172647320746f6b656e20646f6573206e6f7420657869737400000000604082015260600190565b6020808252601d908201527f43616e6e6f74207769746864726177207374616b696e6720746f6b656e000000604082015260600190565b6020808252600990820152686d696e2064656c617960b81b604082015260600190565b60208082526008908201526739b43aba3237bbb760c11b604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252601b908201527f426f72696e674d6174683a2075696e743332204f766572666c6f770000000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252601c908201527f43616e6e6f742077697468647261772072657761726420746f6b656e00000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526036908201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60408201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606082015260800190565b602080825260189082015277426f72696e674d6174683a204d756c204f766572666c6f7760401b604082015260600190565b6020808252601b908201527f426f72696e674d6174683a2075696e743430204f766572666c6f770000000000604082015260600190565b6001600160701b0391909116815260200190565b6001600160701b03938416815291909216602082015263ffffffff909116604082015260600190565b6001600160e01b0392909216825263ffffffff16602082015260400190565b90815260200190565b9283526001600160701b03918216602084015216604082015260600190565b918252602082015260400190565b6000608082018683526020868185015260408681860152606060808187015283875180865260a0880191508489019550865b8181101561404f57865180516001600160701b03908116855287820151168785015285015163ffffffff16858401529585019591830191600101614010565b50909b9a5050505050505050505050565b60ff91909116815260200190565b60005b83811015614089578181015183820152602001614071565b83811115612bea5750506000910152565b6001600160a01b03811681146140af57600080fd5b50565b80151581146140af57600080fdfea2646970667358221220416f85e4e8b536d3ce0e4215a41874773c09745124bf1576425660c9ca944ef164736f6c634300060c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x319 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8757B15B GT PUSH2 0x1A9 JUMPI DUP1 PUSH4 0xC00007B0 GT PUSH2 0xEF JUMPI DUP1 PUSH4 0xE432488D GT PUSH2 0x9D JUMPI DUP1 PUSH4 0xE432488D EQ PUSH2 0x681 JUMPI DUP1 PUSH4 0xE465FE80 EQ PUSH2 0x689 JUMPI DUP1 PUSH4 0xE70B9E27 EQ PUSH2 0x69C JUMPI DUP1 PUSH4 0xF1229777 EQ PUSH2 0x6AF JUMPI DUP1 PUSH4 0xF2157932 EQ PUSH2 0x6C2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6CA JUMPI DUP1 PUSH4 0xF8261597 EQ PUSH2 0x6DD JUMPI DUP1 PUSH4 0xFC0E74D1 EQ PUSH2 0x6F0 JUMPI PUSH2 0x319 JUMP JUMPDEST DUP1 PUSH4 0xC00007B0 EQ PUSH2 0x5F7 JUMPI DUP1 PUSH4 0xC1009F4B EQ PUSH2 0x60A JUMPI DUP1 PUSH4 0xC6B61E4C EQ PUSH2 0x612 JUMPI DUP1 PUSH4 0xCA5C7B91 EQ PUSH2 0x633 JUMPI DUP1 PUSH4 0xD3C45C76 EQ PUSH2 0x63B JUMPI DUP1 PUSH4 0xDC01F60D EQ PUSH2 0x64E JUMPI DUP1 PUSH4 0xE2AB691D EQ PUSH2 0x66E JUMPI PUSH2 0x319 JUMP JUMPDEST DUP1 PUSH4 0xA81653C9 GT PUSH2 0x157 JUMPI DUP1 PUSH4 0xA81653C9 EQ PUSH2 0x58B JUMPI DUP1 PUSH4 0xA98E05BB EQ PUSH2 0x59E JUMPI DUP1 PUSH4 0xAA33FEDB EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0xB187BC22 EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0xB5ED7A66 EQ PUSH2 0x5C1 JUMPI DUP1 PUSH4 0xB66503CF EQ PUSH2 0x5C9 JUMPI DUP1 PUSH4 0xBCD11014 EQ PUSH2 0x5DC JUMPI DUP1 PUSH4 0xBF86D690 EQ PUSH2 0x5EF JUMPI PUSH2 0x319 JUMP JUMPDEST DUP1 PUSH4 0x8757B15B EQ PUSH2 0x53D JUMPI DUP1 PUSH4 0x887C7DC5 EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0x8980F11F EQ PUSH2 0x558 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x56B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0x96CE0795 EQ PUSH2 0x57B JUMPI DUP1 PUSH4 0x9BDC7467 EQ PUSH2 0x583 JUMPI PUSH2 0x319 JUMP JUMPDEST DUP1 PUSH4 0x57C2C2BA GT PUSH2 0x26E JUMPI DUP1 PUSH4 0x70B36D79 GT PUSH2 0x21C JUMPI DUP1 PUSH4 0x70B36D79 EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0x70E664CD EQ PUSH2 0x4E2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0x75AADF61 EQ PUSH2 0x512 JUMPI DUP1 PUSH4 0x7BB7BED1 EQ PUSH2 0x51A JUMPI DUP1 PUSH4 0x7BD48C7C EQ PUSH2 0x52D JUMPI DUP1 PUSH4 0x829965CC EQ PUSH2 0x535 JUMPI PUSH2 0x319 JUMP JUMPDEST DUP1 PUSH4 0x57C2C2BA EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0x59355736 EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0x638634EE EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0x63F1C8E2 EQ PUSH2 0x483 JUMPI DUP1 PUSH4 0x6724C910 EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0x7035AB98 EQ PUSH2 0x4A9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4BC JUMPI PUSH2 0x319 JUMP JUMPDEST DUP1 PUSH4 0x2FE87108 GT PUSH2 0x2CB JUMPI DUP1 PUSH4 0x2FE87108 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0x312FF839 EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x321BC347 EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0x386A9525 EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0x39FC9713 EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0x48E5D9F8 EQ PUSH2 0x431 JUMPI PUSH2 0x319 JUMP JUMPDEST DUP1 PUSH4 0x4554443 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x483A7F6 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x1C607395 EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x2E9564E4 EQ PUSH2 0x3B1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x326 PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x3FA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34F PUSH2 0x34A CALLDATASIZE PUSH1 0x4 PUSH2 0x3677 JUMP JUMPDEST PUSH2 0x6FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3FDE JUMP JUMPDEST PUSH2 0x367 PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x39C5 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x95B JUMP JUMPDEST PUSH2 0x326 PUSH2 0x38A CALLDATASIZE PUSH1 0x4 PUSH2 0x3813 JUMP JUMPDEST PUSH2 0xA31 JUMP JUMPDEST PUSH2 0x3A2 PUSH2 0x39D CALLDATASIZE PUSH1 0x4 PUSH2 0x3677 JUMP JUMPDEST PUSH2 0xB5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F60 JUMP JUMPDEST PUSH2 0x326 PUSH2 0xB93 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x3C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3677 JUMP JUMPDEST PUSH2 0xB99 JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x3DA CALLDATASIZE PUSH1 0x4 PUSH2 0x376D JUMP JUMPDEST PUSH2 0xBC8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E9 PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x4060 JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x404 CALLDATASIZE PUSH1 0x4 PUSH2 0x37E3 JUMP JUMPDEST PUSH2 0xC38 JUMP JUMPDEST PUSH2 0x326 PUSH2 0xCB7 JUMP JUMPDEST PUSH2 0x424 PUSH2 0x41F CALLDATASIZE PUSH1 0x4 PUSH2 0x3692 JUMP JUMPDEST PUSH2 0xCBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x3984 JUMP JUMPDEST PUSH2 0x444 PUSH2 0x43F CALLDATASIZE PUSH1 0x4 PUSH2 0x3677 JUMP JUMPDEST PUSH2 0xCDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x398F JUMP JUMPDEST PUSH2 0x326 PUSH2 0xD2A JUMP JUMPDEST PUSH2 0x326 PUSH2 0x46B CALLDATASIZE PUSH1 0x4 PUSH2 0x3677 JUMP JUMPDEST PUSH2 0xD30 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x47E CALLDATASIZE PUSH1 0x4 PUSH2 0x3677 JUMP JUMPDEST PUSH2 0xD54 JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x491 CALLDATASIZE PUSH1 0x4 PUSH2 0x3836 JUMP JUMPDEST PUSH2 0xD82 JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x4A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x36C6 JUMP JUMPDEST PUSH2 0xE0F JUMP JUMPDEST PUSH2 0x326 PUSH2 0x4B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3692 JUMP JUMPDEST PUSH2 0xEC7 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x4CA CALLDATASIZE PUSH1 0x4 PUSH2 0x3677 JUMP JUMPDEST PUSH2 0xEE4 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x4DD CALLDATASIZE PUSH1 0x4 PUSH2 0x37E3 JUMP JUMPDEST PUSH2 0x1008 JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x4F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x37A5 JUMP JUMPDEST PUSH2 0x112A JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x116E JUMP JUMPDEST PUSH2 0x505 PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x38A0 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x505 PUSH2 0x528 CALLDATASIZE PUSH1 0x4 PUSH2 0x37E3 JUMP JUMPDEST PUSH2 0x120C JUMP JUMPDEST PUSH2 0x326 PUSH2 0x1233 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x1239 JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x123F JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x553 CALLDATASIZE PUSH1 0x4 PUSH2 0x3677 JUMP JUMPDEST PUSH2 0x127E JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x566 CALLDATASIZE PUSH1 0x4 PUSH2 0x3710 JUMP JUMPDEST PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x505 PUSH2 0x13D5 JUMP JUMPDEST PUSH2 0x367 PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x1445 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x144B JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x599 CALLDATASIZE PUSH1 0x4 PUSH2 0x3857 JUMP JUMPDEST PUSH2 0x1451 JUMP JUMPDEST PUSH2 0x505 PUSH2 0x1522 JUMP JUMPDEST PUSH2 0x3A2 PUSH2 0x5B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3710 JUMP JUMPDEST PUSH2 0x1531 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x157D JUMP JUMPDEST PUSH2 0x326 PUSH2 0x1583 JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x5D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3710 JUMP JUMPDEST PUSH2 0x1589 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x5EA CALLDATASIZE PUSH1 0x4 PUSH2 0x3677 JUMP JUMPDEST PUSH2 0x181F JUMP JUMPDEST PUSH2 0x424 PUSH2 0x1855 JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x605 CALLDATASIZE PUSH1 0x4 PUSH2 0x3677 JUMP JUMPDEST PUSH2 0x185E JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x1BA1 JUMP JUMPDEST PUSH2 0x625 PUSH2 0x620 CALLDATASIZE PUSH1 0x4 PUSH2 0x37E3 JUMP JUMPDEST PUSH2 0x1BA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP3 SWAP2 SWAP1 PUSH2 0x3F89 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x1BDE JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x649 CALLDATASIZE PUSH1 0x4 PUSH2 0x36C6 JUMP JUMPDEST PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0x661 PUSH2 0x65C CALLDATASIZE PUSH1 0x4 PUSH2 0x3677 JUMP JUMPDEST PUSH2 0x1D09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x392C JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x67C CALLDATASIZE PUSH1 0x4 PUSH2 0x373A JUMP JUMPDEST PUSH2 0x1E4A JUMP JUMPDEST PUSH2 0x326 PUSH2 0x1E95 JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x697 CALLDATASIZE PUSH1 0x4 PUSH2 0x3677 JUMP JUMPDEST PUSH2 0x1E9B JUMP JUMPDEST PUSH2 0x326 PUSH2 0x6AA CALLDATASIZE PUSH1 0x4 PUSH2 0x3692 JUMP JUMPDEST PUSH2 0x1F43 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x6BD CALLDATASIZE PUSH1 0x4 PUSH2 0x3677 JUMP JUMPDEST PUSH2 0x1F60 JUMP JUMPDEST PUSH2 0x505 PUSH2 0x1F6B JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x6D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3677 JUMP JUMPDEST PUSH2 0x1F7A JUMP JUMPDEST PUSH2 0x326 PUSH2 0x6EB CALLDATASIZE PUSH1 0x4 PUSH2 0x37E3 JUMP JUMPDEST PUSH2 0x203B JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x20E5 JUMP JUMPDEST PUSH3 0x6EBE00 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xD SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD DUP4 SWAP3 DUP4 SWAP3 PUSH1 0x60 SWAP3 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP5 DUP2 JUMPDEST DUP5 SLOAD DUP2 LT ISZERO PUSH2 0x8AD JUMPI TIMESTAMP DUP6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x750 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x877 JUMPI DUP2 PUSH2 0x7CD JUMPI DUP5 SLOAD DUP2 SWAP1 SUB PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x78F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7C9 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x7B6 PUSH2 0x3629 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x7AE JUMPI SWAP1 POP JUMPDEST POP SWAP6 POP JUMPDEST DUP5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7D9 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE SWAP2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP4 DIV SWAP3 SWAP1 SWAP3 AND SWAP1 DUP3 ADD MSTORE DUP7 MLOAD DUP8 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x832 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0x870 DUP6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x854 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x219C JUMP JUMPDEST SWAP7 POP PUSH2 0x8A5 JUMP JUMPDEST PUSH2 0x8A2 DUP6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x886 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP10 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x219C JUMP JUMPDEST SWAP8 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x73A JUMP JUMPDEST POP POP SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP6 POP POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x17 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x951 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x926 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x951 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x934 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x975 PUSH3 0x93A80 PUSH2 0x96F TIMESTAMP DUP3 PUSH2 0x2133 JUMP JUMPDEST SWAP1 PUSH2 0x2165 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x986 DUP3 PUSH3 0x6EBE00 PUSH2 0x21BF JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD SWAP2 SWAP3 POP DUP4 SWAP1 PUSH1 0x0 NOT DUP4 ADD DUP4 DUP2 LT PUSH2 0x99D JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x9C1 JUMPI PUSH1 0x0 NOT ADD JUMPDEST PUSH1 0x0 NOT DUP2 ADD JUMPDEST PUSH1 0x1 DUP2 ADD ISZERO PUSH2 0xA2A JUMPI PUSH1 0x0 PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9DF JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP5 LT PUSH2 0xA08 JUMPI POP PUSH2 0xA2A JUMP JUMPDEST DUP1 SLOAD PUSH2 0xA1E SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH2 0x219C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x0 NOT ADD PUSH2 0x9C7 JUMP JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xC DUP1 SLOAD DUP4 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0xA5A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP3 POP PUSH2 0xA87 SWAP1 DUP4 SWAP1 PUSH3 0x6EBE00 SWAP1 PUSH2 0x21BF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA9C PUSH3 0x93A80 PUSH2 0x96F TIMESTAMP DUP3 PUSH2 0x2133 JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 NOT ADD JUMPDEST PUSH1 0x1 DUP2 ADD ISZERO PUSH2 0xB51 JUMPI PUSH1 0x0 PUSH2 0xAEA PUSH3 0x93A80 PUSH1 0xC MUL DUP8 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xAC7 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP2 SWAP1 PUSH2 0x21BF AND JUMP JUMPDEST SWAP1 POP DUP5 DUP2 GT ISZERO DUP1 ISZERO PUSH2 0xAFB JUMPI POP DUP3 DUP2 LT JUMPDEST ISZERO PUSH2 0xB47 JUMPI DUP4 DUP2 GT ISZERO PUSH2 0xB41 JUMPI PUSH2 0xB3A DUP7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xB17 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP9 SWAP1 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x219C JUMP JUMPDEST SWAP7 POP PUSH2 0xB47 JUMP JUMPDEST POP PUSH2 0xB51 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD PUSH2 0xAA6 JUMP JUMPDEST POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP1 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP4 JUMP JUMPDEST PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xBF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0xC0C CALLER DUP3 PUSH1 0x0 CALLER CALLER PUSH1 0x0 PUSH2 0x21E2 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xC40 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC51 PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3C7F JUMP JUMPDEST PUSH32 0x21C46A061CB9C101660F51F5C9FC9768C5F6E8CF5DEA8CA5CD03CB6DB13956F3 PUSH1 0x6 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH2 0xCAA SWAP3 SWAP2 SWAP1 PUSH2 0x3FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH3 0x93A80 DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP3 AND SWAP2 PUSH5 0xFFFFFFFFFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB PUSH1 0x1 PUSH1 0x30 SHL SWAP1 SWAP4 DIV DUP4 AND SWAP3 SWAP2 DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x28 SHL SWAP1 SWAP2 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xB57 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH5 0xFFFFFFFFFF AND PUSH2 0x2791 JUMP JUMPDEST PUSH2 0xD8A PUSH2 0x278D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD9B PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xDC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3C7F JUMP JUMPDEST PUSH2 0x1F4 DUP3 GT ISZERO PUSH2 0xDE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3B55 JUMP JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0xE04 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3D22 JUMP JUMPDEST PUSH1 0x14 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x15 SSTORE JUMP JUMPDEST PUSH2 0xE17 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE28 PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xE4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3C7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH5 0xFFFFFFFFFF AND PUSH2 0xE8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3CB4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP6 AND DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP4 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFA7 JUMPI TIMESTAMP DUP6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF43 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND GT PUSH2 0xF9A JUMPI PUSH2 0xF93 DUP6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF70 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP8 SWAP1 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x21BF JUMP JUMPDEST SWAP6 POP PUSH2 0xF9F JUMP JUMPDEST PUSH2 0xFA7 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xF2E JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xFBB PUSH3 0x93A80 PUSH2 0x96F TIMESTAMP DUP3 PUSH2 0x2133 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0xFE4 JUMPI POP DUP1 PUSH2 0xFE2 PUSH3 0x93A80 PUSH1 0xC MUL DUP8 PUSH1 0x1 DUP7 SUB DUP2 SLOAD DUP2 LT PUSH2 0xAC7 JUMPI INVALID JUMPDEST EQ JUMPDEST ISZERO PUSH2 0xFFE JUMPI PUSH2 0xFFB DUP6 PUSH1 0x1 DUP5 SUB DUP2 SLOAD DUP2 LT PUSH2 0xF70 JUMPI INVALID JUMPDEST SWAP6 POP JUMPDEST POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1049 PUSH3 0x93A80 PUSH2 0x96F PUSH3 0x93A80 PUSH1 0xC DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x1026 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP2 SWAP1 PUSH2 0x2133 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x105A DUP3 PUSH3 0x6EBE00 PUSH2 0x21BF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x106F PUSH3 0x93A80 PUSH2 0x96F TIMESTAMP DUP3 PUSH2 0x2133 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xC DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x107F JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x10A6 JUMPI PUSH1 0x0 NOT SWAP1 SWAP5 ADD SWAP4 JUMPDEST DUP5 JUMPDEST PUSH1 0x1 DUP2 ADD ISZERO PUSH2 0x1121 JUMPI PUSH1 0x0 PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10C0 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP5 LT PUSH2 0x10E9 JUMPI POP PUSH2 0x1121 JUMP JUMPDEST PUSH2 0x1115 PUSH1 0xC DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x10F9 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH2 0x219C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x0 NOT ADD PUSH2 0x10A8 JUMP JUMPDEST POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x114D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x1164 CALLER DUP5 DUP5 DUP5 CALLER PUSH1 0x0 PUSH2 0x21E2 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP JUMP JUMPDEST PUSH2 0x1176 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1187 PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x11AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3C7F JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1219 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH2 0x125D SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND PUSH1 0x0 PUSH2 0x279D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH2 0x127C SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND PUSH1 0x0 NOT PUSH2 0x279D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x12A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0xC0C DUP2 PUSH1 0x0 DUP1 DUP5 CALLER PUSH2 0x12CA PUSH1 0x15 SLOAD PUSH3 0x93A80 PUSH2 0x2165 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x21E2 JUMP JUMPDEST PUSH2 0x12D7 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x12E8 PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x130E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3C7F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x133C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3CEB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH5 0xFFFFFFFFFF AND ISZERO PUSH2 0x137C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3E1F JUMP JUMPDEST PUSH2 0x1398 PUSH2 0x1387 PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 PUSH2 0x289C JUMP JUMPDEST PUSH32 0x8C1256B8896378CD5044F80C202F9772B9D77DC85C8A6EB51967210B09BFAA28 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x13C9 SWAP3 SWAP2 SWAP1 PUSH2 0x38F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x18 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x951 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x926 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x951 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1459 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x146A PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1490 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3C7F JUMP JUMPDEST PUSH2 0x5DC DUP4 LT PUSH2 0x14B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3B2B JUMP JUMPDEST PUSH2 0x7530 DUP3 LT PUSH2 0x14D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3B55 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x14F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3BA2 JUMP JUMPDEST PUSH1 0x12 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x13 SSTORE PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x154A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP4 POP PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV AND SWAP2 POP PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP4 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH32 0x81955A0A11E65EAC625C29E8882660BAE4E165A75D72780094ACAE8ECE9A29EE DUP1 SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP3 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x1754 JUMPI PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x15E1 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH2 0x1609 PUSH2 0x1604 DUP3 PUSH2 0x28BB JUMP JUMPDEST PUSH2 0x29CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x28 SHL MUL PUSH1 0x1 PUSH1 0x28 SHL PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SLOAD PUSH2 0x166F SWAP1 PUSH2 0x166A SWAP1 PUSH5 0xFFFFFFFFFF PUSH2 0x100 SWAP1 SWAP2 DIV AND PUSH2 0x2791 JUMP JUMPDEST PUSH2 0x29F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE DUP6 AND ISZERO PUSH2 0x174B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x16EC SWAP1 DUP7 SWAP1 DUP4 SWAP1 PUSH1 0xFF AND PUSH2 0x16E5 JUMPI DUP7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x16E7 JUMP JUMPDEST DUP6 JUMPDEST PUSH2 0x2A1E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x5 DUP2 MSTORE DUP5 DUP3 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP3 DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE DUP5 DUP3 KECCAK256 SWAP4 DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x28 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP1 SSTORE JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x15C8 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x179A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3C57 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x17BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3C34 JUMP JUMPDEST PUSH2 0x17C4 DUP4 DUP4 PUSH2 0x2A96 JUMP JUMPDEST PUSH2 0x17D9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER ADDRESS DUP6 PUSH2 0x2BC9 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xAC24935FD910BC682B5CCB1A07B718CADF8CF2F6D1404C4F3DDC3662DAE40E29 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1812 SWAP2 SWAP1 PUSH2 0x3FA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xB57 SWAP1 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND PUSH3 0x93A80 PUSH2 0x2165 JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x1881 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x1A2F JUMPI PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x18CD JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH2 0x18F0 PUSH2 0x1604 DUP3 PUSH2 0x28BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x28 SHL MUL PUSH1 0x1 PUSH1 0x28 SHL PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SLOAD PUSH2 0x1951 SWAP1 PUSH2 0x166A SWAP1 PUSH5 0xFFFFFFFFFF PUSH2 0x100 SWAP1 SWAP2 DIV AND PUSH2 0x2791 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE DUP6 AND ISZERO PUSH2 0x1A26 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x19C7 SWAP1 DUP7 SWAP1 DUP4 SWAP1 PUSH1 0xFF AND PUSH2 0x16E5 JUMPI DUP7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x16E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x5 DUP2 MSTORE DUP5 DUP3 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP3 DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE DUP5 DUP3 KECCAK256 SWAP4 DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x28 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP1 SSTORE JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x18B4 JUMP JUMPDEST POP POP POP PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x1164 JUMPI PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1A4E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP5 MSTORE PUSH1 0x9 DUP4 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP2 SWAP1 SWAP3 AND DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 ISZERO PUSH2 0x1B97 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x1ABD DUP3 PUSH1 0xA PUSH2 0x2133 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1ACC DUP3 PUSH1 0x9 PUSH2 0x2165 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AE2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP9 DUP5 PUSH2 0x289C JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE2AB691D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xE2AB691D SWAP2 PUSH2 0x1B17 SWAP2 DUP12 SWAP2 DUP7 SWAP2 PUSH1 0x4 ADD PUSH2 0x390B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x540798DF468D7B23D11F156FDB954CB19AD414D150722A7B6D55BA369DEA792E DUP6 PUSH1 0x40 MLOAD PUSH2 0x1B8C SWAP2 SWAP1 PUSH2 0x3FA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x1A35 JUMP JUMPDEST PUSH2 0x127C PUSH2 0x2BF0 JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1BB6 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP2 AND SWAP2 POP PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP3 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1BEC PUSH2 0x278D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1BFD PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1C23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3C7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH5 0xFFFFFFFFFF AND ISZERO PUSH2 0x1C50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 DUP6 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND TIMESTAMP PUSH5 0xFFFFFFFFFF AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SLOAD PUSH6 0xFFFFFFFFFF00 NOT AND PUSH2 0x100 SWAP1 SWAP2 MUL OR PUSH1 0xFF NOT SWAP1 DUP2 AND SWAP7 ISZERO ISZERO SWAP7 SWAP1 SWAP7 OR SWAP1 SSTORE PUSH1 0x7 DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP6 SWAP1 SWAP7 AND DUP3 MSTORE SWAP4 SWAP1 SWAP4 MSTORE SWAP3 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x60 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x1D25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1D5F JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1D4C PUSH2 0x3649 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1D44 JUMPI SWAP1 POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1E42 JUMPI PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1DA8 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1DD5 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP1 MSTORE SWAP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1E1F SWAP1 DUP8 SWAP1 DUP4 SWAP1 PUSH1 0xFF AND PUSH2 0x16E5 JUMPI DUP7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x16E7 JUMP JUMPDEST DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1E2B JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x1D90 JUMP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x1E6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE SLOAD PUSH2 0x1E8A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP6 PUSH2 0x2BC9 JUMP JUMPDEST PUSH2 0x1164 DUP4 DUP4 DUP4 PUSH2 0x2D58 JUMP JUMPDEST PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1EA3 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1EB4 PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1EDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3C7F JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH32 0xEE4EC82B92F0E1FE230E6604A4752FA407A28069F106DC41E53EDC28C4BC504E SWAP2 PUSH2 0x1F19 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 SWAP1 PUSH2 0x38B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB57 DUP3 PUSH2 0x28BB JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1F82 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F93 PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1FB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3C7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1FDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3A95 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH1 0x0 NOT ADD DUP2 PUSH2 0x2057 PUSH3 0x93A80 PUSH2 0x96F DUP7 DUP3 PUSH2 0x2133 JUMP JUMPDEST SWAP4 POP PUSH1 0x0 JUMPDEST PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x20DD JUMPI DUP3 DUP3 LT PUSH2 0x2071 JUMPI PUSH2 0x20DD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 DUP5 DUP7 ADD ADD DIV SWAP1 POP PUSH1 0x0 PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x208D JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP DUP7 DUP2 EQ ISZERO PUSH2 0x20BC JUMPI POP SWAP4 POP PUSH2 0xBC3 SWAP3 POP POP POP JUMP JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x20CC JUMPI DUP2 SWAP4 POP PUSH2 0x20D3 JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP5 POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x205C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x20ED PUSH2 0x278D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x20FE PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2124 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3C7F JUMP JUMPDEST PUSH1 0x16 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x2154 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3A5E JUMP JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x215D JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 PUSH2 0x2180 JUMPI POP POP DUP1 DUP3 MUL DUP3 DUP3 DUP3 DUP2 PUSH2 0x217D JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0xB57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3EE3 JUMP JUMPDEST DUP2 DUP2 ADD DUP2 DUP2 LT ISZERO PUSH2 0xB57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3BCB JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0xB57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x39F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x238C JUMPI PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x222A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH2 0x224D PUSH2 0x1604 DUP3 PUSH2 0x28BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x28 SHL MUL PUSH1 0x1 PUSH1 0x28 SHL PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SLOAD PUSH2 0x22AE SWAP1 PUSH2 0x166A SWAP1 PUSH5 0xFFFFFFFFFF PUSH2 0x100 SWAP1 SWAP2 DIV AND PUSH2 0x2791 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE DUP6 AND ISZERO PUSH2 0x2383 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2324 SWAP1 DUP7 SWAP1 DUP4 SWAP1 PUSH1 0xFF AND PUSH2 0x16E5 JUMPI DUP7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x16E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x5 DUP2 MSTORE DUP5 DUP3 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP3 DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE DUP5 DUP3 KECCAK256 SWAP4 DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x28 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP1 SSTORE JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x2211 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xD SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP2 SLOAD PUSH1 0x16 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 DUP3 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x23FD JUMPI POP PUSH2 0x23D2 TIMESTAMP DUP10 PUSH2 0x21BF JUMP JUMPDEST DUP7 PUSH1 0x1 DUP5 SUB DUP2 SLOAD DUP2 LT PUSH2 0x23E1 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x2474 JUMPI DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP6 POP PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP2 DIV AND SWAP3 POP PUSH2 0x2425 DUP3 PUSH2 0x3329 JUMP JUMPDEST DUP6 SLOAD PUSH4 0xFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xE0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP1 SWAP2 AND OR DUP6 SSTORE DUP8 ISZERO PUSH2 0x246F JUMPI PUSH2 0x246C DUP9 DUP8 PUSH1 0x1 DUP6 SUB DUP2 SLOAD DUP2 LT PUSH2 0x245D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH2 0x334F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x257B JUMP JUMPDEST DUP5 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x255B JUMPI PUSH2 0x2497 TIMESTAMP DUP12 PUSH2 0x21BF JUMP JUMPDEST DUP9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x24A3 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x24C7 JUMPI PUSH2 0x255B JUMP JUMPDEST PUSH2 0x24F4 DUP9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x24D6 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP9 DUP2 AND SWAP2 AND PUSH2 0x33E5 JUMP JUMPDEST SWAP6 POP PUSH2 0x252A DUP9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2505 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH2 0x33E5 JUMP JUMPDEST SWAP5 POP DUP10 ISZERO PUSH2 0x254F JUMPI PUSH2 0x254C PUSH2 0x2545 DUP12 DUP11 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x245D JUMPI INVALID JUMPDEST DUP5 SWAP1 PUSH2 0x219C JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH1 0x1 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2485 JUMP JUMPDEST POP DUP6 SLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xE0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP1 SWAP2 AND OR DUP6 SSTORE JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND GT PUSH2 0x25A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3B7C JUMP JUMPDEST DUP5 SLOAD PUSH2 0x25B9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP6 PUSH2 0x3414 JUMP JUMPDEST DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 DUP3 AND OR DUP1 DUP8 SSTORE PUSH2 0x25E7 SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP2 DIV AND DUP5 PUSH2 0x3414 JUMP JUMPDEST DUP6 SLOAD PUSH1 0x1 PUSH1 0x70 SHL PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x70 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP3 DUP4 AND MUL OR DUP7 SSTORE PUSH1 0xA SLOAD PUSH2 0x2618 SWAP2 DUP7 AND PUSH2 0x21BF JUMP JUMPDEST PUSH1 0xA SSTORE PUSH1 0xB SLOAD PUSH2 0x2631 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP6 AND PUSH2 0x21BF JUMP JUMPDEST PUSH1 0xB SSTORE DUP1 ISZERO PUSH2 0x26BC JUMPI PUSH2 0x2656 PUSH2 0x2646 DUP3 PUSH2 0x3443 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP7 AND SWAP1 PUSH2 0x3414 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP5 POP PUSH2 0x2670 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 DUP4 PUSH2 0x289C JUMP JUMPDEST DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x7E7FF29ED04CFB223BC9B02606F69520517C117EE82C9158ED2D96323C1EF385 DUP4 PUSH1 0x40 MLOAD PUSH2 0x26B3 SWAP2 SWAP1 PUSH2 0x3FA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP12 ISZERO PUSH2 0x271C JUMPI PUSH2 0x26D6 DUP11 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP14 PUSH2 0x2D58 JUMP JUMPDEST DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xE2D155D9D74DECC198A9A9B4F5BDDB24EE0842EE745C9CE57E3573B971E50D9D DUP6 PUSH1 0x40 MLOAD PUSH2 0x270F SWAP2 SWAP1 PUSH2 0x3F4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x277E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x273C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH2 0x289C JUMP JUMPDEST DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2775 SWAP2 SWAP1 PUSH2 0x3F4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB57 TIMESTAMP DUP4 PUSH2 0x346C JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x2825 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH2 0x27D3 SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x38B4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x27EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x27FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2823 SWAP2 SWAP1 PUSH2 0x37FB JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x2841 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3E8D JUMP JUMPDEST PUSH2 0x2897 DUP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2860 SWAP3 SWAP2 SWAP1 PUSH2 0x38F2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x3482 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2897 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2860 SWAP3 SWAP2 SWAP1 PUSH2 0x38F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x28FA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x28 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND PUSH2 0xBC3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB57 SWAP1 PUSH2 0x2998 SWAP1 PUSH1 0xFF AND PUSH2 0x292A JUMPI PUSH1 0xA SLOAD PUSH2 0x292E JUMP JUMPDEST PUSH1 0xB SLOAD JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH2 0x2992 SWAP2 PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x96F SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB PUSH1 0x1 PUSH1 0x30 SHL DUP3 DIV AND SWAP2 DUP4 SWAP2 PUSH5 0xFFFFFFFFFF SWAP2 DUP3 AND SWAP2 PUSH2 0x298C SWAP2 PUSH2 0x100 SWAP1 DIV AND PUSH2 0x2791 JUMP JUMPDEST SWAP1 PUSH2 0x21BF JUMP JUMPDEST SWAP1 PUSH2 0x2133 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x28 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP1 PUSH2 0x219C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP3 GT ISZERO PUSH2 0x29F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3A27 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH5 0xFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x29F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3F15 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD SWAP4 DUP4 MSTORE PUSH1 0x8 DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 DUP4 MSTORE SWAP4 SWAP1 MSTORE SWAP2 DUP3 KECCAK256 SLOAD PUSH2 0x2A8C SWAP2 SWAP1 PUSH2 0x2A86 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x2992 SWAP1 PUSH2 0x2A7F SWAP1 PUSH2 0x298C DUP11 PUSH2 0x28BB JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x2165 JUMP JUMPDEST SWAP1 PUSH2 0x219C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH5 0xFFFFFFFFFF AND TIMESTAMP LT PUSH2 0x2AF8 JUMPI PUSH2 0x2AD2 PUSH2 0x1604 DUP4 PUSH3 0x93A80 PUSH2 0x2133 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x30 SHL MUL PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH2 0x2B70 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x2B13 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH5 0xFFFFFFFFFF AND TIMESTAMP PUSH2 0x21BF JUMP JUMPDEST DUP3 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x2B36 SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND PUSH2 0x2165 JUMP JUMPDEST SWAP1 POP PUSH2 0x2B4C PUSH2 0x1604 PUSH3 0x93A80 PUSH2 0x2992 DUP8 DUP6 PUSH2 0x219C JUMP JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x30 SHL MUL PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP2 AND OR DUP4 SSTORE POP POP JUMPDEST PUSH2 0x2B79 TIMESTAMP PUSH2 0x29F7 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x2BA7 PUSH2 0x166A TIMESTAMP PUSH3 0x93A80 PUSH2 0x219C JUMP JUMPDEST DUP2 SLOAD PUSH5 0xFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH2 0x100 MUL PUSH6 0xFFFFFFFFFF00 NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x2BEA DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2860 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x38CE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C03 PUSH3 0x93A80 PUSH2 0x96F TIMESTAMP DUP3 PUSH2 0x2133 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD SWAP2 SWAP3 POP DUP3 SWAP1 PUSH1 0x0 NOT DUP4 ADD DUP4 DUP2 LT PUSH2 0x2C1A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x2D54 JUMPI JUMPDEST PUSH1 0xC DUP1 SLOAD DUP4 SWAP2 SWAP1 PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0x2C4F JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND EQ PUSH2 0x2D30 JUMPI PUSH1 0x0 PUSH2 0x2CAE PUSH3 0x93A80 PUSH1 0xC PUSH1 0x1 PUSH1 0xC DUP1 SLOAD SWAP1 POP SUB DUP2 SLOAD DUP2 LT PUSH2 0x2C8B JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP2 SWAP1 PUSH2 0x219C AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH4 0xFFFFFFFF SWAP3 DUP4 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0xC DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP3 MSTORE SWAP2 MLOAD PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP3 MLOAD SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0xE0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP2 DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR AND OR SWAP1 SSTORE POP PUSH2 0x2C3A JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x11 SLOAD EQ PUSH2 0x2D42 JUMPI PUSH1 0x13 SLOAD PUSH1 0x11 SSTORE JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x10 SLOAD EQ PUSH2 0x2D54 JUMPI PUSH1 0x12 SLOAD PUSH1 0x10 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x2F02 JUMPI PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2DA0 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH2 0x2DC3 PUSH2 0x1604 DUP3 PUSH2 0x28BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x28 SHL MUL PUSH1 0x1 PUSH1 0x28 SHL PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SLOAD PUSH2 0x2E24 SWAP1 PUSH2 0x166A SWAP1 PUSH5 0xFFFFFFFFFF PUSH2 0x100 SWAP1 SWAP2 DIV AND PUSH2 0x2791 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE DUP6 AND ISZERO PUSH2 0x2EF9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2E9A SWAP1 DUP7 SWAP1 DUP4 SWAP1 PUSH1 0xFF AND PUSH2 0x16E5 JUMPI DUP7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x16E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x5 DUP2 MSTORE DUP5 DUP3 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP3 DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE DUP5 DUP3 KECCAK256 SWAP4 DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x28 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP1 SSTORE JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x2D87 JUMP JUMPDEST POP POP POP PUSH1 0x0 DUP4 GT PUSH2 0x2F25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3ADB JUMP JUMPDEST PUSH1 0x10 SLOAD DUP3 GT ISZERO PUSH2 0x2F47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3B03 JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2F6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3D45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x2F8A PUSH2 0x2BF0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F9C PUSH2 0x2710 PUSH2 0x2992 DUP8 DUP8 PUSH2 0x2165 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2FC5 PUSH1 0x10 SLOAD PUSH1 0x0 EQ PUSH2 0x2FB5 JUMPI PUSH1 0x10 SLOAD PUSH2 0x2FB8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x2992 SWAP1 DUP9 PUSH2 0x2165 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2FDB PUSH2 0x2FD6 DUP9 DUP6 PUSH2 0x21BF JUMP JUMPDEST PUSH2 0x3443 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2FFC PUSH2 0x2FD6 PUSH2 0x2FF5 PUSH2 0x2710 PUSH2 0x2992 DUP13 DUP9 PUSH2 0x2165 JUMP JUMPDEST DUP11 SWAP1 PUSH2 0x219C JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH2 0x3014 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP4 PUSH2 0x33E5 JUMP JUMPDEST DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 DUP3 AND OR DUP1 DUP8 SSTORE PUSH2 0x3042 SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP2 DIV AND DUP3 PUSH2 0x33E5 JUMP JUMPDEST DUP6 SLOAD PUSH1 0x1 PUSH1 0x70 SHL PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x70 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP3 DUP4 AND MUL OR DUP7 SSTORE PUSH1 0xA SLOAD PUSH2 0x3073 SWAP2 DUP5 AND PUSH2 0x219C JUMP JUMPDEST PUSH1 0xA SSTORE PUSH1 0xB SLOAD PUSH2 0x308C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP4 AND PUSH2 0x219C JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0x0 PUSH2 0x30A2 PUSH3 0x93A80 PUSH2 0x96F TIMESTAMP DUP3 PUSH2 0x2133 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x30B3 DUP3 PUSH3 0x6EBE00 PUSH2 0x219C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 ISZERO DUP1 PUSH2 0x311D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 SWAP2 SWAP1 PUSH1 0x0 NOT DUP5 ADD SWAP1 DUP2 LT PUSH2 0x3102 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND LT JUMPDEST ISZERO PUSH2 0x31CC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP12 AND DUP3 MSTORE DUP10 DUP2 AND DUP3 DUP7 ADD SWAP1 DUP2 MSTORE PUSH4 0xFFFFFFFF DUP1 DUP11 AND SWAP6 DUP5 ADD SWAP6 DUP7 MSTORE DUP5 SLOAD PUSH1 0x1 DUP2 ADD DUP7 SSTORE SWAP5 DUP9 MSTORE SWAP6 SWAP1 SWAP7 KECCAK256 SWAP2 MLOAD SWAP2 SWAP1 SWAP3 ADD DUP1 SLOAD SWAP6 MLOAD SWAP4 MLOAD SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0xE0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP4 DUP4 AND PUSH1 0x1 PUSH1 0x70 SHL MUL PUSH1 0x1 PUSH1 0x70 SHL PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP3 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB NOT SWAP1 SWAP7 AND SWAP6 SWAP1 SWAP6 OR AND OR AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x326C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT DUP5 ADD SWAP1 DUP2 LT PUSH2 0x31F4 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH2 0x3217 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP8 PUSH2 0x33E5 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 DUP3 AND OR DUP1 DUP4 SSTORE PUSH2 0x3245 SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP2 DIV AND DUP7 PUSH2 0x33E5 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x70 SHL MUL PUSH1 0x1 PUSH1 0x70 SHL PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0x3282 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH2 0x32AE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH2 0x3511 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR DUP2 SSTORE DUP8 ISZERO PUSH2 0x32EC JUMPI PUSH1 0xF SLOAD PUSH1 0x2 SLOAD PUSH2 0x32EC SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP11 PUSH2 0x289C JUMP JUMPDEST DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED DUP14 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x2775 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3FB1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 GT ISZERO PUSH2 0x29F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3D9E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3367 PUSH3 0x93A80 PUSH2 0x96F DUP2 PUSH2 0x2992 TIMESTAMP DUP10 PUSH2 0x21BF JUMP JUMPDEST DUP4 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x3394 SWAP1 PUSH3 0x93A80 SWAP1 PUSH2 0x2992 SWAP1 DUP6 SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP1 PUSH2 0x21BF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x33BB PUSH2 0x33B3 DUP4 PUSH1 0x1 ADD PUSH1 0x14 SLOAD PUSH2 0x2165 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x346C JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH2 0x33DB SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x2992 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP5 PUSH2 0x2165 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP4 AND SWAP1 DUP3 AND LT ISZERO PUSH2 0xB57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3BCB JUMP JUMPDEST DUP1 DUP3 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP5 AND SWAP1 DUP3 AND GT ISZERO PUSH2 0xB57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x39F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP3 GT ISZERO PUSH2 0x29F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3BFD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x347B JUMPI DUP2 PUSH2 0x2A8F JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x34D7 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3540 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2897 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x34F5 SWAP2 SWAP1 PUSH2 0x3789 JUMP JUMPDEST PUSH2 0x2897 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3DD5 JUMP JUMPDEST DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP1 DUP4 AND SWAP1 DUP3 AND LT ISZERO PUSH2 0xB57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3BCB JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2A8C DUP5 DUP5 PUSH1 0x0 DUP6 DUP6 PUSH2 0x3554 DUP6 PUSH2 0x35EA JUMP JUMPDEST PUSH2 0x3570 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP1 PUSH2 0x3D67 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x358D SWAP2 SWAP1 PUSH2 0x3884 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x35CA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x35CF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x35DF DUP3 DUP3 DUP7 PUSH2 0x35F0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x35FF JUMPI POP DUP2 PUSH2 0x2A8F JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x360F JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEB SWAP2 SWAP1 PUSH2 0x39C5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3688 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2A8F DUP4 DUP4 PUSH2 0x3660 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x36A4 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x36AE DUP5 DUP5 PUSH2 0x3660 JUMP JUMPDEST SWAP2 POP PUSH2 0x36BD DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x3660 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x36DA JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x36E5 DUP2 PUSH2 0x409A JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x36F5 DUP2 PUSH2 0x409A JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x3705 DUP2 PUSH2 0x40B2 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3722 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x372C DUP5 DUP5 PUSH2 0x3660 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x374E JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x3758 DUP6 DUP6 PUSH2 0x3660 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x377E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2A8F DUP2 PUSH2 0x40B2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x379A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2A8F DUP2 PUSH2 0x40B2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x37B9 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x37C4 DUP2 PUSH2 0x40B2 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x37DA DUP6 PUSH1 0x40 DUP7 ADD PUSH2 0x3660 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37F4 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x380C JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3825 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x36BD DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x3660 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3848 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x386B JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x3705 DUP2 PUSH2 0x409A JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3896 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x406E JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3977 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3949 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 ISZERO ISZERO DUP6 MSTORE PUSH5 0xFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB SWAP3 DUP4 AND PUSH1 0x40 DUP7 ADD MSTORE SWAP3 AND PUSH1 0x60 DUP5 ADD MSTORE AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x39E4 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x406E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x426F72696E674D6174683A20556E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x426F72696E674D6174683A2075696E74323038204F766572666C6F7700000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x426F72696E674D6174683A206469766973696F6E206279207A65726F00000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x43616E6E6F74207374616B65203 PUSH1 0x94 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x1BDD995C881B585E081CDC195B99 PUSH1 0x92 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x1BDD995C881B585E081C185E5B595B9D PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x6F766572206D61782072617465 PUSH1 0x98 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x6E6F20657870206C6F636B73 PUSH1 0xA0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x696E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH24 0x426F72696E674D6174683A20416464204F766572666C6F77 PUSH1 0x40 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x426F72696E674D6174683A2075696E74313132204F766572666C6F7700000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x139BC81C995DD85C99 PUSH1 0xBA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x1B9BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x7265776172647320746F6B656E20646F6573206E6F7420657869737400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207769746864726177207374616B696E6720746F6B656E000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x6D696E2064656C6179 PUSH1 0xB8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x8 SWAP1 DUP3 ADD MSTORE PUSH8 0x39B43ABA3237BBB7 PUSH1 0xC1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x426F72696E674D6174683A2075696E743332204F766572666C6F770000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742077697468647261772072657761726420746F6B656E00000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x36 SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x40 DUP3 ADD MSTORE PUSH22 0x20746F206E6F6E2D7A65726F20616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH24 0x426F72696E674D6174683A204D756C204F766572666C6F77 PUSH1 0x40 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x426F72696E674D6174683A2075696E743430204F766572666C6F770000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH4 0xFFFFFFFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD DUP7 DUP4 MSTORE PUSH1 0x20 DUP7 DUP2 DUP6 ADD MSTORE PUSH1 0x40 DUP7 DUP2 DUP7 ADD MSTORE PUSH1 0x60 PUSH1 0x80 DUP2 DUP8 ADD MSTORE DUP4 DUP8 MLOAD DUP1 DUP7 MSTORE PUSH1 0xA0 DUP9 ADD SWAP2 POP DUP5 DUP10 ADD SWAP6 POP DUP7 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x404F JUMPI DUP7 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE DUP8 DUP3 ADD MLOAD AND DUP8 DUP6 ADD MSTORE DUP6 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP6 DUP5 ADD MSTORE SWAP6 DUP6 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x4010 JUMP JUMPDEST POP SWAP1 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4089 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4071 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2BEA JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x40AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x40AF JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE PUSH16 0x85E4E8B536D3CE0E4215A41874773C09 PUSH21 0x5124BF1576425660C9CA944EF164736F6C63430006 0xC STOP CALLER ","sourceMap":"763:25309:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1948:59;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13182:826;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;3647:75::-;;;:::i;:::-;;;;;;;:::i;10997:681::-;;;:::i;9774:1138::-;;;;;;:::i;:::-;;:::i;2477:44::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;2665:32::-;;;:::i;8216:119::-;;;;;;:::i;:::-;;:::i;21478:147::-;;;;;;:::i;:::-;;:::i;:::-;;3568:75;;;:::i;:::-;;;;;;;:::i;5197:158::-;;;;;;:::i;:::-;;:::i;1851:48::-;;;:::i;2075:70::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1665:44::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;1772:29::-;;;:::i;8423:119::-;;;;;;:::i;:::-;;:::i;7030:170::-;;;;;;:::i;:::-;;:::i;5382:278::-;;;;;;:::i;:::-;;:::i;4454:291::-;;;;;;:::i;:::-;;:::i;2186:77::-;;;;;;:::i;:::-;;:::i;8660:1014::-;;;;;;:::i;:::-;;:::i;11752:745::-;;;;;;:::i;:::-;;:::i;21176:216::-;;;;;;:::i;:::-;;:::i;1717:145:3:-;;;:::i;1550:26:0:-;;;:::i;:::-;;;;;;;:::i;2389:28::-;;;:::i;1632:29::-;;;;;;:::i;:::-;;:::i;2701:42::-;;;:::i;14033:85::-;;;:::i;5799:178::-;;;:::i;21629:244::-;;;;;;:::i;:::-;;:::i;24056:381::-;;;;;;:::i;:::-;;:::i;1085:85:3:-;;;:::i;3726:79:0:-;;;:::i;2787:43::-;;;:::i;2850:39::-;;;:::i;4774:419::-;;;;;;:::i;:::-;;:::i;2592:27::-;;;:::i;2525:52::-;;;;;;:::i;:::-;;:::i;2623:38::-;;;:::i;2747:36::-;;;:::i;23190:557::-;;;;;;:::i;:::-;;:::i;7335:169::-;;;;;;:::i;:::-;;:::i;2950:30::-;;;:::i;21908:626::-;;;;;;:::i;:::-;;:::i;14172:65::-;;;:::i;2421:21::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2358:27::-;;;:::i;3917:470::-;;;;;;:::i;:::-;;:::i;7585:541::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;15234:257::-;;;;;;:::i;:::-;;:::i;2893:39::-;;;:::i;23751:197::-;;;;;;:::i;:::-;;:::i;2267:62::-;;;;;;:::i;:::-;;:::i;7204:127::-;;;;;;:::i;:::-;;:::i;1580:35::-;;;:::i;2011:240:3:-;;;;;;:::i;:::-;;:::i;12544:589:0:-;;;;;;:::i;:::-;;:::i;5691:67::-;;;:::i;1948:59::-;1987:20;1948:59;:::o;13182:826::-;-1:-1:-1;;;;;13410:16:0;;13263:13;13410:16;;;:9;:16;;;;;;;;13463:8;:15;;;;;13510:27;;13263:13;;;;13332:31;;-1:-1:-1;;;13510:27:0;;;;13263:13;13510:27;13560:381;13598:12;;13594:16;;13560:381;;;13651:15;13629:5;13635:1;13629:8;;;;;;;;;;;;;;;;;:19;-1:-1:-1;;;13629:19:0;;;;:37;13625:310;;;13682:8;13678:85;;13735:12;;:16;;;13715:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;13704:48;;13678:85;13788:5;13794:1;13788:8;;;;;;;;;;;;;;;;;13772:24;;;;;;;;13788:8;;;;13772:24;-1:-1:-1;;;;;13772:24:0;;;;;-1:-1:-1;;;13772:24:0;;;;;;;;;;;-1:-1:-1;;;13772:24:0;;;;;;;;;;;:13;;:8;;13781:3;;13772:13;;;;;;;;;;;:24;;;;13806:5;;;;;;;13830:27;13841:5;13847:1;13841:8;;;;;;;;;;;;;;;;;:15;13830:6;;-1:-1:-1;;;;;13841:15:0;13830:10;:27::i;:::-;13821:36;;13625:310;;;13895:31;13910:5;13916:1;13910:8;;;;;;;;;;;;;;;;;:15;13895:10;;-1:-1:-1;;;;;13910:15:0;13895:14;:31::i;:::-;13882:44;;13625:310;13612:3;;13560:381;;;-1:-1:-1;;13954:18:0;;-1:-1:-1;;;;;13954:18:0;;-1:-1:-1;;;13182:826:0;;;;;:::o;3647:75::-;3712:5;3705:12;;;;;;;;-1:-1:-1;;3705:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3684:13;;3705:12;;3712:5;;3705:12;;3712:5;3705:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3647:75;:::o;10997:681::-;11043:14;;11088:57;1893:6;11088:36;:15;1893:6;11088:19;:36::i;:::-;:40;;:57::i;:::-;11065:80;-1:-1:-1;11151:19:0;11173:30;11065:80;1987:20;11173:16;:30::i;:::-;11230:6;:13;;11151:52;;-1:-1:-1;11338:12:0;;-1:-1:-1;;11313:14:0;;11306:22;;;;;;;;;;;;;;;;:27;-1:-1:-1;;;11306:27:0;;;;11298:52;11294:85;;;-1:-1:-1;;11360:12:0;11294:85;-1:-1:-1;;11475:14:0;;11458:196;11495:1;11491:5;;:10;11458:196;;11516:15;11534:6;11541:1;11534:9;;;;;;;;;;;;;;;;;11563:6;;11534:9;;-1:-1:-1;;;;11563:6:0;;;;-1:-1:-1;;11551:60:0;;11597:5;;;11551:60;11638:8;;11627:20;;:6;;-1:-1:-1;;;;;11638:8:0;11627:10;:20::i;:::-;11618:29;-1:-1:-1;;;;11503:3:0;11458:196;;;;11660:13;;;10997:681;:::o;9774:1138::-;-1:-1:-1;;;;;9908:16:0;;9854:14;9908:16;;;:9;:16;;;;;9992:6;:14;;9854;;9992:6;9999;;9992:14;;;;;;;;;;;;;;:19;;-1:-1:-1;;;9992:19:0;;;;;;-1:-1:-1;10088:27:0;;9992:19;;1987:20;;10088:13;:27;:::i;:::-;10066:49;-1:-1:-1;10157:20:0;10180:57;1893:6;10180:36;:15;1893:6;10180:19;:36::i;:57::-;10404:12;;10157:80;;-1:-1:-1;;;10404:16:0;10387:501;10426:1;10422:5;;:10;10387:501;;10447:17;10467:46;1893:6;2005:2;1987:20;10475:5;10481:1;10475:8;;;;;;;;;;;;;;;;;:19;;-1:-1:-1;;;10475:19:0;;;;;;10467:46;:32;:46;:::i;:::-;10447:66;;10654:9;10641;:22;;:50;;;;;10679:12;10667:9;:24;10641:50;10637:245;;;10719:11;10707:9;:23;10703:171;;;10753:28;10764:5;10770:1;10764:8;;;;;;;;;;;;;;;;;:16;10753:6;;-1:-1:-1;;;10764:16:0;;-1:-1:-1;;;;;10764:16:0;10753:10;:28::i;:::-;10744:37;;10703:171;;;10858:5;;;10703:171;-1:-1:-1;;;10434:3:0;10387:501;;;;10894:13;;;;9774:1138;;;;;:::o;2477:44::-;;;;;;;;;;;;-1:-1:-1;;;;;2477:44:0;;;;-1:-1:-1;;;2477:44:0;;;;;;-1:-1:-1;;;2477:44:0;;;;;:::o;2665:32::-;;;;:::o;8216:119::-;-1:-1:-1;;;;;8307:15:0;;8278:14;8307:15;;;:8;:15;;;;;:23;-1:-1:-1;;;8307:23:0;;-1:-1:-1;;;;;8307:23:0;8216:119;;;;:::o;21478:147::-;1688:1:10;2277:7;;:19;;2269:63;;;;-1:-1:-1;;;2269:63:10;;;;;;;:::i;:::-;;;;;;;;;1688:1;2407:7;:18;;;;21549:71:0::1;21570:10;21582:7;21591:1;21594:10;21606;21618:1;21549:20;:71::i;:::-;-1:-1:-1::0;1645:1:10;2580:7;:22;21478:147:0:o;3568:75::-;3629:9;3568:75;:::o;5197:158::-;1308:12:3;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:3;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:3;;1289:68;;;;-1:-1:-1;;;1289:68:3;;;;;;;:::i;:::-;5272:47:0::1;5294:14;;5310:8;5272:47;;;;;;;:::i;:::-;;;;;;;;5325:14;:25:::0;5197:158::o;1851:48::-;1893:6;1851:48;:::o;2075:70::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1665:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;1665:44:0;;;;;;;;;;-1:-1:-1;;;1665:44:0;;;;;:::o;1772:29::-;;;;:::o;8423:119::-;-1:-1:-1;;;;;8515:15:0;8486:14;8515:15;;;:8;:15;;;;;:22;-1:-1:-1;;;;;8515:22:0;;8423:119::o;7030:170::-;-1:-1:-1;;;;;7156:25:0;;7108:7;7156:25;;;:10;:25;;;;;:38;7130:65;;7156:38;;;;;7130:25;:65::i;5382:278::-;1308:12:3;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:3;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:3;;1289:68;;;;-1:-1:-1;;;1289:68:3;;;;;;;:::i;:::-;5481:3:0::1;5472:5;:12;;5464:38;;;;-1:-1:-1::0;;;5464:38:0::1;;;;;;;:::i;:::-;5545:1;5535:6;:11;;5527:33;;;;-1:-1:-1::0;;;5527:33:0::1;;;;;;;:::i;:::-;5594:18;:26:::0;;;;5626:20:::1;:29:::0;5382:278::o;4454:291::-;1308:12:3;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:3;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:3;;1289:68;;;;-1:-1:-1;;;1289:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;4598:25:0;::::1;4641:1;4598:25:::0;;;:10:::1;:25;::::0;;;;:40:::1;;::::0;::::1;;4590:85;;;;-1:-1:-1::0;;;4590:85:0::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4681:33:0;;::::1;;::::0;;;:18:::1;:33;::::0;;;;;;;:47;;;::::1;::::0;;;;;;;;;:59;;-1:-1:-1;;4681:59:0::1;::::0;::::1;;::::0;;;::::1;::::0;;4454:291::o;2186:77::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;8660:1014::-;-1:-1:-1;;;;;8771:16:0;;8717:14;8771:16;;;:9;:16;;;;;;;;8824:8;:15;;;;;;8871:27;;9006:12;;-1:-1:-1;;;8954:23:0;;-1:-1:-1;;;;;8954:23:0;;8771:16;8824:15;-1:-1:-1;;;8871:27:0;;;;;;9095:250;9133:11;9129:1;:15;9095:250;;;9186:15;9163:5;9169:1;9163:8;;;;;;;;;;;;;;;;;:19;-1:-1:-1;;;9163:19:0;;;;:38;9159:180;;9222:28;9233:5;9239:1;9233:8;;;;;;;;;;;;;;;;;:16;9222:6;;-1:-1:-1;;;9233:16:0;;-1:-1:-1;;;;;9233:16:0;9222:10;:28::i;:::-;9213:37;;9159:180;;;9325:5;;9159:180;9146:3;;9095:250;;;-1:-1:-1;9397:20:0;9420:57;1893:6;9420:36;:15;1893:6;9420:19;:36::i;:57::-;9397:80;;9501:1;9487:11;:15;:95;;;;;9570:12;9506:60;1893:6;2005:2;1987:20;9514:5;9534:1;9520:11;:15;9514:22;;;;;;;9506:60;:76;9487:95;9483:167;;;9601:42;9612:5;9632:1;9618:11;:15;9612:22;;;;;;;9601:42;9592:51;;9483:167;9656:13;;;;;8660:1014;;;:::o;11752:745::-;11819:14;11841:18;11862:70;1893:6;11862:49;1893:6;11870;11877;11870:14;;;;;;;;;;;;;;;;;:19;;-1:-1:-1;;;11870:19:0;;;;;;11862:49;:32;:49;:::i;:70::-;11841:91;-1:-1:-1;11938:19:0;11960:28;11841:91;1987:20;11960:14;:28::i;:::-;11938:50;-1:-1:-1;11994:20:0;12017:57;1893:6;12017:36;:15;1893:6;12017:19;:36::i;:57::-;11994:80;;12161:12;12137:6;12144;12137:14;;;;;;;;;;;;;;;;;:19;-1:-1:-1;;;12137:19:0;;;;12129:44;12125:73;;;-1:-1:-1;;12183:8:0;;;;12125:73;12294:6;12277:196;12306:1;12302:5;;:10;12277:196;;12327:15;12345:6;12352:1;12345:9;;;;;;;;;;;;;;;;;12374:6;;12345:9;;-1:-1:-1;;;;12374:6:0;;;;-1:-1:-1;;12362:60:0;;12408:5;;;12362:60;12438:28;12449:6;12456:1;12449:9;;;;;;;;;;;;;;;;;:16;12438:6;;-1:-1:-1;;;;;12449:16:0;12438:10;:28::i;:::-;12429:37;-1:-1:-1;;;;12314:3:0;12277:196;;;;12479:13;;;11752:745;;;:::o;21176:216::-;1688:1:10;2277:7;;:19;;2269:63;;;;-1:-1:-1;;;2269:63:10;;;;;;;:::i;:::-;1688:1;2407:7;:18;;;;21305:82:0::1;21326:10;21338:7;21347:11;21360;21373:10;21385:1;21305:20;:82::i;:::-;-1:-1:-1::0;;1645:1:10;2580:7;:22;-1:-1:-1;21176:216:0:o;1717:145:3:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:3;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:3;;1289:68;;;;-1:-1:-1;;;1289:68:3;;;;;;;:::i;:::-;1807:6:::1;::::0;1786:40:::1;::::0;1823:1:::1;::::0;-1:-1:-1;;;;;1807:6:3::1;::::0;1786:40:::1;::::0;1823:1;;1786:40:::1;1836:6;:19:::0;;-1:-1:-1;;;;;;1836:19:3::1;::::0;;1717:145::o;1550:26:0:-;;;-1:-1:-1;;;;;1550:26:0;;:::o;2389:28::-;;;;:::o;1632:29::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1632:29:0;;-1:-1:-1;1632:29:0;:::o;2701:42::-;;;;:::o;14033:85::-;14100:6;:13;14033:85;:::o;5799:178::-;5879:13;;5845:12;;5838:59;;-1:-1:-1;;;;;5845:12:0;;;;5879:13;;5838:32;:59::i;:::-;5944:13;;5910:12;;5903:69;;-1:-1:-1;;;;;5910:12:0;;;;5944:13;-1:-1:-1;;5903:32:0;:69::i;:::-;5799:178::o;21629:244::-;1688:1:10;2277:7;;:19;;2269:63;;;;-1:-1:-1;;;2269:63:10;;;;;;;:::i;:::-;1688:1;2407:7;:18;;;;21763:105:0::1;21784:8;21794:5;21801:1:::0;21804:8:::1;21814:10;21826:41;21846:20;;1893:6;21826:19;;:41;;;;:::i;:::-;21763:20;:105::i;24056:381::-:0;1308:12:3;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:3;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:3;;1289:68;;;;-1:-1:-1;;;1289:68:3;;;;;;;:::i;:::-;24181:12:0::1;::::0;-1:-1:-1;;;;;24156:38:0;;::::1;24181:12:::0;::::1;24156:38;;24148:80;;;;-1:-1:-1::0;;;24148:80:0::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;24242:25:0;::::1;;::::0;;;:10:::1;:25;::::0;;;;:40:::1;;::::0;::::1;;:45:::0;24234:86:::1;;;;-1:-1:-1::0;;;24234:86:0::1;;;;;;;:::i;:::-;24326:57;24361:7;:5;:7::i;:::-;-1:-1:-1::0;;;;;24326:34:0;::::1;::::0;24370:12;24326:34:::1;:57::i;:::-;24394:38;24404:13;24419:12;24394:38;;;;;;;:::i;:::-;;;;;;;;24056:381:::0;;:::o;1085:85:3:-;1157:6;;-1:-1:-1;;;;;1157:6:3;1085:85;:::o;3726:79:0:-;3793:7;3786:14;;;;;;;;-1:-1:-1;;3786:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3765:13;;3786:14;;3793:7;;3786:14;;3793:7;3786:14;;;;;;;;;;;;;;;;;;;;;;;;2787:43;2825:5;2787:43;:::o;2850:39::-;;;;:::o;4774:419::-;1308:12:3;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:3;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:3;;1289:68;;;;-1:-1:-1;;;1289:68:3;;;;;;;:::i;:::-;4904:4:0::1;4897;:11;4889:40;;;;-1:-1:-1::0;;;4889:40:0::1;;;;;;;:::i;:::-;4961:5;4953;:13;4945:39;;;;-1:-1:-1::0;;;4945:39:0::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5007:31:0;::::1;4999:59;;;;-1:-1:-1::0;;;4999:59:0::1;;;;;;;:::i;:::-;5093:23;:30:::0;;;;5129:13:::1;:21:::0;5156:12:::1;:32:::0;;-1:-1:-1;;;;;;5156:32:0::1;-1:-1:-1::0;;;;;5156:32:0;;::::1;::::0;;;::::1;::::0;;4774:419::o;2592:27::-;;;-1:-1:-1;;;;;2592:27:0;;:::o;2525:52::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2525:52:0;;;;-1:-1:-1;;;;2525:52:0;;;;-1:-1:-1;;;;2525:52:0;;;;;:::o;2623:38::-;;;;:::o;2747:36::-;;;;:::o;23190:557::-;23288:1;24590:18;;;:8;:18;;;24637:19;;-1:-1:-1;;;24637:19:0;;-1:-1:-1;;;;;24637:19:0;23288:1;24664:694;24688:12;:19;24684:23;;24664:694;;;24724:13;24740:12;24753:1;24740:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;24740:15:0;;-1:-1:-1;24806:30:0;:22;24740:15;24806;:22::i;:::-;:28;:30::i;:::-;-1:-1:-1;;;;;24765:17:0;;;;;;:10;:17;;;;;:38;;;:71;;-1:-1:-1;;;;;24765:71:0;;;;-1:-1:-1;;;24765:71:0;-1:-1:-1;;;;;;;;24765:71:0;;;;;;;;;;24907:30;24881:64;;:57;;24907:30;24765:71;24907:30;;;;24881:25;:57::i;:::-;:62;:64::i;:::-;-1:-1:-1;;;;;24846:17:0;;;;;;;:10;:17;;;;;:32;;:99;;-1:-1:-1;;24846:99:0;;;;;;;;;;;;;24959:22;;;24955:395;;-1:-1:-1;;;;;25175:17:0;;;;;;:10;:17;;;;;:26;25113:134;;25134:8;;25156:5;;25175:26;;:60;;25217:18;;-1:-1:-1;;;;;25217:18:0;25175:60;;;25204:10;25175:60;25113:7;:134::i;:::-;-1:-1:-1;;;;;25086:17:0;;;;;;;:7;:17;;;;;;;;:24;;;;;;;;;;;;:161;;;;25301:10;:17;;;;;:38;;;25259:32;;;:22;:32;;;;;:39;;;;;;;;;;-1:-1:-1;;;25301:38:0;;;-1:-1:-1;;;;;25301:38:0;25259:80;;24955:395;-1:-1:-1;24709:3:0;;24664:694;;;-1:-1:-1;;;;;;;;23306:33:0;::::1;;::::0;;;:18:::1;:33;::::0;;;;;;;23340:10:::1;23306:45:::0;;;;;;;;::::1;;23298:72;;;;-1:-1:-1::0;;;23298:72:0::1;;;;;;;:::i;:::-;23394:1;23384:7;:11;23376:33;;;;-1:-1:-1::0;;;23376:33:0::1;;;;;;;:::i;:::-;23416:37;23430:13;23445:7;23416:13;:37::i;:::-;23621:74;-1:-1:-1::0;;;;;23621:38:0;::::1;23660:10;23680:4;23687:7:::0;23621:38:::1;:74::i;:::-;23719:13;-1:-1:-1::0;;;;;23707:35:0::1;;23734:7;23707:35;;;;;;:::i;:::-;;;;;;;;23190:557:::0;;;:::o;7335:169::-;-1:-1:-1;;;;;7441:25:0;;7411:7;7441:25;;;:10;:25;;;;;:36;7433:66;;-1:-1:-1;;;7441:36:0;;-1:-1:-1;;;;;7441:36:0;1893:6;7433:49;:66::i;2950:30::-;;;;;;:::o;21908:626::-;1688:1:10;2277:7;;:19;;2269:63;;;;-1:-1:-1;;;2269:63:10;;;;;;;:::i;:::-;1688:1;2407:7;:18;;;-1:-1:-1;;;;;24590:18:0;::::1;::::0;;:8:::1;:18;::::0;;;;24637:19;;24590:18;;-1:-1:-1;;;24637:19:0;;::::1;-1:-1:-1::0;;;;;24637:19:0::1;::::0;24664:694:::1;24688:12;:19:::0;24684:23;::::1;24664:694;;;24724:13;24740:12;24753:1;24740:15;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;24740:15:0::1;::::0;-1:-1:-1;24806:30:0::1;:22;24740:15:::0;24806::::1;:22::i;:30::-;-1:-1:-1::0;;;;;24765:17:0;::::1;;::::0;;;:10:::1;:17;::::0;;;;:38:::1;::::0;::::1;:71:::0;;-1:-1:-1;;;;;24765:71:0;;;::::1;-1:-1:-1::0;;;24765:71:0::1;-1:-1:-1::0;;;;;;;;24765:71:0;;::::1;::::0;;;::::1;::::0;;;24907:30;24881:64:::1;::::0;:57:::1;::::0;24907:30:::1;24765:71;24907:30:::0;;::::1;;24881:25;:57::i;:64::-;-1:-1:-1::0;;;;;24846:17:0;;::::1;;::::0;;;:10:::1;:17;::::0;;;;:32:::1;;:99:::0;;-1:-1:-1;;24846:99:0::1;;::::0;;;::::1;::::0;;;::::1;::::0;;;24959:22;::::1;::::0;24955:395:::1;;-1:-1:-1::0;;;;;25175:17:0;::::1;;::::0;;;:10:::1;:17;::::0;;;;:26;25113:134:::1;::::0;25134:8;;25156:5;;25175:26:::1;;:60;;25217:18:::0;;-1:-1:-1;;;;;25217:18:0::1;25175:60;;25113:134;-1:-1:-1::0;;;;;25086:17:0;;::::1;;::::0;;;:7:::1;:17;::::0;;;;;;;:24;;::::1;::::0;;;;;;;;;:161;;;;25301:10:::1;:17:::0;;;;;:38:::1;;::::0;25259:32;;;:22:::1;:32:::0;;;;;:39;;;;;;;;;;-1:-1:-1;;;25301:38:0;;::::1;-1:-1:-1::0;;;;;25301:38:0::1;25259:80:::0;;24955:395:::1;-1:-1:-1::0;24709:3:0::1;;24664:694;;;;2436:1:10;;21999:9:0::2;21994:536;22014:12;:19:::0;22010:23;::::2;21994:536;;;22048:21;22072:12;22085:1;22072:15;;;;;;;;;::::0;;;::::2;::::0;;;;;::::2;::::0;-1:-1:-1;;;;;22112:17:0;;::::2;::::0;;:7:::2;:17:::0;;;;;;22072:15;;;::::2;22112:32:::0;;;;;;;;;22072:15;;-1:-1:-1;22156:10:0;;22152:372:::2;;-1:-1:-1::0;;;;;22178:17:0;;::::2;22213:1;22178:17:::0;;;:7:::2;:17;::::0;;;;;;;:32;;::::2;::::0;;;;;;;;:36;;;22241:23:::2;:6:::0;22260:2:::2;22241:10;:23::i;:::-;22224:40:::0;-1:-1:-1;22274:16:0::2;22293:22;22224:40:::0;22312:1:::2;22293:10;:22::i;:::-;22274:41:::0;-1:-1:-1;22325:52:0::2;-1:-1:-1::0;;;;;22325:34:0;::::2;22360:8:::0;22370:6;22325:34:::2;:52::i;:::-;22402:13;::::0;22442:14:::2;::::0;22387:70:::2;::::0;-1:-1:-1;;;22387:70:0;;-1:-1:-1;;;;;22402:13:0;;::::2;::::0;22387:34:::2;::::0;:70:::2;::::0;22422:8;;22432;;22387:70:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;22493:13;-1:-1:-1::0;;;;;22472:43:0::2;22483:8;-1:-1:-1::0;;;;;22472:43:0::2;;22508:6;22472:43;;;;;;:::i;:::-;;;;;;;;22152:372;;;-1:-1:-1::0;;22035:3:0::2;;21994:536;;14172:65:::0;14214:18;:16;:18::i;2421:21::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2421:21:0;;;-1:-1:-1;;;;2421:21:0;;;;;:::o;2358:27::-;;;;:::o;3917:470::-;1308:12:3;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:3;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:3;;1289:68;;;;-1:-1:-1;;;1289:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;4044:25:0;::::1;;::::0;;;:10:::1;:25;::::0;;;;:40:::1;;::::0;::::1;;:45:::0;4036:54:::1;;;::::0;::::1;;4096:12;:32:::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;;4096:32:0::1;-1:-1:-1::0;;;;;4096:32:0;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;4134:25:0;;;:10:::1;4096:32;4134:25:::0;;;;;;;:40;;::::1;:66:::0;;-1:-1:-1;;4134:66:0::1;4184:15;4134:66;;::::0;;::::1;::::0;;;4206:64;;-1:-1:-1;;4206:64:0::1;4096:32;4206:64:::0;;::::1;;-1:-1:-1::0;;4276:46:0;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;4328:18:::1;:33:::0;;;;;:47;;;::::1;::::0;;;;;;;;;;:54;;;;::::1;::::0;;::::1;::::0;;3917:470::o;7585:541::-;7722:12;:19;7652:31;;7705:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7779:18:0;;7748:28;7779:18;;;:8;:18;;;;;7824:19;;7691:51;;-1:-1:-1;7779:18:0;-1:-1:-1;;;7824:19:0;;-1:-1:-1;;;;;7824:19:0;;7849:249;7873:11;:18;7869:1;:22;7849:249;;;7906:13;7922:12;7935:1;7922:15;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7922:15:0;7906:31;;7968:5;7945:11;7957:1;7945:14;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7945:28:0;;;;;8030:17;;;7945:20;8030:17;;;:10;:17;;;;;;:26;8005:86;;8013:8;;8023:5;;8030:26;;:60;;8072:18;;-1:-1:-1;;;;;8072:18:0;8030:60;;8005:86;7981:11;7993:1;7981:14;;;;;;;;;;;;;;;;;;;:21;:110;-1:-1:-1;7893:3:0;;7849:249;;;;8103:18;;7585:541;;;:::o;15234:257::-;1688:1:10;2277:7;;:19;;2269:63;;;;-1:-1:-1;;;2269:63:10;;;;;;;:::i;:::-;1688:1;2407:7;:18;;;15366:12:0;:65:::1;::::0;-1:-1:-1;;;;;15366:12:0::1;15396:10;15416:4;15423:7:::0;15366:29:::1;:65::i;:::-;15449:37;15455:8;15465:7;15474:11;15449:5;:37::i;2893:39::-:0;;;;:::o;23751:197::-;1308:12:3;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:3;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:3;;1289:68;;;;-1:-1:-1;;;1289:68:3;;;;;;;:::i;:::-;23860:13:0::1;::::0;23831:60:::1;::::0;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;23860:13:0;;::::1;::::0;23876:14;;23831:60:::1;:::i;:::-;;;;;;;;23897:13;:46:::0;;-1:-1:-1;;;;;;23897:46:0::1;-1:-1:-1::0;;;;;23897:46:0;;;::::1;::::0;;;::::1;::::0;;23751:197::o;2267:62::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;7204:127::-;7274:7;7296:30;7312:13;7296:15;:30::i;1580:35::-;;;-1:-1:-1;;;;;1580:35:0;;:::o;2011:240:3:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:3;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:3;;1289:68;;;;-1:-1:-1;;;1289:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2099:22:3;::::1;2091:73;;;;-1:-1:-1::0;;;2091:73:3::1;;;;;;;:::i;:::-;2200:6;::::0;2179:38:::1;::::0;-1:-1:-1;;;;;2179:38:3;;::::1;::::0;2200:6:::1;::::0;2179:38:::1;::::0;2200:6:::1;::::0;2179:38:::1;2227:6;:17:::0;;-1:-1:-1;;;;;;2227:17:3::1;-1:-1:-1::0;;;;;2227:17:3;;;::::1;::::0;;;::::1;::::0;;2011:240::o;12544:589:0:-;12638:6;:13;12603;;-1:-1:-1;;12638:17:0;12603:13;12720:47;1893:6;12720:26;:5;1893:6;12720:9;:26::i;:47::-;12712:55;;12779:9;12774:339;12798:3;12794:1;:7;12774:339;;;12827:3;12820;:10;12816:21;;12832:5;;12816:21;12846:11;12878:1;12873;12861:9;;;:13;12860:19;12846:33;;12887:21;12911:6;12918:3;12911:11;;;;;;;;;;;;;;;;;:16;-1:-1:-1;;;12911:16:0;;;;;-1:-1:-1;12939:22:0;;;12935:172;;;-1:-1:-1;12996:3:0;-1:-1:-1;12989:10:0;;-1:-1:-1;;;12989:10:0;12935:172;13034:5;13018:13;:21;13014:93;;;13057:3;13051:9;;13014:93;;;13097:1;13091:3;:7;13085:13;;13014:93;-1:-1:-1;;12803:3:0;;12774:339;;;-1:-1:-1;13125:3:0;12544:589;-1:-1:-1;;;12544:589:0:o;5691:67::-;1308:12:3;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:3;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:3;;1289:68;;;;-1:-1:-1;;;1289:68:3;;;;;;;:::i;:::-;5736:10:0::1;:17:::0;;-1:-1:-1;;5736:17:0::1;5749:4;5736:17;::::0;;5691:67::o;677:142:2:-;735:7;762:1;758;:5;750:46;;;;-1:-1:-1;;;750:46:2;;;;;;;:::i;:::-;813:1;809;:5;;;;;;;677:142;-1:-1:-1;;;677:142:2:o;526:147::-;584:9;609:6;;;:30;;-1:-1:-1;;624:5:2;;;638:1;633;624:5;633:1;619:15;;;;;:20;609:30;601:67;;;;-1:-1:-1;;;601:67:2;;;;;;;:::i;255:133::-;343:5;;;338:16;;;;330:53;;;;-1:-1:-1;;;330:53:2;;;;;;;:::i;392:130::-;480:5;;;475:16;;;;467:50;;;;-1:-1:-1;;;467:50:2;;;;;;;:::i;17604:2985:0:-;-1:-1:-1;;;;;24590:18:0;;24559:28;24590:18;;;:8;:18;;;;;24637:19;;24590:18;;-1:-1:-1;;;24637:19:0;;;-1:-1:-1;;;;;24637:19:0;;24664:694;24688:12;:19;24684:23;;24664:694;;;24724:13;24740:12;24753:1;24740:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;24740:15:0;;-1:-1:-1;24806:30:0;:22;24740:15;24806;:22::i;:30::-;-1:-1:-1;;;;;24765:17:0;;;;;;:10;:17;;;;;:38;;;:71;;-1:-1:-1;;;;;24765:71:0;;;;-1:-1:-1;;;24765:71:0;-1:-1:-1;;;;;;;;24765:71:0;;;;;;;;;;24907:30;24881:64;;:57;;24907:30;24765:71;24907:30;;;;24881:25;:57::i;:64::-;-1:-1:-1;;;;;24846:17:0;;;;;;;:10;:17;;;;;:32;;:99;;-1:-1:-1;;24846:99:0;;;;;;;;;;;;;24959:22;;;24955:395;;-1:-1:-1;;;;;25175:17:0;;;;;;:10;:17;;;;;:26;25113:134;;25134:8;;25156:5;;25175:26;;:60;;25217:18;;-1:-1:-1;;;;;25217:18:0;25175:60;;25113:134;-1:-1:-1;;;;;25086:17:0;;;;;;;:7;:17;;;;;;;;:24;;;;;;;;;;;;:161;;;;25301:10;:17;;;;;:38;;;25259:32;;;:22;:32;;;;;:39;;;;;;;;;;-1:-1:-1;;;25301:38:0;;;-1:-1:-1;;;;;25301:38:0;25259:80;;24955:395;-1:-1:-1;24709:3:0;;24664:694;;;-1:-1:-1;;;;;;;;17851:19:0;::::1;17819:29;17851:19:::0;;;:9:::1;:19;::::0;;;;;;;17907:8:::1;:18:::0;;;;;17995:12;;18042:10:::1;::::0;17851:19;;17907:18;;17819:29;;17995:12;17819:29;;18042:10:::1;;::::0;:78:::1;;-1:-1:-1::0;18088:32:0::1;:15;18108:11:::0;18088:19:::1;:32::i;:::-;18056:5;18071:1;18062:6;:10;18056:17;;;;;;;;;::::0;;;::::1;::::0;;;::::1;:28:::0;-1:-1:-1;;;18056:28:0;::::1;;;:64;;18042:78;18038:1627;;;18212:18:::0;;-1:-1:-1;;;;;18212:18:0;;::::1;::::0;-1:-1:-1;;;;18254:19:0;;::::1;;::::0;-1:-1:-1;18353:13:0::1;:6:::0;:11:::1;:13::i;:::-;18323:43:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;18323:43:0::1;-1:-1:-1::0;;;;;18323:43:0;;::::1;;::::0;;18690:15;;18686:104:::1;;18726:55;18750:11;18763:5;18778:1;18769:6;:10;18763:17;;;;;;;;;;;;;;;18726:23;:55::i;:::-;18717:64;;18686:104;18038:1627;;;18948:27:::0;;-1:-1:-1;;;18948:27:0;::::1;;;::::0;18983:590:::1;19021:6;19017:1;:10;18983:590;;;19122:32;:15;19142:11:::0;19122:19:::1;:32::i;:::-;19100:5;19106:1;19100:8;;;;;;;;;::::0;;;::::1;::::0;;;::::1;:19:::0;-1:-1:-1;;;19100:19:0;::::1;;;:54;19096:65;;;19156:5;;19096:65;19217:27;19228:5;19234:1;19228:8;;;;;;;;;::::0;;;::::1;::::0;;;::::1;:15:::0;-1:-1:-1;;;;;19217:10:0;;::::1;::::0;19228:15:::1;19217:10;:27::i;:::-;19208:36;;19270:35;19288:5;19294:1;19288:8;;;;;;;;;::::0;;;::::1;::::0;;;::::1;:16:::0;-1:-1:-1;;;;;19270:17:0;;::::1;::::0;-1:-1:-1;;;19288:16:0;::::1;;19270:17;:35::i;:::-;19254:51:::0;-1:-1:-1;19399:15:0;;19395:111:::1;;19437:58;19448:46;19472:11;19485:5;19491:1;19485:8;;;;;;;19448:46;19437:6:::0;;:10:::1;:58::i;:::-;19428:67;;19395:111;19547:17;::::0;;::::1;::::0;19029:3:::1;18983:590;;;-1:-1:-1::0;19613:45:0;;::::1;::::0;;::::1;-1:-1:-1::0;;;19613:45:0::1;-1:-1:-1::0;;;;;19613:45:0;;::::1;;::::0;;18038:1627:::1;19687:1;19678:6;-1:-1:-1::0;;;;;19678:10:0::1;;19670:35;;;;-1:-1:-1::0;;;19670:35:0::1;;;;;;;:::i;:::-;19779:18:::0;;:30:::1;::::0;-1:-1:-1;;;;;19779:18:0::1;19802:6:::0;19779:22:::1;:30::i;:::-;19758:51:::0;;-1:-1:-1;;;;;;19758:51:0::1;-1:-1:-1::0;;;;;19758:51:0;;::::1;;::::0;;;19837:38:::1;::::0;-1:-1:-1;;;19837:19:0;;::::1;;19861:13:::0;19837:23:::1;:38::i;:::-;19815:60:::0;;-1:-1:-1;;;;;;;;19815:60:0::1;-1:-1:-1::0;;;;;;;;19815:60:0;;::::1;;;::::0;;19896:12:::1;::::0;:24:::1;::::0;;::::1;:16;:24::i;:::-;19881:12;:39:::0;19942:13:::1;::::0;:32:::1;::::0;-1:-1:-1;;;;;19942:32:0;::::1;:17;:32::i;:::-;19926:13;:48:::0;20014:10;;20010:325:::1;;20162:26;20173:14;:6;:12;:14::i;:::-;-1:-1:-1::0;;;;;20162:10:0;::::1;::::0;::::1;:26::i;:::-;20221:12;::::0;20153:35;;-1:-1:-1;20221:49:0::1;::::0;-1:-1:-1;;;;;20221:12:0::1;20247:14:::0;20263:6;20221:25:::1;:49::i;:::-;20311:8;-1:-1:-1::0;;;;;20284:44:0::1;20295:14;-1:-1:-1::0;;;;;20284:44:0::1;;20321:6;20284:44;;;;;;:::i;:::-;;;;;;;;20010:325;20376:7;20372:213;;;20393:39;20399:11;20412:6;-1:-1:-1::0;;;;;20393:39:0::1;20420:11;20393:5;:39::i;:::-;20454:8;-1:-1:-1::0;;;;;20445:26:0::1;;20464:6;20445:26;;;;;;:::i;:::-;;;;;;;;20372:213;;;20492:12;::::0;:46:::1;::::0;-1:-1:-1;;;;;20492:12:0::1;20518:11:::0;-1:-1:-1;;;;;20492:46:0;::::1;:25;:46::i;:::-;20561:8;-1:-1:-1::0;;;;;20551:27:0::1;;20571:6;20551:27;;;;;;:::i;:::-;;;;;;;;20372:213;25369:1;;;;;;17604:2985:::0;;;;;;;:::o;598:104:9:-;685:10;598:104;:::o;6882:144:0:-;6961:7;6983:38;6992:15;7009:11;6983:8;:38::i;1348:613:7:-;1713:10;;;1712:62;;-1:-1:-1;1729:39:7;;-1:-1:-1;;;1729:39:7;;-1:-1:-1;;;;;1729:15:7;;;;;:39;;1753:4;;1760:7;;1729:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1712:62;1704:150;;;;-1:-1:-1;;;1704:150:7;;;;;;;:::i;:::-;1864:90;1884:5;1914:22;;;1938:7;1947:5;1891:62;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1891:62:7;;;;;;;;;;;;;;-1:-1:-1;;;;;1891:62:7;-1:-1:-1;;;;;;1891:62:7;;;;;;;;;;1864:19;:90::i;:::-;1348:613;;;:::o;704:175::-;786:86;806:5;836:23;;;861:2;865:5;813:58;;;;;;;;;:::i;6018:556:0:-;6089:7;6108:13;;6125:1;6108:18;6104:92;;;-1:-1:-1;;;;;;6143:25:0;;;;;;:10;:25;;;;;:46;;;-1:-1:-1;;;6143:46:0;;-1:-1:-1;;;;;6143:46:0;6136:53;;6104:92;-1:-1:-1;;;;;6495:25:0;;;;;;:10;:25;;;;;:34;6214:355;;6283:278;;6495:34;;:65;;6548:12;;6495:65;;;6532:13;;6495:65;-1:-1:-1;;;;;6421:25:0;;;;;;:10;:25;;;;;:36;;6364:40;;;;;6283:196;;6474:4;;6283:175;;-1:-1:-1;;;;;;;;6421:36:0;;;;6283:175;;6364:40;;;;;6283:65;;6421:36;6309:38;;;6283:25;:65::i;:::-;:80;;:122::i;:196::-;:211;;:278::i;:::-;-1:-1:-1;;;;;6222:25:0;;;;;;:10;:25;;;;;:46;;;-1:-1:-1;;;6222:46:0;;-1:-1:-1;;;;;6222:46:0;;6214:59;:355::i;1720:148:2:-;1769:9;-1:-1:-1;;;;;1794:16:2;;;1786:57;;;;-1:-1:-1;;;1786:57:2;;;;;;;:::i;:::-;-1:-1:-1;1861:1:2;1720:148::o;1269:143::-;1317:8;1341:15;;;;1333:55;;;;-1:-1:-1;;;1333:55:2;;;;;;;:::i;6578:300:0:-;-1:-1:-1;;;;;6836:14:0;;;6690:7;6836:14;;;:7;:14;;;;;;;;:29;;;;;;;;;;;;;6766;;;:22;:29;;;;;:44;;;;;;;;;;6718:155;;6836:29;6718:104;;6817:4;;6718:94;;6731:80;;:30;6851:13;6731:15;:30::i;:80::-;6718:8;;:12;:94::i;:104::-;:108;;:155::i;:::-;6705:168;;6578:300;;;;;;:::o;22590:596::-;-1:-1:-1;;;;;22691:25:0;;22668:20;22691:25;;;:10;:25;;;;;22746:18;;;;;;;22727:15;:37;22723:337;;22793:36;:28;:7;1893:6;22793:11;:28::i;:36::-;22774:55;;-1:-1:-1;;;;;22774:55:0;;;;-1:-1:-1;;;22774:55:0;;;;;;;;22723:337;;;22878:18;;22850:17;;22870:48;;22878:18;;;;;22902:15;22870:31;:48::i;:::-;22959:16;;22850:68;;-1:-1:-1;22926:16:0;;22945:31;;22850:68;;-1:-1:-1;;;22959:16:0;;-1:-1:-1;;;;;22959:16:0;22945:13;:31::i;:::-;22926:50;-1:-1:-1;23003:50:0;:42;1893:6;23003:21;:7;22926:50;23003:11;:21::i;:50::-;22984:69;;-1:-1:-1;;;;;22984:69:0;;;;-1:-1:-1;;;22984:69:0;;;;;;;;-1:-1:-1;;22723:337:0;23089:22;:15;:20;:22::i;:::-;23066:20;;;:45;;-1:-1:-1;;23066:45:0;;;;;;;;;;;;23138:43;:36;:15;1893:6;23138:19;:36::i;:43::-;23117:64;;;;;;;;;-1:-1:-1;;23117:64:0;;;;;;-1:-1:-1;;22590:596:0:o;885:203:7:-;985:96;1005:5;1035:27;;;1064:4;1070:2;1074:5;1012:68;;;;;;;;;;:::i;985:96::-;885:203;;;;:::o;14292:832:0:-;14335:20;14358:57;1893:6;14358:36;:15;1893:6;14358:19;:36::i;:57::-;14442:6;:13;;14335:80;;-1:-1:-1;14335:80:0;;-1:-1:-1;;14557:14:0;;14550:22;;;;;;;;;;;;;;;;:27;-1:-1:-1;;;14550:27:0;;;;:42;14546:574;;;14630:230;14637:6;14644:13;;14671:12;;14637:6;-1:-1:-1;;14644:17:0;;;14637:25;;;;;;;;;;;;;;;:30;-1:-1:-1;;;14637:30:0;;;;:46;14630:230;;14695:21;14719:60;1893:6;14727;14750:1;14734:6;:13;;;;:17;14727:25;;;;;;;;;;;;;;;;;:30;;-1:-1:-1;;;14727:30:0;;;;;;14719:60;:43;:60;:::i;:::-;14801:49;;;;;;;;;-1:-1:-1;14801:49:0;;;;;;;;;;;;;14789:6;:62;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;14789:62:0;-1:-1:-1;;;;;14789:62:0;;;-1:-1:-1;;;;;;14789:62:0;;;;;;;;;;;-1:-1:-1;14630:230:0;;;14932:13;;14919:9;;:26;14915:76;;14969:13;;14957:9;:25;14915:76;15025:23;;15002:19;;:46;14998:116;;15082:23;;15060:19;:45;14998:116;14292:832;;:::o;15511:2014::-;-1:-1:-1;;;;;24590:18:0;;24559:28;24590:18;;;:8;:18;;;;;24637:19;;24590:18;;-1:-1:-1;;;24637:19:0;;;-1:-1:-1;;;;;24637:19:0;;24664:694;24688:12;:19;24684:23;;24664:694;;;24724:13;24740:12;24753:1;24740:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;24740:15:0;;-1:-1:-1;24806:30:0;:22;24740:15;24806;:22::i;:30::-;-1:-1:-1;;;;;24765:17:0;;;;;;:10;:17;;;;;:38;;;:71;;-1:-1:-1;;;;;24765:71:0;;;;-1:-1:-1;;;24765:71:0;-1:-1:-1;;;;;;;;24765:71:0;;;;;;;;;;24907:30;24881:64;;:57;;24907:30;24765:71;24907:30;;;;24881:25;:57::i;:64::-;-1:-1:-1;;;;;24846:17:0;;;;;;;:10;:17;;;;;:32;;:99;;-1:-1:-1;;24846:99:0;;;;;;;;;;;;;24959:22;;;24955:395;;-1:-1:-1;;;;;25175:17:0;;;;;;:10;:17;;;;;:26;25113:134;;25134:8;;25156:5;;25175:26;;:60;;25217:18;;-1:-1:-1;;;;;25217:18:0;25175:60;;25113:134;-1:-1:-1;;;;;25086:17:0;;;;;;;:7;:17;;;;;;;;:24;;;;;;;;;;;;:161;;;;25301:10;:17;;;;;:38;;;25259:32;;;:22;:32;;;;;:39;;;;;;;;;;-1:-1:-1;;;25301:38:0;;;-1:-1:-1;;;;;25301:38:0;25259:80;;24955:395;-1:-1:-1;24709:3:0;;24664:694;;;;15511:2014;;15654:1:::1;15644:7;:11;15636:38;;;;-1:-1:-1::0;;;15636:38:0::1;;;;;;;:::i;:::-;15703:19;;15688:11;:34;;15680:61;;;;-1:-1:-1::0;;;15680:61:0::1;;;;;;;:::i;:::-;15756:10;::::0;::::1;;15755:11;15747:32;;;;-1:-1:-1::0;;;15747:32:0::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;15809:18:0;::::1;15786:20;15809:18:::0;;;:8:::1;:18;::::0;;;;15876::::1;:16;:18::i;:::-;15936:19;15958:41;2825:5;15958:24;:7:::0;15970:11;15958::::1;:24::i;:41::-;15936:63;;16005:18;16026:82;16057:19;;16080:1;16057:24;:50;;16088:19;;16057:50;;;16084:1;16057:50;16026:9;::::0;:26:::1;::::0;16040:11;16026:13:::1;:26::i;:82::-;16005:103:::0;-1:-1:-1;16114:18:0::1;16135:32;:24;:7:::0;16147:11;16135::::1;:24::i;:::-;:30;:32::i;:::-;16114:53:::0;-1:-1:-1;16173:21:0::1;16197:61;:53;16209:40;2825:5;16209:23;:7:::0;16221:10;16209:11:::1;:23::i;:40::-;16197:7:::0;;:11:::1;:53::i;:61::-;16302:10:::0;;16173:85;;-1:-1:-1;16302:26:0::1;::::0;-1:-1:-1;;;;;16302:10:0::1;16317::::0;16302:14:::1;:26::i;:::-;16289:39:::0;;-1:-1:-1;;;;;;16289:39:0::1;-1:-1:-1::0;;;;;16289:39:0;;::::1;;::::0;;;16348:30:::1;::::0;-1:-1:-1;;;16348:11:0;;::::1;;16364:13:::0;16348:15:::1;:30::i;:::-;16334:44:::0;;-1:-1:-1;;;;;;;;16334:44:0::1;-1:-1:-1::0;;;;;;;;16334:44:0;;::::1;;;::::0;;16428:12:::1;::::0;:28:::1;::::0;;::::1;:16;:28::i;:::-;16413:12;:43:::0;16478:13:::1;::::0;:32:::1;::::0;-1:-1:-1;;;;;16478:32:0;::::1;:17;:32::i;:::-;16462:13;:48:::0;16563:20:::1;16586:57;1893:6;16586:36;:15;1893:6:::0;16586:19:::1;:36::i;:57::-;16563:80:::0;-1:-1:-1;16649:18:0::1;16670:30;16563:80:::0;1987:20;16670:16:::1;:30::i;:::-;-1:-1:-1::0;;;;;16720:19:0;::::1;16706:11;16720:19:::0;;;:9:::1;:19;::::0;;;;:26;16649:51;;-1:-1:-1;16756:8:0;;;:64:::1;;-1:-1:-1::0;;;;;;16768:19:0;::::1;;::::0;;;:9:::1;:19;::::0;;;;:28;;16810:10;;16768:19;-1:-1:-1;;16788:7:0;;;16768:28;::::1;;;;;;::::0;;;::::1;::::0;;;::::1;:39:::0;-1:-1:-1;;;16768:39:0;::::1;;;:52;16756:64;16752:406;;;-1:-1:-1::0;;;;;16830:19:0;::::1;;::::0;;;:9:::1;:19;::::0;;;;;;;16864:93;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;16864:93:0;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;;;;16830:135;;::::1;::::0;::::1;::::0;;;;;;;;;;;;;;::::1;::::0;;;;;;;;::::1;-1:-1:-1::0;;;16830:135:0::1;-1:-1:-1::0;;;;;16830:135:0;;::::1;-1:-1:-1::0;;;16830:135:0::1;-1:-1:-1::0;;;;;;;;16830:135:0;;;::::1;-1:-1:-1::0;;;;;;16830:135:0;;::::1;::::0;;;::::1;;;;::::0;;;::::1;::::0;;16752:406:::1;;;-1:-1:-1::0;;;;;17016:19:0;::::1;16986:27;17016:19:::0;;;:9:::1;:19;::::0;;;;:28;;-1:-1:-1;;17036:7:0;;;17016:28;::::1;;;;;;::::0;;;::::1;::::0;;;::::1;17067:12:::0;;17016:28;;-1:-1:-1;17067:28:0::1;::::0;-1:-1:-1;;;;;17067:12:0::1;17084:10:::0;17067:16:::1;:28::i;:::-;17052:43:::0;;-1:-1:-1;;;;;;17052:43:0::1;-1:-1:-1::0;;;;;17052:43:0;;::::1;;::::0;;;17119:32:::1;::::0;-1:-1:-1;;;17119:13:0;;::::1;;17137::::0;17119:17:::1;:32::i;:::-;17103:48:::0;;-1:-1:-1;;;;;17103:48:0;;;::::1;-1:-1:-1::0;;;17103:48:0::1;-1:-1:-1::0;;;;;;;;17103:48:0;;::::1;;::::0;;16752:406:::1;17259:6;17266:13:::0;;17241:15:::1;::::0;17259:6;-1:-1:-1;;17266:17:0;;;17259:25;::::1;;;;;;::::0;;;::::1;::::0;;;::::1;17301:8:::0;;17259:25;;-1:-1:-1;17301:36:0::1;::::0;-1:-1:-1;;;;;17301:8:0::1;-1:-1:-1::0;;;;;17314:22:0;::::1;17301:12;:36::i;:::-;17290:47:::0;;-1:-1:-1;;;;;;17290:47:0::1;-1:-1:-1::0;;;;;17290:47:0;;;::::1;;::::0;;17373:15;;17369:88:::1;;17424:12;::::0;17398::::1;::::0;:52:::1;::::0;-1:-1:-1;;;;;17398:12:0;;::::1;::::0;17424::::1;17438:11:::0;17398:25:::1;:52::i;:::-;17475:8;-1:-1:-1::0;;;;;17468:52:0::1;;17485:7;17494:10;17506:13;17468:52;;;;;;;;:::i;1122:143:2:-:0;1170:8;1194:15;;;;1186:55;;;;-1:-1:-1;;;1186:55:2;;;;;;;:::i;20593:497:0:-;20719:7;;20759:74;1893:6;20759:53;1893:6;20759:32;:15;20779:11;20759:19;:32::i;:74::-;20885:24;;20736:97;;-1:-1:-1;20839:18:0;;20860:72;;1893:6;;20860:51;;20736:97;;20885:24;-1:-1:-1;;;20885:24:0;;;;;;20860:16;:51;:::i;:72::-;20839:93;;20938:13;20954:61;20963:38;20986:10;20999:1;20986:14;20963:18;;:22;;:38;;;;:::i;:::-;2825:5;20954:8;:61::i;:::-;21036:20;;20938:77;;-1:-1:-1;21028:57:0;;2825:5;;21028:40;;-1:-1:-1;;;;;21036:20:0;20938:77;21028:33;:40::i;:57::-;21021:64;20593:497;-1:-1:-1;;;;;;20593:497:0:o;3612:133:2:-;3700:5;;;-1:-1:-1;;;;;3695:16:2;;;;;;;;3687:53;;;;-1:-1:-1;;;3687:53:2;;;;;;;:::i;3749:130::-;3837:5;;;-1:-1:-1;;;;;3832:16:2;;;;;;;;3824:50;;;;-1:-1:-1;;;3824:50:2;;;;;;;:::i;1416:148::-;1465:9;-1:-1:-1;;;;;1490:16:2;;;1482:57;;;;-1:-1:-1;;;1482:57:2;;;;;;;:::i;399:104:4:-;457:7;487:1;483;:5;:13;;495:1;483:13;;;-1:-1:-1;491:1:4;;476:20;-1:-1:-1;399:104:4:o;2967:751:7:-;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;-1:-1:-1;;;;;3412:27:7;;;:69;;;;;:::i;:::-;3495:17;;3386:95;;-1:-1:-1;3495:21:7;3491:221;;3635:10;3624:30;;;;;;;;;;;;:::i;:::-;3616:85;;;;-1:-1:-1;;;3616:85:7;;;;;;;:::i;4305:133:2:-;4393:5;;;-1:-1:-1;;;;;4388:16:2;;;;;;;;4380:53;;;;-1:-1:-1;;;4380:53:2;;;;;;;:::i;3581:193:8:-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3684;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;-1:-1:-1;;;4850:60:8;;;;;;;:::i;:::-;4981:12;4995:23;5022:6;-1:-1:-1;;;;;5022:11:8;5042:5;5050:4;5022:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;4608:523;-1:-1:-1;;;;;;;4608:523:8:o;726:413::-;1086:20;1124:8;;;726:413::o;7091:725::-;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:8;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;-1:-1:-1;;;7765:20:8;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;5:130::-;72:20;;-1:-1;;;;;43016:54;;44881:35;;44871:2;;44930:1;;44920:12;686:241;;790:2;778:9;769:7;765:23;761:32;758:2;;;-1:-1;;796:12;758:2;858:53;903:7;879:22;858:53;:::i;934:366::-;;;1055:2;1043:9;1034:7;1030:23;1026:32;1023:2;;;-1:-1;;1061:12;1023:2;1123:53;1168:7;1144:22;1123:53;:::i;:::-;1113:63;;1231:53;1276:7;1213:2;1256:9;1252:22;1231:53;:::i;:::-;1221:63;;1017:283;;;;;:::o;1307:485::-;;;;1442:2;1430:9;1421:7;1417:23;1413:32;1410:2;;;-1:-1;;1448:12;1410:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;1500:63;-1:-1;1600:2;1639:22;;72:20;97:33;72:20;97:33;:::i;:::-;1608:63;-1:-1;1708:2;1744:22;;206:20;231:30;206:20;231:30;:::i;:::-;1716:60;;;;1404:388;;;;;:::o;1799:366::-;;;1920:2;1908:9;1899:7;1895:23;1891:32;1888:2;;;-1:-1;;1926:12;1888:2;1988:53;2033:7;2009:22;1988:53;:::i;:::-;1978:63;2078:2;2117:22;;;;475:20;;-1:-1;;;1882:283::o;2172:491::-;;;;2310:2;2298:9;2289:7;2285:23;2281:32;2278:2;;;-1:-1;;2316:12;2278:2;2378:53;2423:7;2399:22;2378:53;:::i;:::-;2368:63;2468:2;2507:22;;475:20;;-1:-1;2576:2;2615:22;;;475:20;;2272:391;-1:-1;;;2272:391::o;2670:235::-;;2771:2;2759:9;2750:7;2746:23;2742:32;2739:2;;;-1:-1;;2777:12;2739:2;219:6;206:20;231:30;255:5;231:30;:::i;2912:257::-;;3024:2;3012:9;3003:7;2999:23;2995:32;2992:2;;;-1:-1;;3030:12;2992:2;354:6;348:13;366:30;390:5;366:30;:::i;3176:485::-;;;;3311:2;3299:9;3290:7;3286:23;3282:32;3279:2;;;-1:-1;;3317:12;3279:2;219:6;206:20;231:30;255:5;231:30;:::i;:::-;3369:60;-1:-1;3466:2;3505:22;;475:20;;-1:-1;3592:53;3637:7;3574:2;3613:22;;3592:53;:::i;:::-;3582:63;;3273:388;;;;;:::o;3668:241::-;;3772:2;3760:9;3751:7;3747:23;3743:32;3740:2;;;-1:-1;;3778:12;3740:2;-1:-1;475:20;;3734:175;-1:-1;3734:175::o;3916:263::-;;4031:2;4019:9;4010:7;4006:23;4002:32;3999:2;;;-1:-1;;4037:12;3999:2;-1:-1;623:13;;3993:186;-1:-1;3993:186::o;4186:366::-;;;4307:2;4295:9;4286:7;4282:23;4278:32;4275:2;;;-1:-1;;4313:12;4275:2;488:6;475:20;4365:63;;4483:53;4528:7;4465:2;4508:9;4504:22;4483:53;:::i;4559:366::-;;;4680:2;4668:9;4659:7;4655:23;4651:32;4648:2;;;-1:-1;;4686:12;4648:2;-1:-1;;475:20;;;4838:2;4877:22;;;475:20;;-1:-1;4642:283::o;4932:491::-;;;;5070:2;5058:9;5049:7;5045:23;5041:32;5038:2;;;-1:-1;;5076:12;5038:2;488:6;475:20;5128:63;;5228:2;5271:9;5267:22;475:20;5236:63;;5336:2;5379:9;5375:22;72:20;97:33;124:5;97:33;:::i;21421:271::-;;8499:5;41138:12;8610:52;8655:6;8650:3;8643:4;8636:5;8632:16;8610:52;:::i;:::-;8674:16;;;;;21555:137;-1:-1;;21555:137::o;21699:222::-;-1:-1;;;;;43016:54;;;;6075:37;;21826:2;21811:18;;21797:124::o;21928:333::-;-1:-1;;;;;43016:54;;;6075:37;;43016:54;;22247:2;22232:18;;6075:37;22083:2;22068:18;;22054:207::o;22268:444::-;-1:-1;;;;;43016:54;;;6075:37;;43016:54;;;;22615:2;22600:18;;6075:37;22698:2;22683:18;;20797:37;;;;22451:2;22436:18;;22422:290::o;22719:333::-;-1:-1;;;;;43016:54;;;;6075:37;;23038:2;23023:18;;20797:37;22874:2;22859:18;;22845:207::o;23059:444::-;-1:-1;;;;;43016:54;;;;6075:37;;23406:2;23391:18;;20797:37;;;;23489:2;23474:18;;20797:37;23242:2;23227:18;;23213:290::o;23510:474::-;23739:2;23753:47;;;41138:12;;23724:18;;;42039:19;;;23510:474;;23739:2;42079:14;;;;;;40779;;;23510:474;6853:338;6878:6;6875:1;6872:13;6853:338;;;6939:13;;19142:23;;-1:-1;;;;;43016:54;6075:37;;19304:16;;19298:23;19375:14;;;20797:37;5688:14;;;;41724;;;;43027:42;6893:9;6853:338;;;-1:-1;23806:168;;23710:274;-1:-1;;;;;;;23710:274::o;23991:210::-;42812:13;;42805:21;8293:34;;24112:2;24097:18;;24083:118::o;24208:648::-;42812:13;;42805:21;8293:34;;43612:12;43601:24;;;24594:2;24579:18;;21259:36;-1:-1;;;;;43144:66;;;24677:2;24662:18;;20567:37;43601:24;;24758:2;24743:18;;21259:36;43144:66;24841:3;24826:19;;20567:37;24437:3;24422:19;;24408:448::o;25397:310::-;;25544:2;25565:17;25558:47;9189:5;41138:12;42051:6;25544:2;25533:9;25529:18;42039:19;9283:52;9328:6;42079:14;25533:9;42079:14;25544:2;9309:5;9305:16;9283:52;:::i;:::-;44801:7;44785:14;-1:-1;;44781:28;9347:39;;;;42079:14;9347:39;;25515:192;-1:-1;;25515:192::o;25714:416::-;25914:2;25928:47;;;9623:2;25899:18;;;42039:19;-1:-1;;;42079:14;;;9639:44;9702:12;;;25885:245::o;26137:416::-;26337:2;26351:47;;;9953:2;26322:18;;;42039:19;9989:30;42079:14;;;9969:51;10039:12;;;26308:245::o;26560:416::-;26760:2;26774:47;;;10290:2;26745:18;;;42039:19;10326:30;42079:14;;;10306:51;10376:12;;;26731:245::o;26983:416::-;27183:2;27197:47;;;10627:2;27168:18;;;42039:19;10663:34;42079:14;;;10643:55;-1:-1;;;10718:12;;;10711:30;10760:12;;;27154:245::o;27406:416::-;27606:2;27620:47;;;11011:2;27591:18;;;42039:19;-1:-1;;;42079:14;;;11027:37;11083:12;;;27577:245::o;27829:416::-;28029:2;28043:47;;;11334:2;28014:18;;;42039:19;-1:-1;;;42079:14;;;11350:37;11406:12;;;28000:245::o;28252:416::-;28452:2;28466:47;;;11657:2;28437:18;;;42039:19;-1:-1;;;42079:14;;;11673:39;11731:12;;;28423:245::o;28675:416::-;28875:2;28889:47;;;11982:2;28860:18;;;42039:19;-1:-1;;;42079:14;;;11998:36;12053:12;;;28846:245::o;29521:416::-;29721:2;29735:47;;;12688:2;29706:18;;;42039:19;-1:-1;;;42079:14;;;12704:35;12758:12;;;29692:245::o;29944:416::-;30144:2;30158:47;;;13009:2;30129:18;;;42039:19;-1:-1;;;42079:14;;;13025:38;13082:12;;;30115:245::o;30367:416::-;30567:2;30581:47;;;13333:2;30552:18;;;42039:19;-1:-1;;;42079:14;;;13349:47;13415:12;;;30538:245::o;30790:416::-;30990:2;31004:47;;;13666:2;30975:18;;;42039:19;13702:30;42079:14;;;13682:51;13752:12;;;30961:245::o;31213:416::-;31413:2;31427:47;;;14003:1;31398:18;;;42039:19;-1:-1;;;42079:14;;;14018:32;14069:12;;;31384:245::o;31636:416::-;31836:2;31850:47;;;14320:2;31821:18;;;42039:19;-1:-1;;;42079:14;;;14336:37;14392:12;;;31807:245::o;32059:416::-;32259:2;32273:47;;;32244:18;;;42039:19;14679:34;42079:14;;;14659:55;14733:12;;;32230:245::o;32482:416::-;32682:2;32696:47;;;14984:2;32667:18;;;42039:19;15020:30;42079:14;;;15000:51;15070:12;;;32653:245::o;32905:416::-;33105:2;33119:47;;;15321:2;33090:18;;;42039:19;15357:31;42079:14;;;15337:52;15408:12;;;33076:245::o;33328:416::-;33528:2;33542:47;;;15659:1;33513:18;;;42039:19;-1:-1;;;42079:14;;;15674:32;15725:12;;;33499:245::o;33751:416::-;33951:2;33965:47;;;15976:1;33936:18;;;42039:19;-1:-1;;;42079:14;;;15991:31;16041:12;;;33922:245::o;34174:416::-;34374:2;34388:47;;;16292:2;34359:18;;;42039:19;16328:31;42079:14;;;16308:52;16379:12;;;34345:245::o;34597:416::-;34797:2;34811:47;;;16630:2;34782:18;;;42039:19;16666:29;42079:14;;;16646:50;16715:12;;;34768:245::o;35020:416::-;35220:2;35234:47;;;16966:2;35205:18;;;42039:19;17002:34;42079:14;;;16982:55;-1:-1;;;17057:12;;;17050:34;17103:12;;;35191:245::o;35443:416::-;35643:2;35657:47;;;17354:2;35628:18;;;42039:19;17390:30;42079:14;;;17370:51;17440:12;;;35614:245::o;35866:416::-;36066:2;36080:47;;;17691:2;36051:18;;;42039:19;17727:33;42079:14;;;17707:54;17780:12;;;36037:245::o;36289:416::-;36489:2;36503:47;;;18031:2;36474:18;;;42039:19;18067:34;42079:14;;;18047:55;-1:-1;;;18122:12;;;18115:46;18180:12;;;36460:245::o;36712:416::-;36912:2;36926:47;;;18431:2;36897:18;;;42039:19;-1:-1;;;42079:14;;;18447:47;18513:12;;;36883:245::o;37135:416::-;37335:2;37349:47;;;18764:2;37320:18;;;42039:19;18800:29;42079:14;;;18780:50;18849:12;;;37306:245::o;37558:222::-;-1:-1;;;;;42900:42;;;;20434:50;;37685:2;37670:18;;37656:124::o;37787:440::-;-1:-1;;;;;42900:42;;;20194:37;;42900:42;;;;38132:2;38117:18;;20194:37;43517:10;43506:22;;;38213:2;38198:18;;21025:36;37968:2;37953:18;;37939:288::o;38234:329::-;-1:-1;;;;;43284:70;;;;20687:37;;43517:10;43506:22;38549:2;38534:18;;21025:36;38387:2;38372:18;;38358:205::o;38570:222::-;20797:37;;;38697:2;38682:18;;38668:124::o;38799:444::-;20797:37;;;-1:-1;;;;;42900:42;;;39146:2;39131:18;;20434:50;42900:42;39229:2;39214:18;;20434:50;38982:2;38967:18;;38953:290::o;39250:333::-;20797:37;;;39569:2;39554:18;;20797:37;39405:2;39390:18;;39376:207::o;39590:820::-;;39909:3;39898:9;39894:19;20827:5;20804:3;20797:37;40074:2;20827:5;40074:2;40063:9;40059:18;20797:37;40157:2;20827:5;40157:2;40146:9;40142:18;20797:37;40194:2;39909:3;40194:2;40183:9;40179:18;40172:48;40234:166;7578:5;41138:12;42051:6;42046:3;42039:19;42079:14;39898:9;42079:14;7590:122;;40074:2;7812:5;40779:14;7824:21;;-1:-1;7851:347;7876:6;7873:1;7870:13;7851:347;;;7937:13;;19698:23;;-1:-1;;;;;42900:42;;;20194:37;;19861:16;;;19855:23;42900:42;19932:14;;;20194:37;20021:16;;20015:23;43517:10;43506:22;20090:14;;;21025:36;41724:14;;;;5986;;;;43027:42;7891:9;7851:347;;;-1:-1;40226:174;;39880:530;-1:-1;;;;;;;;;;;39880:530::o;40417:214::-;43708:4;43697:16;;;;21374:35;;40540:2;40525:18;;40511:120::o;44441:268::-;44506:1;44513:101;44527:6;44524:1;44521:13;44513:101;;;44594:11;;;44588:18;44575:11;;;44568:39;44549:2;44542:10;44513:101;;;44629:6;44626:1;44623:13;44620:2;;;-1:-1;;44506:1;44676:16;;44669:27;44490:219::o;44822:117::-;-1:-1;;;;;43016:54;;44881:35;;44871:2;;44930:1;;44920:12;44871:2;44865:74;:::o;44946:111::-;45027:5;42812:13;42805:21;45005:5;45002:32;44992:2;;45048:1;;45038:12"},"gasEstimates":{"creation":{"codeDepositCost":"3326000","executionCost":"infinite","totalCost":"infinite"},"external":{"addReward(address,address,bool)":"infinite","approveRewardDistributor(address,address,bool)":"infinite","balanceAtEpochOf(uint256,address)":"infinite","balanceOf(address)":"infinite","balances(address)":"1574","boostPayment()":"1137","boostRate()":"1207","boostedSupply()":"1161","checkpointEpoch()":"infinite","claimableRewards(address)":"infinite","decimals()":"infinite","denominator()":"384","epochCount()":"1227","epochs(uint256)":"2177","escrowDuration()":"1074","findEpochId(uint256)":"infinite","getReward(address)":"infinite","getRewardForDuration(address)":"infinite","isShutdown()":"1239","kickExpiredLocks(address)":"infinite","kickRewardEpochDelay()":"1072","kickRewardPerEpoch()":"1206","lastTimeRewardApplicable(address)":"infinite","lock(address,uint256,uint256)":"infinite","lockDuration()":"275","lockedBalanceOf(address)":"1361","lockedBalances(address)":"infinite","lockedSupply()":"1139","maximumBoostPayment()":"1139","name()":"infinite","nextBoostRate()":"1161","nextMaximumBoostPayment()":"1205","notifyRewardAmount(address,uint256)":"infinite","owner()":"1182","processExpiredLocks(bool)":"infinite","processExpiredLocks(bool,uint256,address)":"infinite","recoverERC20(address,uint256)":"infinite","renounceOwnership()":"24341","rewardData(address)":"2487","rewardDistributors(address,address)":"infinite","rewardPerToken(address)":"infinite","rewardTokens(uint256)":"2193","rewardWeightOf(address)":"1365","rewards(address,address)":"infinite","rewardsDuration()":"362","rewardsEscrow()":"1202","setApprovals()":"infinite","setBoost(uint256,uint256,address)":"62284","setEscrowDuration(uint256)":"23433","setKickIncentive(uint256,uint256)":"41353","setRewardsEscrow(address)":"24393","shutdown()":"22096","stakingToken()":"1181","symbol()":"infinite","totalSupply()":"infinite","totalSupplyAtEpoch(uint256)":"infinite","transferOwnership(address)":"24649","userLocks(address,uint256)":"2408","userRewardPerTokenPaid(address,address)":"infinite"},"internal":{"_checkpointEpoch()":"infinite","_earned(address,address,uint256)":"infinite","_getDelayAdjustedReward(uint256,struct PopLocker.LockedBalance storage pointer)":"infinite","_lastTimeRewardApplicable(uint256)":"103","_lock(address,uint256,uint256)":"infinite","_notifyReward(address,uint256)":"infinite","_processExpiredLocks(address,bool,uint256,address,address,uint256)":"infinite","_rewardPerToken(address)":"infinite"}},"methodIdentifiers":{"addReward(address,address,bool)":"d3c45c76","approveRewardDistributor(address,address,bool)":"6724c910","balanceAtEpochOf(uint256,address)":"1c607395","balanceOf(address)":"70a08231","balances(address)":"27e235e3","boostPayment()":"a98e05bb","boostRate()":"2e9564e4","boostedSupply()":"75aadf61","checkpointEpoch()":"c1009f4b","claimableRewards(address)":"dc01f60d","decimals()":"313ce567","denominator()":"96ce0795","epochCount()":"829965cc","epochs(uint256)":"c6b61e4c","escrowDuration()":"57c2c2ba","findEpochId(uint256)":"f8261597","getReward(address)":"c00007b0","getRewardForDuration(address)":"bcd11014","isShutdown()":"bf86d690","kickExpiredLocks(address)":"887c7dc5","kickRewardEpochDelay()":"e432488d","kickRewardPerEpoch()":"9bdc7467","lastTimeRewardApplicable(address)":"638634ee","lock(address,uint256,uint256)":"e2ab691d","lockDuration()":"04554443","lockedBalanceOf(address)":"59355736","lockedBalances(address)":"0483a7f6","lockedSupply()":"ca5c7b91","maximumBoostPayment()":"b187bc22","name()":"06fdde03","nextBoostRate()":"b5ed7a66","nextMaximumBoostPayment()":"7bd48c7c","notifyRewardAmount(address,uint256)":"b66503cf","owner()":"8da5cb5b","processExpiredLocks(bool)":"312ff839","processExpiredLocks(bool,uint256,address)":"70e664cd","recoverERC20(address,uint256)":"8980f11f","renounceOwnership()":"715018a6","rewardData(address)":"48e5d9f8","rewardDistributors(address,address)":"39fc9713","rewardPerToken(address)":"f1229777","rewardTokens(uint256)":"7bb7bed1","rewardWeightOf(address)":"2fe87108","rewards(address,address)":"e70b9e27","rewardsDuration()":"386a9525","rewardsEscrow()":"f2157932","setApprovals()":"8757b15b","setBoost(uint256,uint256,address)":"a81653c9","setEscrowDuration(uint256)":"321bc347","setKickIncentive(uint256,uint256)":"63f1c8e2","setRewardsEscrow(address)":"e465fe80","shutdown()":"fc0e74d1","stakingToken()":"72f702f3","symbol()":"95d89b41","totalSupply()":"18160ddd","totalSupplyAtEpoch(uint256)":"70b36d79","transferOwnership(address)":"f2fde38b","userLocks(address,uint256)":"aa33fedb","userRewardPerTokenPaid(address,address)":"7035ab98"}},"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"contract IRewardsEscrow\",\"name\":\"_rewardsEscrow\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_previousDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newDuration\",\"type\":\"uint256\"}],\"name\":\"EscrowDurationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_kicked\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"}],\"name\":\"KickReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Recovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Relocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"}],\"name\":\"RewardAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_previous\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_new\",\"type\":\"address\"}],\"name\":\"RewardsEscrowUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_paidAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_lockedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_boostedAmount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_distributor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_useBoost\",\"type\":\"bool\"}],\"name\":\"addReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_distributor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"approveRewardDistributor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_epoch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"balanceAtEpochOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"locked\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"boosted\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"nextUnlockIndex\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"boostPayment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"boostRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"boostedSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkpointEpoch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"claimableRewards\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct PopLocker.EarnedData[]\",\"name\":\"userRewards\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"denominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"epochCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"epochs\",\"outputs\":[{\"internalType\":\"uint224\",\"name\":\"supply\",\"type\":\"uint224\"},{\"internalType\":\"uint32\",\"name\":\"date\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"escrowDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"findEpochId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"}],\"name\":\"getRewardForDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isShutdown\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"kickExpiredLocks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kickRewardEpochDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kickRewardPerEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"}],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_spendRatio\",\"type\":\"uint256\"}],\"name\":\"lock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"lockedBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"lockedBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"locked\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint112\",\"name\":\"amount\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"boosted\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unlockTime\",\"type\":\"uint32\"}],\"internalType\":\"struct PopLocker.LockedBalance[]\",\"name\":\"lockData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockedSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maximumBoostPayment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextBoostRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextMaximumBoostPayment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_relock\",\"type\":\"bool\"}],\"name\":\"processExpiredLocks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_relock\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_spendRatio\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_withdrawTo\",\"type\":\"address\"}],\"name\":\"processExpiredLocks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"}],\"name\":\"recoverERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewardData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"useBoost\",\"type\":\"bool\"},{\"internalType\":\"uint40\",\"name\":\"periodFinish\",\"type\":\"uint40\"},{\"internalType\":\"uint208\",\"name\":\"rewardRate\",\"type\":\"uint208\"},{\"internalType\":\"uint40\",\"name\":\"lastUpdateTime\",\"type\":\"uint40\"},{\"internalType\":\"uint208\",\"name\":\"rewardPerTokenStored\",\"type\":\"uint208\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewardDistributors\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"}],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewardTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"rewardWeightOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsEscrow\",\"outputs\":[{\"internalType\":\"contract IRewardsEscrow\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setApprovals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_max\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receivingAddress\",\"type\":\"address\"}],\"name\":\"setBoost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"setEscrowDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_delay\",\"type\":\"uint256\"}],\"name\":\"setKickIncentive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsEscrow\",\"type\":\"address\"}],\"name\":\"setRewardsEscrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shutdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_epoch\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAtEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userLocks\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"amount\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"boosted\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unlockTime\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardPerTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/dao/PopLocker.sol\":\"PopLocker\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/core/dao/PopLocker.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n// Docgen-SOLC: 0.6.12\\n\\nimport \\\"openzeppelin-v3/token/ERC20/IERC20.sol\\\";\\nimport \\\"openzeppelin-v3/token/ERC20/SafeERC20.sol\\\";\\nimport \\\"openzeppelin-v3/math/Math.sol\\\";\\nimport \\\"openzeppelin-v3/access/Ownable.sol\\\";\\nimport \\\"openzeppelin-v3/utils/ReentrancyGuard.sol\\\";\\n\\nimport \\\"../libraries/BoringMath.sol\\\";\\nimport \\\"../interfaces/IRewardsEscrow.sol\\\";\\n\\npragma solidity 0.6.12;\\npragma experimental ABIEncoderV2;\\n\\n// POP locked in this contract will be entitled to voting rights for popcorn.network\\n// Based on CVX Locking contract for https://www.convexfinance.com/\\n// Based on EPS Staking contract for http://ellipsis.finance/\\n// Based on SNX MultiRewards by iamdefinitelyahuman - https://github.com/iamdefinitelyahuman/multi-rewards\\n\\ncontract PopLocker is ReentrancyGuard, Ownable {\\n  using BoringMath for uint256;\\n  using BoringMath224 for uint224;\\n  using BoringMath112 for uint112;\\n  using BoringMath32 for uint32;\\n  using SafeERC20 for IERC20;\\n\\n  /* ========== STATE VARIABLES ========== */\\n\\n  struct Reward {\\n    bool useBoost;\\n    uint40 periodFinish;\\n    uint208 rewardRate;\\n    uint40 lastUpdateTime;\\n    uint208 rewardPerTokenStored;\\n  }\\n  struct Balances {\\n    uint112 locked;\\n    uint112 boosted;\\n    uint32 nextUnlockIndex;\\n  }\\n  struct LockedBalance {\\n    uint112 amount;\\n    uint112 boosted;\\n    uint32 unlockTime;\\n  }\\n  struct EarnedData {\\n    address token;\\n    uint256 amount;\\n  }\\n  struct Epoch {\\n    uint224 supply; //epoch boosted supply\\n    uint32 date; //epoch start date\\n  }\\n\\n  //token constants\\n  IERC20 public stakingToken;\\n  IRewardsEscrow public rewardsEscrow;\\n\\n  //rewards\\n  address[] public rewardTokens;\\n  mapping(address => Reward) public rewardData;\\n\\n  // duration in seconds for rewards to be held in escrow\\n  uint256 public escrowDuration;\\n\\n  // Duration that rewards are streamed over\\n  uint256 public constant rewardsDuration = 7 days;\\n\\n  // Duration of lock/earned penalty period\\n  uint256 public constant lockDuration = rewardsDuration * 12;\\n\\n  // reward token -> distributor -> is approved to add rewards\\n  mapping(address => mapping(address => bool)) public rewardDistributors;\\n\\n  // user -> reward token -> amount\\n  mapping(address => mapping(address => uint256)) public userRewardPerTokenPaid;\\n  mapping(address => mapping(address => uint256)) public rewards;\\n\\n  //supplies and epochs\\n  uint256 public lockedSupply;\\n  uint256 public boostedSupply;\\n  Epoch[] public epochs;\\n\\n  //mappings for balance data\\n  mapping(address => Balances) public balances;\\n  mapping(address => LockedBalance[]) public userLocks;\\n\\n  //boost\\n  address public boostPayment;\\n  uint256 public maximumBoostPayment = 0;\\n  uint256 public boostRate = 10000;\\n  uint256 public nextMaximumBoostPayment = 0;\\n  uint256 public nextBoostRate = 10000;\\n  uint256 public constant denominator = 10000;\\n\\n  //management\\n  uint256 public kickRewardPerEpoch = 100;\\n  uint256 public kickRewardEpochDelay = 4;\\n\\n  //shutdown\\n  bool public isShutdown = false;\\n\\n  //erc20-like interface\\n  string private _name;\\n  string private _symbol;\\n  uint8 private immutable _decimals;\\n\\n  /* ========== CONSTRUCTOR ========== */\\n\\n  constructor(IERC20 _stakingToken, IRewardsEscrow _rewardsEscrow) public Ownable() {\\n    _name = \\\"Vote Locked POP Token\\\";\\n    _symbol = \\\"vlPOP\\\";\\n    _decimals = 18;\\n\\n    stakingToken = _stakingToken;\\n    rewardsEscrow = _rewardsEscrow;\\n    escrowDuration = 365 days;\\n\\n    uint256 currentEpoch = block.timestamp.div(rewardsDuration).mul(rewardsDuration);\\n    epochs.push(Epoch({ supply: 0, date: uint32(currentEpoch) }));\\n  }\\n\\n  function decimals() public view returns (uint8) {\\n    return _decimals;\\n  }\\n\\n  function name() public view returns (string memory) {\\n    return _name;\\n  }\\n\\n  function symbol() public view returns (string memory) {\\n    return _symbol;\\n  }\\n\\n  /* ========== ADMIN CONFIGURATION ========== */\\n\\n  // Add a new reward token to be distributed to stakers\\n  function addReward(\\n    address _rewardsToken,\\n    address _distributor,\\n    bool _useBoost\\n  ) public onlyOwner {\\n    require(rewardData[_rewardsToken].lastUpdateTime == 0);\\n    rewardTokens.push(_rewardsToken);\\n    rewardData[_rewardsToken].lastUpdateTime = uint40(block.timestamp);\\n    rewardData[_rewardsToken].periodFinish = uint40(block.timestamp);\\n    rewardData[_rewardsToken].useBoost = _useBoost;\\n    rewardDistributors[_rewardsToken][_distributor] = true;\\n  }\\n\\n  // Modify approval for an address to call notifyRewardAmount\\n  function approveRewardDistributor(\\n    address _rewardsToken,\\n    address _distributor,\\n    bool _approved\\n  ) external onlyOwner {\\n    require(rewardData[_rewardsToken].lastUpdateTime > 0, \\\"rewards token does not exist\\\");\\n    rewardDistributors[_rewardsToken][_distributor] = _approved;\\n  }\\n\\n  //set boost parameters\\n  function setBoost(\\n    uint256 _max,\\n    uint256 _rate,\\n    address _receivingAddress\\n  ) external onlyOwner {\\n    require(_max < 1500, \\\"over max payment\\\"); //max 15%\\n    require(_rate < 30000, \\\"over max rate\\\"); //max 3x\\n    require(_receivingAddress != address(0), \\\"invalid address\\\"); //must point somewhere valid\\n    nextMaximumBoostPayment = _max;\\n    nextBoostRate = _rate;\\n    boostPayment = _receivingAddress;\\n  }\\n\\n  function setEscrowDuration(uint256 duration) external onlyOwner {\\n    emit EscrowDurationUpdated(escrowDuration, duration);\\n    escrowDuration = duration;\\n  }\\n\\n  //set kick incentive\\n  function setKickIncentive(uint256 _rate, uint256 _delay) external onlyOwner {\\n    require(_rate <= 500, \\\"over max rate\\\"); //max 5% per epoch\\n    require(_delay >= 2, \\\"min delay\\\"); //minimum 2 epochs of grace\\n    kickRewardPerEpoch = _rate;\\n    kickRewardEpochDelay = _delay;\\n  }\\n\\n  //shutdown the contract.\\n  function shutdown() external onlyOwner {\\n    isShutdown = true;\\n  }\\n\\n  //set approvals for rewards escrow\\n  function setApprovals() external {\\n    IERC20(stakingToken).safeApprove(address(rewardsEscrow), 0);\\n    IERC20(stakingToken).safeApprove(address(rewardsEscrow), uint256(-1));\\n  }\\n\\n  /* ========== VIEWS ========== */\\n\\n  function _rewardPerToken(address _rewardsToken) internal view returns (uint256) {\\n    if (boostedSupply == 0) {\\n      return rewardData[_rewardsToken].rewardPerTokenStored;\\n    }\\n    return\\n      uint256(rewardData[_rewardsToken].rewardPerTokenStored).add(\\n        _lastTimeRewardApplicable(rewardData[_rewardsToken].periodFinish)\\n          .sub(rewardData[_rewardsToken].lastUpdateTime)\\n          .mul(rewardData[_rewardsToken].rewardRate)\\n          .mul(1e18)\\n          .div(rewardData[_rewardsToken].useBoost ? boostedSupply : lockedSupply)\\n      );\\n  }\\n\\n  function _earned(\\n    address _user,\\n    address _rewardsToken,\\n    uint256 _balance\\n  ) internal view returns (uint256) {\\n    return\\n      _balance.mul(_rewardPerToken(_rewardsToken).sub(userRewardPerTokenPaid[_user][_rewardsToken])).div(1e18).add(\\n        rewards[_user][_rewardsToken]\\n      );\\n  }\\n\\n  function _lastTimeRewardApplicable(uint256 _finishTime) internal view returns (uint256) {\\n    return Math.min(block.timestamp, _finishTime);\\n  }\\n\\n  function lastTimeRewardApplicable(address _rewardsToken) public view returns (uint256) {\\n    return _lastTimeRewardApplicable(rewardData[_rewardsToken].periodFinish);\\n  }\\n\\n  function rewardPerToken(address _rewardsToken) external view returns (uint256) {\\n    return _rewardPerToken(_rewardsToken);\\n  }\\n\\n  function getRewardForDuration(address _rewardsToken) external view returns (uint256) {\\n    return uint256(rewardData[_rewardsToken].rewardRate).mul(rewardsDuration);\\n  }\\n\\n  // Address and claimable amount of all reward tokens for the given account\\n  function claimableRewards(address _account) external view returns (EarnedData[] memory userRewards) {\\n    userRewards = new EarnedData[](rewardTokens.length);\\n    Balances storage userBalance = balances[_account];\\n    uint256 boostedBal = userBalance.boosted;\\n    for (uint256 i = 0; i < userRewards.length; i++) {\\n      address token = rewardTokens[i];\\n      userRewards[i].token = token;\\n      userRewards[i].amount = _earned(_account, token, rewardData[token].useBoost ? boostedBal : userBalance.locked);\\n    }\\n    return userRewards;\\n  }\\n\\n  // Total BOOSTED balance of an account, including unlocked but not withdrawn tokens\\n  function rewardWeightOf(address _user) external view returns (uint256 amount) {\\n    return balances[_user].boosted;\\n  }\\n\\n  // total token balance of an account, including unlocked but not withdrawn tokens\\n  function lockedBalanceOf(address _user) external view returns (uint256 amount) {\\n    return balances[_user].locked;\\n  }\\n\\n  //BOOSTED balance of an account which only includes properly locked tokens as of the most recent eligible epoch\\n  function balanceOf(address _user) external view returns (uint256 amount) {\\n    LockedBalance[] storage locks = userLocks[_user];\\n    Balances storage userBalance = balances[_user];\\n    uint256 nextUnlockIndex = userBalance.nextUnlockIndex;\\n\\n    //start with current boosted amount\\n    amount = balances[_user].boosted;\\n\\n    uint256 locksLength = locks.length;\\n    //remove old records only (will be better gas-wise than adding up)\\n    for (uint256 i = nextUnlockIndex; i < locksLength; i++) {\\n      if (locks[i].unlockTime <= block.timestamp) {\\n        amount = amount.sub(locks[i].boosted);\\n      } else {\\n        //stop now as no futher checks are needed\\n        break;\\n      }\\n    }\\n\\n    //also remove amount in the current epoch\\n    uint256 currentEpoch = block.timestamp.div(rewardsDuration).mul(rewardsDuration);\\n    if (locksLength > 0 && uint256(locks[locksLength - 1].unlockTime).sub(lockDuration) == currentEpoch) {\\n      amount = amount.sub(locks[locksLength - 1].boosted);\\n    }\\n\\n    return amount;\\n  }\\n\\n  //BOOSTED balance of an account which only includes properly locked tokens at the given epoch\\n  function balanceAtEpochOf(uint256 _epoch, address _user) external view returns (uint256 amount) {\\n    LockedBalance[] storage locks = userLocks[_user];\\n\\n    //get timestamp of given epoch index\\n    uint256 epochTime = epochs[_epoch].date;\\n    //get timestamp of first non-inclusive epoch\\n    uint256 cutoffEpoch = epochTime.sub(lockDuration);\\n\\n    //current epoch is not counted\\n    uint256 currentEpoch = block.timestamp.div(rewardsDuration).mul(rewardsDuration);\\n\\n    //need to add up since the range could be in the middle somewhere\\n    //traverse inversely to make more current queries more gas efficient\\n    for (uint256 i = locks.length - 1; i + 1 != 0; i--) {\\n      uint256 lockEpoch = uint256(locks[i].unlockTime).sub(lockDuration);\\n      //lock epoch must be less or equal to the epoch we're basing from.\\n      //also not include the current epoch\\n      if (lockEpoch <= epochTime && lockEpoch < currentEpoch) {\\n        if (lockEpoch > cutoffEpoch) {\\n          amount = amount.add(locks[i].boosted);\\n        } else {\\n          //stop now as no futher checks matter\\n          break;\\n        }\\n      }\\n    }\\n\\n    return amount;\\n  }\\n\\n  //supply of all properly locked BOOSTED balances at most recent eligible epoch\\n  function totalSupply() external view returns (uint256 supply) {\\n    uint256 currentEpoch = block.timestamp.div(rewardsDuration).mul(rewardsDuration);\\n    uint256 cutoffEpoch = currentEpoch.sub(lockDuration);\\n    uint256 epochindex = epochs.length;\\n\\n    //do not include current epoch's supply\\n    if (uint256(epochs[epochindex - 1].date) == currentEpoch) {\\n      epochindex--;\\n    }\\n\\n    //traverse inversely to make more current queries more gas efficient\\n    for (uint256 i = epochindex - 1; i + 1 != 0; i--) {\\n      Epoch storage e = epochs[i];\\n      if (uint256(e.date) <= cutoffEpoch) {\\n        break;\\n      }\\n      supply = supply.add(e.supply);\\n    }\\n\\n    return supply;\\n  }\\n\\n  //supply of all properly locked BOOSTED balances at the given epoch\\n  function totalSupplyAtEpoch(uint256 _epoch) external view returns (uint256 supply) {\\n    uint256 epochStart = uint256(epochs[_epoch].date).div(rewardsDuration).mul(rewardsDuration);\\n    uint256 cutoffEpoch = epochStart.sub(lockDuration);\\n    uint256 currentEpoch = block.timestamp.div(rewardsDuration).mul(rewardsDuration);\\n\\n    //do not include current epoch's supply\\n    if (uint256(epochs[_epoch].date) == currentEpoch) {\\n      _epoch--;\\n    }\\n\\n    //traverse inversely to make more current queries more gas efficient\\n    for (uint256 i = _epoch; i + 1 != 0; i--) {\\n      Epoch storage e = epochs[i];\\n      if (uint256(e.date) <= cutoffEpoch) {\\n        break;\\n      }\\n      supply = supply.add(epochs[i].supply);\\n    }\\n\\n    return supply;\\n  }\\n\\n  //find an epoch index based on timestamp\\n  function findEpochId(uint256 _time) external view returns (uint256 epoch) {\\n    uint256 max = epochs.length - 1;\\n    uint256 min = 0;\\n\\n    //convert to start point\\n    _time = _time.div(rewardsDuration).mul(rewardsDuration);\\n\\n    for (uint256 i = 0; i < 128; i++) {\\n      if (min >= max) break;\\n\\n      uint256 mid = (min + max + 1) / 2;\\n      uint256 midEpochBlock = epochs[mid].date;\\n      if (midEpochBlock == _time) {\\n        //found\\n        return mid;\\n      } else if (midEpochBlock < _time) {\\n        min = mid;\\n      } else {\\n        max = mid - 1;\\n      }\\n    }\\n    return min;\\n  }\\n\\n  // Information on a user's locked balances\\n  function lockedBalances(address _user)\\n    external\\n    view\\n    returns (\\n      uint256 total,\\n      uint256 unlockable,\\n      uint256 locked,\\n      LockedBalance[] memory lockData\\n    )\\n  {\\n    LockedBalance[] storage locks = userLocks[_user];\\n    Balances storage userBalance = balances[_user];\\n    uint256 nextUnlockIndex = userBalance.nextUnlockIndex;\\n    uint256 idx;\\n    for (uint256 i = nextUnlockIndex; i < locks.length; i++) {\\n      if (locks[i].unlockTime > block.timestamp) {\\n        if (idx == 0) {\\n          lockData = new LockedBalance[](locks.length - i);\\n        }\\n        lockData[idx] = locks[i];\\n        idx++;\\n        locked = locked.add(locks[i].amount);\\n      } else {\\n        unlockable = unlockable.add(locks[i].amount);\\n      }\\n    }\\n    return (userBalance.locked, unlockable, locked, lockData);\\n  }\\n\\n  //number of epochs\\n  function epochCount() external view returns (uint256) {\\n    return epochs.length;\\n  }\\n\\n  /* ========== MUTATIVE FUNCTIONS ========== */\\n\\n  function checkpointEpoch() external {\\n    _checkpointEpoch();\\n  }\\n\\n  //insert a new epoch if needed. fill in any gaps\\n  function _checkpointEpoch() internal {\\n    uint256 currentEpoch = block.timestamp.div(rewardsDuration).mul(rewardsDuration);\\n    uint256 epochindex = epochs.length;\\n\\n    //first epoch add in constructor, no need to check 0 length\\n\\n    //check to add\\n    if (epochs[epochindex - 1].date < currentEpoch) {\\n      //fill any epoch gaps\\n      while (epochs[epochs.length - 1].date != currentEpoch) {\\n        uint256 nextEpochDate = uint256(epochs[epochs.length - 1].date).add(rewardsDuration);\\n        epochs.push(Epoch({ supply: 0, date: uint32(nextEpochDate) }));\\n      }\\n\\n      //update boost parameters on a new epoch\\n      if (boostRate != nextBoostRate) {\\n        boostRate = nextBoostRate;\\n      }\\n      if (maximumBoostPayment != nextMaximumBoostPayment) {\\n        maximumBoostPayment = nextMaximumBoostPayment;\\n      }\\n    }\\n  }\\n\\n  // Locked tokens cannot be withdrawn for lockDuration and are eligible to receive stakingReward rewards\\n  function lock(\\n    address _account,\\n    uint256 _amount,\\n    uint256 _spendRatio\\n  ) external nonReentrant {\\n    //pull tokens\\n    stakingToken.safeTransferFrom(msg.sender, address(this), _amount);\\n\\n    //lock\\n    _lock(_account, _amount, _spendRatio);\\n  }\\n\\n  //lock tokens\\n  function _lock(\\n    address _account,\\n    uint256 _amount,\\n    uint256 _spendRatio\\n  ) internal updateReward(_account) {\\n    require(_amount > 0, \\\"Cannot stake 0\\\");\\n    require(_spendRatio <= maximumBoostPayment, \\\"over max spend\\\");\\n    require(!isShutdown, \\\"shutdown\\\");\\n\\n    Balances storage bal = balances[_account];\\n\\n    //must try check pointing epoch first\\n    _checkpointEpoch();\\n\\n    //calc lock and boosted amount\\n    uint256 spendAmount = _amount.mul(_spendRatio).div(denominator);\\n    uint256 boostRatio = boostRate.mul(_spendRatio).div(maximumBoostPayment == 0 ? 1 : maximumBoostPayment);\\n    uint112 lockAmount = _amount.sub(spendAmount).to112();\\n    uint112 boostedAmount = _amount.add(_amount.mul(boostRatio).div(denominator)).to112();\\n\\n    //add user balances\\n    bal.locked = bal.locked.add(lockAmount);\\n    bal.boosted = bal.boosted.add(boostedAmount);\\n\\n    //add to total supplies\\n    lockedSupply = lockedSupply.add(lockAmount);\\n    boostedSupply = boostedSupply.add(boostedAmount);\\n\\n    //add user lock records or add to current\\n    uint256 currentEpoch = block.timestamp.div(rewardsDuration).mul(rewardsDuration);\\n    uint256 unlockTime = currentEpoch.add(lockDuration);\\n    uint256 idx = userLocks[_account].length;\\n    if (idx == 0 || userLocks[_account][idx - 1].unlockTime < unlockTime) {\\n      userLocks[_account].push(\\n        LockedBalance({ amount: lockAmount, boosted: boostedAmount, unlockTime: uint32(unlockTime) })\\n      );\\n    } else {\\n      LockedBalance storage userL = userLocks[_account][idx - 1];\\n      userL.amount = userL.amount.add(lockAmount);\\n      userL.boosted = userL.boosted.add(boostedAmount);\\n    }\\n\\n    //update epoch supply, epoch checkpointed above so safe to add to latest\\n    Epoch storage e = epochs[epochs.length - 1];\\n    e.supply = e.supply.add(uint224(boostedAmount));\\n\\n    //send boost payment\\n    if (spendAmount > 0) {\\n      stakingToken.safeTransfer(boostPayment, spendAmount);\\n    }\\n\\n    emit Staked(_account, _amount, lockAmount, boostedAmount);\\n  }\\n\\n  // Withdraw all currently locked tokens where the unlock time has passed\\n  function _processExpiredLocks(\\n    address _account,\\n    bool _relock,\\n    uint256 _spendRatio,\\n    address _withdrawTo,\\n    address _rewardAddress,\\n    uint256 _checkDelay\\n  ) internal updateReward(_account) {\\n    LockedBalance[] storage locks = userLocks[_account];\\n    Balances storage userBalance = balances[_account];\\n    uint112 locked;\\n    uint112 boostedAmount;\\n    uint256 length = locks.length;\\n    uint256 reward = 0;\\n\\n    if (isShutdown || locks[length - 1].unlockTime <= block.timestamp.sub(_checkDelay)) {\\n      //if time is beyond last lock, can just bundle everything together\\n      locked = userBalance.locked;\\n      boostedAmount = userBalance.boosted;\\n\\n      //dont delete, just set next index\\n      userBalance.nextUnlockIndex = length.to32();\\n\\n      //check for kick reward\\n      //this wont have the exact reward rate that you would get if looped through\\n      //but this section is supposed to be for quick and easy low gas processing of all locks\\n      //we'll assume that if the reward was good enough someone would have processed at an earlier epoch\\n      if (_checkDelay > 0) {\\n        reward = _getDelayAdjustedReward(_checkDelay, locks[length - 1]);\\n      }\\n    } else {\\n      //use a processed index(nextUnlockIndex) to not loop as much\\n      //deleting does not change array length\\n      uint32 nextUnlockIndex = userBalance.nextUnlockIndex;\\n      for (uint256 i = nextUnlockIndex; i < length; i++) {\\n        //unlock time must be less or equal to time\\n        if (locks[i].unlockTime > block.timestamp.sub(_checkDelay)) break;\\n\\n        //add to cumulative amounts\\n        locked = locked.add(locks[i].amount);\\n        boostedAmount = boostedAmount.add(locks[i].boosted);\\n\\n        //check for kick reward\\n        //each epoch over due increases reward\\n        if (_checkDelay > 0) {\\n          reward = reward.add(_getDelayAdjustedReward(_checkDelay, locks[i]));\\n        }\\n        //set next unlock index\\n        nextUnlockIndex++;\\n      }\\n      //update next unlock index\\n      userBalance.nextUnlockIndex = nextUnlockIndex;\\n    }\\n    require(locked > 0, \\\"no exp locks\\\");\\n\\n    //update user balances and total supplies\\n    userBalance.locked = userBalance.locked.sub(locked);\\n    userBalance.boosted = userBalance.boosted.sub(boostedAmount);\\n    lockedSupply = lockedSupply.sub(locked);\\n    boostedSupply = boostedSupply.sub(boostedAmount);\\n\\n    //send process incentive\\n    if (reward > 0) {\\n      //if theres a reward(kicked), it will always be a withdraw only\\n\\n      //reduce return amount by the kick reward\\n      locked = locked.sub(reward.to112());\\n\\n      //transfer reward\\n      stakingToken.safeTransfer(_rewardAddress, reward);\\n\\n      emit KickReward(_rewardAddress, _account, reward);\\n    }\\n\\n    //relock or return to user\\n    if (_relock) {\\n      _lock(_withdrawTo, locked, _spendRatio);\\n      emit Relocked(_account, locked);\\n    } else {\\n      stakingToken.safeTransfer(_withdrawTo, locked);\\n      emit Withdrawn(_account, locked);\\n    }\\n  }\\n\\n  function _getDelayAdjustedReward(uint256 _checkDelay, LockedBalance storage lockedBalance)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    uint256 currentEpoch = block.timestamp.sub(_checkDelay).div(rewardsDuration).mul(rewardsDuration);\\n    uint256 epochsover = currentEpoch.sub(uint256(lockedBalance.unlockTime)).div(rewardsDuration);\\n    uint256 rRate = Math.min(kickRewardPerEpoch.mul(epochsover + 1), denominator);\\n    return uint256(lockedBalance.amount).mul(rRate).div(denominator);\\n  }\\n\\n  // Withdraw/relock all currently locked tokens where the unlock time has passed\\n  function processExpiredLocks(\\n    bool _relock,\\n    uint256 _spendRatio,\\n    address _withdrawTo\\n  ) external nonReentrant {\\n    _processExpiredLocks(msg.sender, _relock, _spendRatio, _withdrawTo, msg.sender, 0);\\n  }\\n\\n  // Withdraw/relock all currently locked tokens where the unlock time has passed\\n  function processExpiredLocks(bool _relock) external nonReentrant {\\n    _processExpiredLocks(msg.sender, _relock, 0, msg.sender, msg.sender, 0);\\n  }\\n\\n  function kickExpiredLocks(address _account) external nonReentrant {\\n    //allow kick after grace period of 'kickRewardEpochDelay'\\n    _processExpiredLocks(_account, false, 0, _account, msg.sender, rewardsDuration.mul(kickRewardEpochDelay));\\n  }\\n\\n  // Claim all pending rewards\\n  function getReward(address _account) public nonReentrant updateReward(_account) {\\n    for (uint256 i; i < rewardTokens.length; i++) {\\n      address _rewardsToken = rewardTokens[i];\\n      uint256 reward = rewards[_account][_rewardsToken];\\n      if (reward > 0) {\\n        rewards[_account][_rewardsToken] = 0;\\n        uint256 payout = reward.div(uint256(10));\\n        uint256 escrowed = payout.mul(uint256(9));\\n        IERC20(_rewardsToken).safeTransfer(_account, payout);\\n        IRewardsEscrow(rewardsEscrow).lock(_account, escrowed, escrowDuration);\\n        emit RewardPaid(_account, _rewardsToken, reward);\\n      }\\n    }\\n  }\\n\\n  /* ========== RESTRICTED FUNCTIONS ========== */\\n\\n  function _notifyReward(address _rewardsToken, uint256 _reward) internal {\\n    Reward storage rdata = rewardData[_rewardsToken];\\n\\n    if (block.timestamp >= rdata.periodFinish) {\\n      rdata.rewardRate = _reward.div(rewardsDuration).to208();\\n    } else {\\n      uint256 remaining = uint256(rdata.periodFinish).sub(block.timestamp);\\n      uint256 leftover = remaining.mul(rdata.rewardRate);\\n      rdata.rewardRate = _reward.add(leftover).div(rewardsDuration).to208();\\n    }\\n\\n    rdata.lastUpdateTime = block.timestamp.to40();\\n    rdata.periodFinish = block.timestamp.add(rewardsDuration).to40();\\n  }\\n\\n  function notifyRewardAmount(address _rewardsToken, uint256 _reward) external updateReward(address(0)) {\\n    require(rewardDistributors[_rewardsToken][msg.sender], \\\"not authorized\\\");\\n    require(_reward > 0, \\\"No reward\\\");\\n\\n    _notifyReward(_rewardsToken, _reward);\\n\\n    // handle the transfer of reward tokens via `transferFrom` to reduce the number\\n    // of transactions required and ensure correctness of the _reward amount\\n    IERC20(_rewardsToken).safeTransferFrom(msg.sender, address(this), _reward);\\n\\n    emit RewardAdded(_rewardsToken, _reward);\\n  }\\n\\n  function setRewardsEscrow(address _rewardsEscrow) external onlyOwner {\\n    emit RewardsEscrowUpdated(address(rewardsEscrow), _rewardsEscrow);\\n    rewardsEscrow = IRewardsEscrow(_rewardsEscrow);\\n  }\\n\\n  // Added to support recovering LP Rewards from other systems such as BAL to be distributed to holders\\n  function recoverERC20(address _tokenAddress, uint256 _tokenAmount) external onlyOwner {\\n    require(_tokenAddress != address(stakingToken), \\\"Cannot withdraw staking token\\\");\\n    require(rewardData[_tokenAddress].lastUpdateTime == 0, \\\"Cannot withdraw reward token\\\");\\n    IERC20(_tokenAddress).safeTransfer(owner(), _tokenAmount);\\n    emit Recovered(_tokenAddress, _tokenAmount);\\n  }\\n\\n  /* ========== MODIFIERS ========== */\\n\\n  modifier updateReward(address _account) {\\n    {\\n      //stack too deep\\n      Balances storage userBalance = balances[_account];\\n      uint256 boostedBal = userBalance.boosted;\\n      for (uint256 i = 0; i < rewardTokens.length; i++) {\\n        address token = rewardTokens[i];\\n        rewardData[token].rewardPerTokenStored = _rewardPerToken(token).to208();\\n        rewardData[token].lastUpdateTime = _lastTimeRewardApplicable(rewardData[token].periodFinish).to40();\\n        if (_account != address(0)) {\\n          //check if reward is boostable or not. use boosted or locked balance accordingly\\n          rewards[_account][token] = _earned(\\n            _account,\\n            token,\\n            rewardData[token].useBoost ? boostedBal : userBalance.locked\\n          );\\n          userRewardPerTokenPaid[_account][token] = rewardData[token].rewardPerTokenStored;\\n        }\\n      }\\n    }\\n    _;\\n  }\\n\\n  /* ========== EVENTS ========== */\\n  event RewardAdded(address indexed _token, uint256 _reward);\\n  event RewardsEscrowUpdated(address _previous, address _new);\\n  event Staked(address indexed _user, uint256 _paidAmount, uint256 _lockedAmount, uint256 _boostedAmount);\\n  event Withdrawn(address indexed _user, uint256 _amount);\\n  event Relocked(address indexed _user, uint256 _amount);\\n  event EscrowDurationUpdated(uint256 _previousDuration, uint256 _newDuration);\\n  event KickReward(address indexed _user, address indexed _kicked, uint256 _reward);\\n  event RewardPaid(address indexed _user, address indexed _rewardsToken, uint256 _reward);\\n  event Recovered(address _token, uint256 _amount);\\n}\\n\",\"keccak256\":\"0xa5363837200077729d7d2a6391a7aceae35db1365ab47b5c34d4dc356fbe53c0\",\"license\":\"GPL-3.0\"},\"contracts/core/interfaces/IRewardsEscrow.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n// Docgen-SOLC: 0.8.0\\n\\npragma solidity >0.6.0;\\n\\ninterface IRewardsEscrow {\\n  function lock(\\n    address _address,\\n    uint256 _amount,\\n    uint256 duration\\n  ) external;\\n\\n  function addAuthorizedContract(address _staking) external;\\n\\n  function removeAuthorizedContract(address _staking) external;\\n}\\n\",\"keccak256\":\"0x6106b3affc6f134a4ae62505206d54fed4d5b3c58026bf1fed87942fc10b1adb\",\"license\":\"GPL-3.0\"},\"contracts/core/libraries/BoringMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Docgen-SOLC: 0.6.12\\n\\npragma solidity 0.6.12;\\n\\n/// @notice A library for performing overflow-/underflow-safe math,\\n/// updated with awesomeness from of DappHub (https://github.com/dapphub/ds-math).\\nlibrary BoringMath {\\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n    require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n  }\\n\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    require(b > 0, \\\"BoringMath: division by zero\\\");\\n    return a / b;\\n  }\\n\\n  function to128(uint256 a) internal pure returns (uint128 c) {\\n    require(a <= uint128(-1), \\\"BoringMath: uint128 Overflow\\\");\\n    c = uint128(a);\\n  }\\n\\n  function to64(uint256 a) internal pure returns (uint64 c) {\\n    require(a <= uint64(-1), \\\"BoringMath: uint64 Overflow\\\");\\n    c = uint64(a);\\n  }\\n\\n  function to32(uint256 a) internal pure returns (uint32 c) {\\n    require(a <= uint32(-1), \\\"BoringMath: uint32 Overflow\\\");\\n    c = uint32(a);\\n  }\\n\\n  function to40(uint256 a) internal pure returns (uint40 c) {\\n    require(a <= uint40(-1), \\\"BoringMath: uint40 Overflow\\\");\\n    c = uint40(a);\\n  }\\n\\n  function to112(uint256 a) internal pure returns (uint112 c) {\\n    require(a <= uint112(-1), \\\"BoringMath: uint112 Overflow\\\");\\n    c = uint112(a);\\n  }\\n\\n  function to224(uint256 a) internal pure returns (uint224 c) {\\n    require(a <= uint224(-1), \\\"BoringMath: uint224 Overflow\\\");\\n    c = uint224(a);\\n  }\\n\\n  function to208(uint256 a) internal pure returns (uint208 c) {\\n    require(a <= uint208(-1), \\\"BoringMath: uint208 Overflow\\\");\\n    c = uint208(a);\\n  }\\n\\n  function to216(uint256 a) internal pure returns (uint216 c) {\\n    require(a <= uint216(-1), \\\"BoringMath: uint216 Overflow\\\");\\n    c = uint216(a);\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint128.\\nlibrary BoringMath128 {\\n  function add(uint128 a, uint128 b) internal pure returns (uint128 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint128 a, uint128 b) internal pure returns (uint128 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint64.\\nlibrary BoringMath64 {\\n  function add(uint64 a, uint64 b) internal pure returns (uint64 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint64 a, uint64 b) internal pure returns (uint64 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint32.\\nlibrary BoringMath32 {\\n  function add(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n\\n  function mul(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n    require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n  }\\n\\n  function div(uint32 a, uint32 b) internal pure returns (uint32) {\\n    require(b > 0, \\\"BoringMath: division by zero\\\");\\n    return a / b;\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint112.\\nlibrary BoringMath112 {\\n  function add(uint112 a, uint112 b) internal pure returns (uint112 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint112 a, uint112 b) internal pure returns (uint112 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n\\n  function mul(uint112 a, uint112 b) internal pure returns (uint112 c) {\\n    require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n  }\\n\\n  function div(uint112 a, uint112 b) internal pure returns (uint112) {\\n    require(b > 0, \\\"BoringMath: division by zero\\\");\\n    return a / b;\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint224.\\nlibrary BoringMath224 {\\n  function add(uint224 a, uint224 b) internal pure returns (uint224 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint224 a, uint224 b) internal pure returns (uint224 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n\\n  function mul(uint224 a, uint224 b) internal pure returns (uint224 c) {\\n    require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n  }\\n\\n  function div(uint224 a, uint224 b) internal pure returns (uint224) {\\n    require(b > 0, \\\"BoringMath: division by zero\\\");\\n    return a / b;\\n  }\\n}\\n\",\"keccak256\":\"0x71c3f4d82b5d30a5fbc70a1a57a758fb7cb4ec0edaa18cf32181bc783a040946\",\"license\":\"MIT\"},\"openzeppelin-v3/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\"},\"openzeppelin-v3/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a >= b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow, so we distribute\\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\\n    }\\n}\\n\",\"keccak256\":\"0x363bd3b45201f07c9b71c2edc96533468cf14a3d029fabd82fddceb1eb3ebd9c\",\"license\":\"MIT\"},\"openzeppelin-v3/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\"},\"openzeppelin-v3/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\"},\"openzeppelin-v3/token/ERC20/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\"},\"openzeppelin-v3/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\"},\"openzeppelin-v3/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"},\"openzeppelin-v3/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor () internal {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x8bbbc2f5c10065ee272592ae0a7a6ceb23de2fbd81564ee0bb015ecf404d5f61\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":4432,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"_status","offset":0,"slot":"0","type":"t_uint256"},{"astId":3281,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"_owner","offset":0,"slot":"1","type":"t_address"},{"astId":65,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"stakingToken","offset":0,"slot":"2","type":"t_contract(IERC20)3889"},{"astId":67,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"rewardsEscrow","offset":0,"slot":"3","type":"t_contract(IRewardsEscrow)2591"},{"astId":70,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"rewardTokens","offset":0,"slot":"4","type":"t_array(t_address)dyn_storage"},{"astId":74,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"rewardData","offset":0,"slot":"5","type":"t_mapping(t_address,t_struct(Reward)39_storage)"},{"astId":76,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"escrowDuration","offset":0,"slot":"6","type":"t_uint256"},{"astId":90,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"rewardDistributors","offset":0,"slot":"7","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":96,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"userRewardPerTokenPaid","offset":0,"slot":"8","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":102,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"rewards","offset":0,"slot":"9","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":104,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"lockedSupply","offset":0,"slot":"10","type":"t_uint256"},{"astId":106,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"boostedSupply","offset":0,"slot":"11","type":"t_uint256"},{"astId":109,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"epochs","offset":0,"slot":"12","type":"t_array(t_struct(Epoch)63_storage)dyn_storage"},{"astId":113,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"balances","offset":0,"slot":"13","type":"t_mapping(t_address,t_struct(Balances)46_storage)"},{"astId":118,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"userLocks","offset":0,"slot":"14","type":"t_mapping(t_address,t_array(t_struct(LockedBalance)53_storage)dyn_storage)"},{"astId":120,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"boostPayment","offset":0,"slot":"15","type":"t_address"},{"astId":123,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"maximumBoostPayment","offset":0,"slot":"16","type":"t_uint256"},{"astId":126,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"boostRate","offset":0,"slot":"17","type":"t_uint256"},{"astId":129,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"nextMaximumBoostPayment","offset":0,"slot":"18","type":"t_uint256"},{"astId":132,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"nextBoostRate","offset":0,"slot":"19","type":"t_uint256"},{"astId":138,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"kickRewardPerEpoch","offset":0,"slot":"20","type":"t_uint256"},{"astId":141,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"kickRewardEpochDelay","offset":0,"slot":"21","type":"t_uint256"},{"astId":144,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"isShutdown","offset":0,"slot":"22","type":"t_bool"},{"astId":146,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"_name","offset":0,"slot":"23","type":"t_string_storage"},{"astId":148,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"_symbol","offset":0,"slot":"24","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_array(t_struct(Epoch)63_storage)dyn_storage":{"base":"t_struct(Epoch)63_storage","encoding":"dynamic_array","label":"struct PopLocker.Epoch[]","numberOfBytes":"32"},"t_array(t_struct(LockedBalance)53_storage)dyn_storage":{"base":"t_struct(LockedBalance)53_storage","encoding":"dynamic_array","label":"struct PopLocker.LockedBalance[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(IERC20)3889":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_contract(IRewardsEscrow)2591":{"encoding":"inplace","label":"contract IRewardsEscrow","numberOfBytes":"20"},"t_mapping(t_address,t_array(t_struct(LockedBalance)53_storage)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct PopLocker.LockedBalance[])","numberOfBytes":"32","value":"t_array(t_struct(LockedBalance)53_storage)dyn_storage"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_struct(Balances)46_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct PopLocker.Balances)","numberOfBytes":"32","value":"t_struct(Balances)46_storage"},"t_mapping(t_address,t_struct(Reward)39_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct PopLocker.Reward)","numberOfBytes":"32","value":"t_struct(Reward)39_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Balances)46_storage":{"encoding":"inplace","label":"struct PopLocker.Balances","members":[{"astId":41,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"locked","offset":0,"slot":"0","type":"t_uint112"},{"astId":43,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"boosted","offset":14,"slot":"0","type":"t_uint112"},{"astId":45,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"nextUnlockIndex","offset":28,"slot":"0","type":"t_uint32"}],"numberOfBytes":"32"},"t_struct(Epoch)63_storage":{"encoding":"inplace","label":"struct PopLocker.Epoch","members":[{"astId":60,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"supply","offset":0,"slot":"0","type":"t_uint224"},{"astId":62,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"date","offset":28,"slot":"0","type":"t_uint32"}],"numberOfBytes":"32"},"t_struct(LockedBalance)53_storage":{"encoding":"inplace","label":"struct PopLocker.LockedBalance","members":[{"astId":48,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"amount","offset":0,"slot":"0","type":"t_uint112"},{"astId":50,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"boosted","offset":14,"slot":"0","type":"t_uint112"},{"astId":52,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"unlockTime","offset":28,"slot":"0","type":"t_uint32"}],"numberOfBytes":"32"},"t_struct(Reward)39_storage":{"encoding":"inplace","label":"struct PopLocker.Reward","members":[{"astId":30,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"useBoost","offset":0,"slot":"0","type":"t_bool"},{"astId":32,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"periodFinish","offset":1,"slot":"0","type":"t_uint40"},{"astId":34,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"rewardRate","offset":6,"slot":"0","type":"t_uint208"},{"astId":36,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"lastUpdateTime","offset":0,"slot":"1","type":"t_uint40"},{"astId":38,"contract":"contracts/core/dao/PopLocker.sol:PopLocker","label":"rewardPerTokenStored","offset":5,"slot":"1","type":"t_uint208"}],"numberOfBytes":"64"},"t_uint112":{"encoding":"inplace","label":"uint112","numberOfBytes":"14"},"t_uint208":{"encoding":"inplace","label":"uint208","numberOfBytes":"26"},"t_uint224":{"encoding":"inplace","label":"uint224","numberOfBytes":"28"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint40":{"encoding":"inplace","label":"uint40","numberOfBytes":"5"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/core/interfaces/IRewardsEscrow.sol":{"IRewardsEscrow":{"abi":[{"inputs":[{"internalType":"address","name":"_staking","type":"address"}],"name":"addAuthorizedContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"duration","type":"uint256"}],"name":"lock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_staking","type":"address"}],"name":"removeAuthorizedContract","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"addAuthorizedContract(address)":"98eaa4a7","lock(address,uint256,uint256)":"e2ab691d","removeAuthorizedContract(address)":"e6b165ed"}},"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staking\",\"type\":\"address\"}],\"name\":\"addAuthorizedContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"lock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staking\",\"type\":\"address\"}],\"name\":\"removeAuthorizedContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/interfaces/IRewardsEscrow.sol\":\"IRewardsEscrow\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/core/interfaces/IRewardsEscrow.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n// Docgen-SOLC: 0.8.0\\n\\npragma solidity >0.6.0;\\n\\ninterface IRewardsEscrow {\\n  function lock(\\n    address _address,\\n    uint256 _amount,\\n    uint256 duration\\n  ) external;\\n\\n  function addAuthorizedContract(address _staking) external;\\n\\n  function removeAuthorizedContract(address _staking) external;\\n}\\n\",\"keccak256\":\"0x6106b3affc6f134a4ae62505206d54fed4d5b3c58026bf1fed87942fc10b1adb\",\"license\":\"GPL-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/core/libraries/BoringMath.sol":{"BoringMath":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220875d09c83e5cbb44fba1ad64faad305c9d9f4ab1c9241a947410ff6e51248a6564736f6c634300060c0033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0x5D MULMOD 0xC8 RETURNDATACOPY 0x5C 0xBB DIFFICULTY 0xFB LOG1 0xAD PUSH5 0xFAAD305C9D SWAP16 0x4A 0xB1 0xC9 0x24 BYTE SWAP5 PUSH21 0x10FF6E51248A6564736F6C634300060C0033000000 ","sourceMap":"232:1790:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220875d09c83e5cbb44fba1ad64faad305c9d9f4ab1c9241a947410ff6e51248a6564736f6c634300060c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0x5D MULMOD 0xC8 RETURNDATACOPY 0x5C 0xBB DIFFICULTY 0xFB LOG1 0xAD PUSH5 0xFAAD305C9D SWAP16 0x4A 0xB1 0xC9 0x24 BYTE SWAP5 PUSH21 0x10FF6E51248A6564736F6C634300060C0033000000 ","sourceMap":"232:1790:2:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"add(uint256,uint256)":"infinite","div(uint256,uint256)":"infinite","mul(uint256,uint256)":"infinite","sub(uint256,uint256)":"infinite","to112(uint256)":"infinite","to128(uint256)":"infinite","to208(uint256)":"infinite","to216(uint256)":"infinite","to224(uint256)":"infinite","to32(uint256)":"infinite","to40(uint256)":"infinite","to64(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library for performing overflow-/underflow-safe math, updated with awesomeness from of DappHub (https://github.com/dapphub/ds-math).\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/BoringMath.sol\":\"BoringMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/BoringMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Docgen-SOLC: 0.6.12\\n\\npragma solidity 0.6.12;\\n\\n/// @notice A library for performing overflow-/underflow-safe math,\\n/// updated with awesomeness from of DappHub (https://github.com/dapphub/ds-math).\\nlibrary BoringMath {\\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n    require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n  }\\n\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    require(b > 0, \\\"BoringMath: division by zero\\\");\\n    return a / b;\\n  }\\n\\n  function to128(uint256 a) internal pure returns (uint128 c) {\\n    require(a <= uint128(-1), \\\"BoringMath: uint128 Overflow\\\");\\n    c = uint128(a);\\n  }\\n\\n  function to64(uint256 a) internal pure returns (uint64 c) {\\n    require(a <= uint64(-1), \\\"BoringMath: uint64 Overflow\\\");\\n    c = uint64(a);\\n  }\\n\\n  function to32(uint256 a) internal pure returns (uint32 c) {\\n    require(a <= uint32(-1), \\\"BoringMath: uint32 Overflow\\\");\\n    c = uint32(a);\\n  }\\n\\n  function to40(uint256 a) internal pure returns (uint40 c) {\\n    require(a <= uint40(-1), \\\"BoringMath: uint40 Overflow\\\");\\n    c = uint40(a);\\n  }\\n\\n  function to112(uint256 a) internal pure returns (uint112 c) {\\n    require(a <= uint112(-1), \\\"BoringMath: uint112 Overflow\\\");\\n    c = uint112(a);\\n  }\\n\\n  function to224(uint256 a) internal pure returns (uint224 c) {\\n    require(a <= uint224(-1), \\\"BoringMath: uint224 Overflow\\\");\\n    c = uint224(a);\\n  }\\n\\n  function to208(uint256 a) internal pure returns (uint208 c) {\\n    require(a <= uint208(-1), \\\"BoringMath: uint208 Overflow\\\");\\n    c = uint208(a);\\n  }\\n\\n  function to216(uint256 a) internal pure returns (uint216 c) {\\n    require(a <= uint216(-1), \\\"BoringMath: uint216 Overflow\\\");\\n    c = uint216(a);\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint128.\\nlibrary BoringMath128 {\\n  function add(uint128 a, uint128 b) internal pure returns (uint128 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint128 a, uint128 b) internal pure returns (uint128 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint64.\\nlibrary BoringMath64 {\\n  function add(uint64 a, uint64 b) internal pure returns (uint64 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint64 a, uint64 b) internal pure returns (uint64 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint32.\\nlibrary BoringMath32 {\\n  function add(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n\\n  function mul(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n    require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n  }\\n\\n  function div(uint32 a, uint32 b) internal pure returns (uint32) {\\n    require(b > 0, \\\"BoringMath: division by zero\\\");\\n    return a / b;\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint112.\\nlibrary BoringMath112 {\\n  function add(uint112 a, uint112 b) internal pure returns (uint112 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint112 a, uint112 b) internal pure returns (uint112 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n\\n  function mul(uint112 a, uint112 b) internal pure returns (uint112 c) {\\n    require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n  }\\n\\n  function div(uint112 a, uint112 b) internal pure returns (uint112) {\\n    require(b > 0, \\\"BoringMath: division by zero\\\");\\n    return a / b;\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint224.\\nlibrary BoringMath224 {\\n  function add(uint224 a, uint224 b) internal pure returns (uint224 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint224 a, uint224 b) internal pure returns (uint224 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n\\n  function mul(uint224 a, uint224 b) internal pure returns (uint224 c) {\\n    require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n  }\\n\\n  function div(uint224 a, uint224 b) internal pure returns (uint224) {\\n    require(b > 0, \\\"BoringMath: division by zero\\\");\\n    return a / b;\\n  }\\n}\\n\",\"keccak256\":\"0x71c3f4d82b5d30a5fbc70a1a57a758fb7cb4ec0edaa18cf32181bc783a040946\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"A library for performing overflow-/underflow-safe math, updated with awesomeness from of DappHub (https://github.com/dapphub/ds-math).","version":1}},"BoringMath112":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122003e6eb6a6585a3d7cf7141ea67ca5ce6b1ce83f02374d1c7b0e4b17f8739232964736f6c634300060c0033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0xE6 0xEB PUSH11 0x6585A3D7CF7141EA67CA5C 0xE6 0xB1 0xCE DUP4 CREATE 0x23 PUSH21 0xD1C7B0E4B17F8739232964736F6C634300060C0033 ","sourceMap":"3586:592:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122003e6eb6a6585a3d7cf7141ea67ca5ce6b1ce83f02374d1c7b0e4b17f8739232964736f6c634300060c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0xE6 0xEB PUSH11 0x6585A3D7CF7141EA67CA5C 0xE6 0xB1 0xCE DUP4 CREATE 0x23 PUSH21 0xD1C7B0E4B17F8739232964736F6C634300060C0033 ","sourceMap":"3586:592:2:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"add(uint112,uint112)":"infinite","div(uint112,uint112)":"infinite","mul(uint112,uint112)":"infinite","sub(uint112,uint112)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library for performing overflow-/underflow-safe addition and subtraction on uint112.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/BoringMath.sol\":\"BoringMath112\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/BoringMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Docgen-SOLC: 0.6.12\\n\\npragma solidity 0.6.12;\\n\\n/// @notice A library for performing overflow-/underflow-safe math,\\n/// updated with awesomeness from of DappHub (https://github.com/dapphub/ds-math).\\nlibrary BoringMath {\\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n    require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n  }\\n\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    require(b > 0, \\\"BoringMath: division by zero\\\");\\n    return a / b;\\n  }\\n\\n  function to128(uint256 a) internal pure returns (uint128 c) {\\n    require(a <= uint128(-1), \\\"BoringMath: uint128 Overflow\\\");\\n    c = uint128(a);\\n  }\\n\\n  function to64(uint256 a) internal pure returns (uint64 c) {\\n    require(a <= uint64(-1), \\\"BoringMath: uint64 Overflow\\\");\\n    c = uint64(a);\\n  }\\n\\n  function to32(uint256 a) internal pure returns (uint32 c) {\\n    require(a <= uint32(-1), \\\"BoringMath: uint32 Overflow\\\");\\n    c = uint32(a);\\n  }\\n\\n  function to40(uint256 a) internal pure returns (uint40 c) {\\n    require(a <= uint40(-1), \\\"BoringMath: uint40 Overflow\\\");\\n    c = uint40(a);\\n  }\\n\\n  function to112(uint256 a) internal pure returns (uint112 c) {\\n    require(a <= uint112(-1), \\\"BoringMath: uint112 Overflow\\\");\\n    c = uint112(a);\\n  }\\n\\n  function to224(uint256 a) internal pure returns (uint224 c) {\\n    require(a <= uint224(-1), \\\"BoringMath: uint224 Overflow\\\");\\n    c = uint224(a);\\n  }\\n\\n  function to208(uint256 a) internal pure returns (uint208 c) {\\n    require(a <= uint208(-1), \\\"BoringMath: uint208 Overflow\\\");\\n    c = uint208(a);\\n  }\\n\\n  function to216(uint256 a) internal pure returns (uint216 c) {\\n    require(a <= uint216(-1), \\\"BoringMath: uint216 Overflow\\\");\\n    c = uint216(a);\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint128.\\nlibrary BoringMath128 {\\n  function add(uint128 a, uint128 b) internal pure returns (uint128 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint128 a, uint128 b) internal pure returns (uint128 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint64.\\nlibrary BoringMath64 {\\n  function add(uint64 a, uint64 b) internal pure returns (uint64 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint64 a, uint64 b) internal pure returns (uint64 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint32.\\nlibrary BoringMath32 {\\n  function add(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n\\n  function mul(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n    require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n  }\\n\\n  function div(uint32 a, uint32 b) internal pure returns (uint32) {\\n    require(b > 0, \\\"BoringMath: division by zero\\\");\\n    return a / b;\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint112.\\nlibrary BoringMath112 {\\n  function add(uint112 a, uint112 b) internal pure returns (uint112 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint112 a, uint112 b) internal pure returns (uint112 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n\\n  function mul(uint112 a, uint112 b) internal pure returns (uint112 c) {\\n    require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n  }\\n\\n  function div(uint112 a, uint112 b) internal pure returns (uint112) {\\n    require(b > 0, \\\"BoringMath: division by zero\\\");\\n    return a / b;\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint224.\\nlibrary BoringMath224 {\\n  function add(uint224 a, uint224 b) internal pure returns (uint224 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint224 a, uint224 b) internal pure returns (uint224 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n\\n  function mul(uint224 a, uint224 b) internal pure returns (uint224 c) {\\n    require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n  }\\n\\n  function div(uint224 a, uint224 b) internal pure returns (uint224) {\\n    require(b > 0, \\\"BoringMath: division by zero\\\");\\n    return a / b;\\n  }\\n}\\n\",\"keccak256\":\"0x71c3f4d82b5d30a5fbc70a1a57a758fb7cb4ec0edaa18cf32181bc783a040946\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"A library for performing overflow-/underflow-safe addition and subtraction on uint112.","version":1}},"BoringMath128":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d1d00c2875b852e87b7142483d85af51c49bbd0903bc0c9bdc210f6bae27cbd64736f6c634300060c0033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SAR STOP 0xC2 DUP8 JUMPDEST DUP6 0x2E DUP8 0xB7 EQ 0x24 DUP4 0xD8 GAS CREATE2 SHR 0x49 0xBB 0xD0 SWAP1 EXTCODESIZE 0xC0 0xC9 0xBD 0xC2 LT 0xF6 0xBA 0xE2 PUSH29 0xBD64736F6C634300060C00330000000000000000000000000000000000 ","sourceMap":"2123:295:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d1d00c2875b852e87b7142483d85af51c49bbd0903bc0c9bdc210f6bae27cbd64736f6c634300060c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SAR STOP 0xC2 DUP8 JUMPDEST DUP6 0x2E DUP8 0xB7 EQ 0x24 DUP4 0xD8 GAS CREATE2 SHR 0x49 0xBB 0xD0 SWAP1 EXTCODESIZE 0xC0 0xC9 0xBD 0xC2 LT 0xF6 0xBA 0xE2 PUSH29 0xBD64736F6C634300060C00330000000000000000000000000000000000 ","sourceMap":"2123:295:2:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"add(uint128,uint128)":"infinite","sub(uint128,uint128)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library for performing overflow-/underflow-safe addition and subtraction on uint128.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/BoringMath.sol\":\"BoringMath128\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/BoringMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Docgen-SOLC: 0.6.12\\n\\npragma solidity 0.6.12;\\n\\n/// @notice A library for performing overflow-/underflow-safe math,\\n/// updated with awesomeness from of DappHub (https://github.com/dapphub/ds-math).\\nlibrary BoringMath {\\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n    require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n  }\\n\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    require(b > 0, \\\"BoringMath: division by zero\\\");\\n    return a / b;\\n  }\\n\\n  function to128(uint256 a) internal pure returns (uint128 c) {\\n    require(a <= uint128(-1), \\\"BoringMath: uint128 Overflow\\\");\\n    c = uint128(a);\\n  }\\n\\n  function to64(uint256 a) internal pure returns (uint64 c) {\\n    require(a <= uint64(-1), \\\"BoringMath: uint64 Overflow\\\");\\n    c = uint64(a);\\n  }\\n\\n  function to32(uint256 a) internal pure returns (uint32 c) {\\n    require(a <= uint32(-1), \\\"BoringMath: uint32 Overflow\\\");\\n    c = uint32(a);\\n  }\\n\\n  function to40(uint256 a) internal pure returns (uint40 c) {\\n    require(a <= uint40(-1), \\\"BoringMath: uint40 Overflow\\\");\\n    c = uint40(a);\\n  }\\n\\n  function to112(uint256 a) internal pure returns (uint112 c) {\\n    require(a <= uint112(-1), \\\"BoringMath: uint112 Overflow\\\");\\n    c = uint112(a);\\n  }\\n\\n  function to224(uint256 a) internal pure returns (uint224 c) {\\n    require(a <= uint224(-1), \\\"BoringMath: uint224 Overflow\\\");\\n    c = uint224(a);\\n  }\\n\\n  function to208(uint256 a) internal pure returns (uint208 c) {\\n    require(a <= uint208(-1), \\\"BoringMath: uint208 Overflow\\\");\\n    c = uint208(a);\\n  }\\n\\n  function to216(uint256 a) internal pure returns (uint216 c) {\\n    require(a <= uint216(-1), \\\"BoringMath: uint216 Overflow\\\");\\n    c = uint216(a);\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint128.\\nlibrary BoringMath128 {\\n  function add(uint128 a, uint128 b) internal pure returns (uint128 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint128 a, uint128 b) internal pure returns (uint128 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint64.\\nlibrary BoringMath64 {\\n  function add(uint64 a, uint64 b) internal pure returns (uint64 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint64 a, uint64 b) internal pure returns (uint64 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint32.\\nlibrary BoringMath32 {\\n  function add(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n\\n  function mul(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n    require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n  }\\n\\n  function div(uint32 a, uint32 b) internal pure returns (uint32) {\\n    require(b > 0, \\\"BoringMath: division by zero\\\");\\n    return a / b;\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint112.\\nlibrary BoringMath112 {\\n  function add(uint112 a, uint112 b) internal pure returns (uint112 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint112 a, uint112 b) internal pure returns (uint112 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n\\n  function mul(uint112 a, uint112 b) internal pure returns (uint112 c) {\\n    require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n  }\\n\\n  function div(uint112 a, uint112 b) internal pure returns (uint112) {\\n    require(b > 0, \\\"BoringMath: division by zero\\\");\\n    return a / b;\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint224.\\nlibrary BoringMath224 {\\n  function add(uint224 a, uint224 b) internal pure returns (uint224 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint224 a, uint224 b) internal pure returns (uint224 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n\\n  function mul(uint224 a, uint224 b) internal pure returns (uint224 c) {\\n    require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n  }\\n\\n  function div(uint224 a, uint224 b) internal pure returns (uint224) {\\n    require(b > 0, \\\"BoringMath: division by zero\\\");\\n    return a / b;\\n  }\\n}\\n\",\"keccak256\":\"0x71c3f4d82b5d30a5fbc70a1a57a758fb7cb4ec0edaa18cf32181bc783a040946\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"A library for performing overflow-/underflow-safe addition and subtraction on uint128.","version":1}},"BoringMath224":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220856aa4315396a00d4aaa9cc74add939c147ba9da6f4bde7417f56c08a2e2eb9b64736f6c634300060c0033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 PUSH11 0xA4315396A00D4AAA9CC74A 0xDD SWAP4 SWAP13 EQ PUSH28 0xA9DA6F4BDE7417F56C08A2E2EB9B64736F6C634300060C0033000000 ","sourceMap":"4279:592:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220856aa4315396a00d4aaa9cc74add939c147ba9da6f4bde7417f56c08a2e2eb9b64736f6c634300060c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 PUSH11 0xA4315396A00D4AAA9CC74A 0xDD SWAP4 SWAP13 EQ PUSH28 0xA9DA6F4BDE7417F56C08A2E2EB9B64736F6C634300060C0033000000 ","sourceMap":"4279:592:2:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"add(uint224,uint224)":"infinite","div(uint224,uint224)":"infinite","mul(uint224,uint224)":"infinite","sub(uint224,uint224)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library for performing overflow-/underflow-safe addition and subtraction on uint224.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/BoringMath.sol\":\"BoringMath224\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/BoringMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Docgen-SOLC: 0.6.12\\n\\npragma solidity 0.6.12;\\n\\n/// @notice A library for performing overflow-/underflow-safe math,\\n/// updated with awesomeness from of DappHub (https://github.com/dapphub/ds-math).\\nlibrary BoringMath {\\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n    require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n  }\\n\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    require(b > 0, \\\"BoringMath: division by zero\\\");\\n    return a / b;\\n  }\\n\\n  function to128(uint256 a) internal pure returns (uint128 c) {\\n    require(a <= uint128(-1), \\\"BoringMath: uint128 Overflow\\\");\\n    c = uint128(a);\\n  }\\n\\n  function to64(uint256 a) internal pure returns (uint64 c) {\\n    require(a <= uint64(-1), \\\"BoringMath: uint64 Overflow\\\");\\n    c = uint64(a);\\n  }\\n\\n  function to32(uint256 a) internal pure returns (uint32 c) {\\n    require(a <= uint32(-1), \\\"BoringMath: uint32 Overflow\\\");\\n    c = uint32(a);\\n  }\\n\\n  function to40(uint256 a) internal pure returns (uint40 c) {\\n    require(a <= uint40(-1), \\\"BoringMath: uint40 Overflow\\\");\\n    c = uint40(a);\\n  }\\n\\n  function to112(uint256 a) internal pure returns (uint112 c) {\\n    require(a <= uint112(-1), \\\"BoringMath: uint112 Overflow\\\");\\n    c = uint112(a);\\n  }\\n\\n  function to224(uint256 a) internal pure returns (uint224 c) {\\n    require(a <= uint224(-1), \\\"BoringMath: uint224 Overflow\\\");\\n    c = uint224(a);\\n  }\\n\\n  function to208(uint256 a) internal pure returns (uint208 c) {\\n    require(a <= uint208(-1), \\\"BoringMath: uint208 Overflow\\\");\\n    c = uint208(a);\\n  }\\n\\n  function to216(uint256 a) internal pure returns (uint216 c) {\\n    require(a <= uint216(-1), \\\"BoringMath: uint216 Overflow\\\");\\n    c = uint216(a);\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint128.\\nlibrary BoringMath128 {\\n  function add(uint128 a, uint128 b) internal pure returns (uint128 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint128 a, uint128 b) internal pure returns (uint128 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint64.\\nlibrary BoringMath64 {\\n  function add(uint64 a, uint64 b) internal pure returns (uint64 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint64 a, uint64 b) internal pure returns (uint64 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint32.\\nlibrary BoringMath32 {\\n  function add(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n\\n  function mul(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n    require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n  }\\n\\n  function div(uint32 a, uint32 b) internal pure returns (uint32) {\\n    require(b > 0, \\\"BoringMath: division by zero\\\");\\n    return a / b;\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint112.\\nlibrary BoringMath112 {\\n  function add(uint112 a, uint112 b) internal pure returns (uint112 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint112 a, uint112 b) internal pure returns (uint112 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n\\n  function mul(uint112 a, uint112 b) internal pure returns (uint112 c) {\\n    require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n  }\\n\\n  function div(uint112 a, uint112 b) internal pure returns (uint112) {\\n    require(b > 0, \\\"BoringMath: division by zero\\\");\\n    return a / b;\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint224.\\nlibrary BoringMath224 {\\n  function add(uint224 a, uint224 b) internal pure returns (uint224 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint224 a, uint224 b) internal pure returns (uint224 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n\\n  function mul(uint224 a, uint224 b) internal pure returns (uint224 c) {\\n    require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n  }\\n\\n  function div(uint224 a, uint224 b) internal pure returns (uint224) {\\n    require(b > 0, \\\"BoringMath: division by zero\\\");\\n    return a / b;\\n  }\\n}\\n\",\"keccak256\":\"0x71c3f4d82b5d30a5fbc70a1a57a758fb7cb4ec0edaa18cf32181bc783a040946\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"A library for performing overflow-/underflow-safe addition and subtraction on uint224.","version":1}},"BoringMath32":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203e5c44ee682916f52490502081ba4c758eff5689b3cdb820f69cf83aa91d0d5964736f6c634300060c0033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0x5C DIFFICULTY 0xEE PUSH9 0x2916F52490502081BA 0x4C PUSH22 0x8EFF5689B3CDB820F69CF83AA91D0D5964736F6C6343 STOP MOD 0xC STOP CALLER ","sourceMap":"2906:579:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203e5c44ee682916f52490502081ba4c758eff5689b3cdb820f69cf83aa91d0d5964736f6c634300060c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0x5C DIFFICULTY 0xEE PUSH9 0x2916F52490502081BA 0x4C PUSH22 0x8EFF5689B3CDB820F69CF83AA91D0D5964736F6C6343 STOP MOD 0xC STOP CALLER ","sourceMap":"2906:579:2:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"add(uint32,uint32)":"infinite","div(uint32,uint32)":"infinite","mul(uint32,uint32)":"infinite","sub(uint32,uint32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library for performing overflow-/underflow-safe addition and subtraction on uint32.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/BoringMath.sol\":\"BoringMath32\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/BoringMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Docgen-SOLC: 0.6.12\\n\\npragma solidity 0.6.12;\\n\\n/// @notice A library for performing overflow-/underflow-safe math,\\n/// updated with awesomeness from of DappHub (https://github.com/dapphub/ds-math).\\nlibrary BoringMath {\\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n    require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n  }\\n\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    require(b > 0, \\\"BoringMath: division by zero\\\");\\n    return a / b;\\n  }\\n\\n  function to128(uint256 a) internal pure returns (uint128 c) {\\n    require(a <= uint128(-1), \\\"BoringMath: uint128 Overflow\\\");\\n    c = uint128(a);\\n  }\\n\\n  function to64(uint256 a) internal pure returns (uint64 c) {\\n    require(a <= uint64(-1), \\\"BoringMath: uint64 Overflow\\\");\\n    c = uint64(a);\\n  }\\n\\n  function to32(uint256 a) internal pure returns (uint32 c) {\\n    require(a <= uint32(-1), \\\"BoringMath: uint32 Overflow\\\");\\n    c = uint32(a);\\n  }\\n\\n  function to40(uint256 a) internal pure returns (uint40 c) {\\n    require(a <= uint40(-1), \\\"BoringMath: uint40 Overflow\\\");\\n    c = uint40(a);\\n  }\\n\\n  function to112(uint256 a) internal pure returns (uint112 c) {\\n    require(a <= uint112(-1), \\\"BoringMath: uint112 Overflow\\\");\\n    c = uint112(a);\\n  }\\n\\n  function to224(uint256 a) internal pure returns (uint224 c) {\\n    require(a <= uint224(-1), \\\"BoringMath: uint224 Overflow\\\");\\n    c = uint224(a);\\n  }\\n\\n  function to208(uint256 a) internal pure returns (uint208 c) {\\n    require(a <= uint208(-1), \\\"BoringMath: uint208 Overflow\\\");\\n    c = uint208(a);\\n  }\\n\\n  function to216(uint256 a) internal pure returns (uint216 c) {\\n    require(a <= uint216(-1), \\\"BoringMath: uint216 Overflow\\\");\\n    c = uint216(a);\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint128.\\nlibrary BoringMath128 {\\n  function add(uint128 a, uint128 b) internal pure returns (uint128 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint128 a, uint128 b) internal pure returns (uint128 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint64.\\nlibrary BoringMath64 {\\n  function add(uint64 a, uint64 b) internal pure returns (uint64 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint64 a, uint64 b) internal pure returns (uint64 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint32.\\nlibrary BoringMath32 {\\n  function add(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n\\n  function mul(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n    require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n  }\\n\\n  function div(uint32 a, uint32 b) internal pure returns (uint32) {\\n    require(b > 0, \\\"BoringMath: division by zero\\\");\\n    return a / b;\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint112.\\nlibrary BoringMath112 {\\n  function add(uint112 a, uint112 b) internal pure returns (uint112 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint112 a, uint112 b) internal pure returns (uint112 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n\\n  function mul(uint112 a, uint112 b) internal pure returns (uint112 c) {\\n    require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n  }\\n\\n  function div(uint112 a, uint112 b) internal pure returns (uint112) {\\n    require(b > 0, \\\"BoringMath: division by zero\\\");\\n    return a / b;\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint224.\\nlibrary BoringMath224 {\\n  function add(uint224 a, uint224 b) internal pure returns (uint224 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint224 a, uint224 b) internal pure returns (uint224 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n\\n  function mul(uint224 a, uint224 b) internal pure returns (uint224 c) {\\n    require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n  }\\n\\n  function div(uint224 a, uint224 b) internal pure returns (uint224) {\\n    require(b > 0, \\\"BoringMath: division by zero\\\");\\n    return a / b;\\n  }\\n}\\n\",\"keccak256\":\"0x71c3f4d82b5d30a5fbc70a1a57a758fb7cb4ec0edaa18cf32181bc783a040946\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"A library for performing overflow-/underflow-safe addition and subtraction on uint32.","version":1}},"BoringMath64":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203f59d689050530f66d212770979458c12d96d55f81c6d94720f9a167725ed75464736f6c634300060c0033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH MSIZE 0xD6 DUP10 SDIV SDIV ADDRESS 0xF6 PUSH14 0x212770979458C12D96D55F81C6D9 SELFBALANCE KECCAK256 0xF9 LOG1 PUSH8 0x725ED75464736F6C PUSH4 0x4300060C STOP CALLER ","sourceMap":"2518:288:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203f59d689050530f66d212770979458c12d96d55f81c6d94720f9a167725ed75464736f6c634300060c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH MSIZE 0xD6 DUP10 SDIV SDIV ADDRESS 0xF6 PUSH14 0x212770979458C12D96D55F81C6D9 SELFBALANCE KECCAK256 0xF9 LOG1 PUSH8 0x725ED75464736F6C PUSH4 0x4300060C STOP CALLER ","sourceMap":"2518:288:2:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"add(uint64,uint64)":"infinite","sub(uint64,uint64)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library for performing overflow-/underflow-safe addition and subtraction on uint64.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/BoringMath.sol\":\"BoringMath64\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/BoringMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Docgen-SOLC: 0.6.12\\n\\npragma solidity 0.6.12;\\n\\n/// @notice A library for performing overflow-/underflow-safe math,\\n/// updated with awesomeness from of DappHub (https://github.com/dapphub/ds-math).\\nlibrary BoringMath {\\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n    require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n  }\\n\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    require(b > 0, \\\"BoringMath: division by zero\\\");\\n    return a / b;\\n  }\\n\\n  function to128(uint256 a) internal pure returns (uint128 c) {\\n    require(a <= uint128(-1), \\\"BoringMath: uint128 Overflow\\\");\\n    c = uint128(a);\\n  }\\n\\n  function to64(uint256 a) internal pure returns (uint64 c) {\\n    require(a <= uint64(-1), \\\"BoringMath: uint64 Overflow\\\");\\n    c = uint64(a);\\n  }\\n\\n  function to32(uint256 a) internal pure returns (uint32 c) {\\n    require(a <= uint32(-1), \\\"BoringMath: uint32 Overflow\\\");\\n    c = uint32(a);\\n  }\\n\\n  function to40(uint256 a) internal pure returns (uint40 c) {\\n    require(a <= uint40(-1), \\\"BoringMath: uint40 Overflow\\\");\\n    c = uint40(a);\\n  }\\n\\n  function to112(uint256 a) internal pure returns (uint112 c) {\\n    require(a <= uint112(-1), \\\"BoringMath: uint112 Overflow\\\");\\n    c = uint112(a);\\n  }\\n\\n  function to224(uint256 a) internal pure returns (uint224 c) {\\n    require(a <= uint224(-1), \\\"BoringMath: uint224 Overflow\\\");\\n    c = uint224(a);\\n  }\\n\\n  function to208(uint256 a) internal pure returns (uint208 c) {\\n    require(a <= uint208(-1), \\\"BoringMath: uint208 Overflow\\\");\\n    c = uint208(a);\\n  }\\n\\n  function to216(uint256 a) internal pure returns (uint216 c) {\\n    require(a <= uint216(-1), \\\"BoringMath: uint216 Overflow\\\");\\n    c = uint216(a);\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint128.\\nlibrary BoringMath128 {\\n  function add(uint128 a, uint128 b) internal pure returns (uint128 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint128 a, uint128 b) internal pure returns (uint128 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint64.\\nlibrary BoringMath64 {\\n  function add(uint64 a, uint64 b) internal pure returns (uint64 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint64 a, uint64 b) internal pure returns (uint64 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint32.\\nlibrary BoringMath32 {\\n  function add(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n\\n  function mul(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n    require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n  }\\n\\n  function div(uint32 a, uint32 b) internal pure returns (uint32) {\\n    require(b > 0, \\\"BoringMath: division by zero\\\");\\n    return a / b;\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint112.\\nlibrary BoringMath112 {\\n  function add(uint112 a, uint112 b) internal pure returns (uint112 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint112 a, uint112 b) internal pure returns (uint112 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n\\n  function mul(uint112 a, uint112 b) internal pure returns (uint112 c) {\\n    require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n  }\\n\\n  function div(uint112 a, uint112 b) internal pure returns (uint112) {\\n    require(b > 0, \\\"BoringMath: division by zero\\\");\\n    return a / b;\\n  }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint224.\\nlibrary BoringMath224 {\\n  function add(uint224 a, uint224 b) internal pure returns (uint224 c) {\\n    require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n  }\\n\\n  function sub(uint224 a, uint224 b) internal pure returns (uint224 c) {\\n    require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n  }\\n\\n  function mul(uint224 a, uint224 b) internal pure returns (uint224 c) {\\n    require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n  }\\n\\n  function div(uint224 a, uint224 b) internal pure returns (uint224) {\\n    require(b > 0, \\\"BoringMath: division by zero\\\");\\n    return a / b;\\n  }\\n}\\n\",\"keccak256\":\"0x71c3f4d82b5d30a5fbc70a1a57a758fb7cb4ec0edaa18cf32181bc783a040946\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"A library for performing overflow-/underflow-safe addition and subtraction on uint64.","version":1}}},"openzeppelin-v3/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-v3/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"openzeppelin-v3/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\"},\"openzeppelin-v3/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3281,"contract":"openzeppelin-v3/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"openzeppelin-v3/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220617f7e55fd209a60b7321dab3469dca1d9f73aa58deacbdba9ee93bb85598d0264736f6c634300060c0033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x7F7E SSTORE REVERT KECCAK256 SWAP11 PUSH1 0xB7 ORIGIN SAR 0xAB CALLVALUE PUSH10 0xDCA1D9F73AA58DEACBDB 0xA9 0xEE SWAP4 0xBB DUP6 MSIZE DUP14 MUL PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ","sourceMap":"140:668:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220617f7e55fd209a60b7321dab3469dca1d9f73aa58deacbdba9ee93bb85598d0264736f6c634300060c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x7F7E SSTORE REVERT KECCAK256 SWAP11 PUSH1 0xB7 ORIGIN SAR 0xAB CALLVALUE PUSH10 0xDCA1D9F73AA58DEACBDB 0xA9 0xEE SWAP4 0xBB DUP6 MSIZE DUP14 MUL PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ","sourceMap":"140:668:4:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"average(uint256,uint256)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-v3/math/Math.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"openzeppelin-v3/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a >= b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow, so we distribute\\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\\n    }\\n}\\n\",\"keccak256\":\"0x363bd3b45201f07c9b71c2edc96533468cf14a3d029fabd82fddceb1eb3ebd9c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"openzeppelin-v3/math/SafeMath.sol":{"SafeMath":{"abi":[],"devdoc":{"details":"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f8ebcd1340bc3cda4ce4df6fb99105460838734f5f5615a94b232a060d2b90c464736f6c634300060c0033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0xEB 0xCD SGT BLOCKHASH 0xBC EXTCODECOPY 0xDA 0x4C 0xE4 0xDF PUSH16 0xB99105460838734F5F5615A94B232A06 0xD 0x2B SWAP1 0xC4 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ","sourceMap":"630:6594:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f8ebcd1340bc3cda4ce4df6fb99105460838734f5f5615a94b232a060d2b90c464736f6c634300060c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0xEB 0xCD SGT BLOCKHASH 0xBC EXTCODECOPY 0xDA 0x4C 0xE4 0xDF PUSH16 0xB99105460838734F5F5615A94B232A06 0xD 0x2B SWAP1 0xC4 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ","sourceMap":"630:6594:5:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"add(uint256,uint256)":"infinite","div(uint256,uint256)":"infinite","div(uint256,uint256,string memory)":"infinite","mod(uint256,uint256)":"infinite","mod(uint256,uint256,string memory)":"infinite","mul(uint256,uint256)":"infinite","sub(uint256,uint256)":"infinite","sub(uint256,uint256,string memory)":"infinite","tryAdd(uint256,uint256)":"infinite","tryDiv(uint256,uint256)":"infinite","tryMod(uint256,uint256)":"infinite","tryMul(uint256,uint256)":"infinite","trySub(uint256,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-v3/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"openzeppelin-v3/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"openzeppelin-v3/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-v3/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"openzeppelin-v3/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"openzeppelin-v3/token/ERC20/SafeERC20.sol":{"SafeERC20":{"abi":[],"devdoc":{"details":"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201aced4ff3de488d2c962fc7e1a0e5b8e17292e38a743694781b68063c98eef0c64736f6c634300060c0033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xCE 0xD4 SELFDESTRUCT RETURNDATASIZE 0xE4 DUP9 0xD2 0xC9 PUSH3 0xFC7E1A 0xE JUMPDEST DUP15 OR 0x29 0x2E CODESIZE 0xA7 NUMBER PUSH10 0x4781B68063C98EEF0C64 PUSH20 0x6F6C634300060C00330000000000000000000000 ","sourceMap":"616:3104:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201aced4ff3de488d2c962fc7e1a0e5b8e17292e38a743694781b68063c98eef0c64736f6c634300060c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xCE 0xD4 SELFDESTRUCT RETURNDATASIZE 0xE4 DUP9 0xD2 0xC9 PUSH3 0xFC7E1A 0xE JUMPDEST DUP15 OR 0x29 0x2E CODESIZE 0xA7 NUMBER PUSH10 0x4781B68063C98EEF0C64 PUSH20 0x6F6C634300060C00330000000000000000000000 ","sourceMap":"616:3104:7:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_callOptionalReturn(contract IERC20,bytes memory)":"infinite","safeApprove(contract IERC20,address,uint256)":"infinite","safeDecreaseAllowance(contract IERC20,address,uint256)":"infinite","safeIncreaseAllowance(contract IERC20,address,uint256)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-v3/token/ERC20/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"openzeppelin-v3/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\"},\"openzeppelin-v3/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\"},\"openzeppelin-v3/token/ERC20/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\"},\"openzeppelin-v3/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"openzeppelin-v3/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a78497f55a16059f4a72819190410341b54ae07287f5515286ff6d72db892e9264736f6c634300060c0033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 DUP5 SWAP8 CREATE2 GAS AND SDIV SWAP16 0x4A PUSH19 0x819190410341B54AE07287F5515286FF6D72DB DUP10 0x2E SWAP3 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ","sourceMap":"134:7684:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a78497f55a16059f4a72819190410341b54ae07287f5515286ff6d72db892e9264736f6c634300060c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 DUP5 SWAP8 CREATE2 GAS AND SDIV SWAP16 0x4A PUSH19 0x819190410341B54AE07287F5515286FF6D72DB DUP10 0x2E SWAP3 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ","sourceMap":"134:7684:8:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_verifyCallResult(bool,bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-v3/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"openzeppelin-v3/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"openzeppelin-v3/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-v3/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"openzeppelin-v3/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"openzeppelin-v3/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-v3/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"openzeppelin-v3/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor () internal {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x8bbbc2f5c10065ee272592ae0a7a6ceb23de2fbd81564ee0bb015ecf404d5f61\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":4432,"contract":"openzeppelin-v3/utils/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}