/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IStreamingFeeModule,
  IStreamingFeeModuleInterface,
} from "../IStreamingFeeModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISetToken",
        name: "_setToken",
        type: "address",
      },
    ],
    name: "accrueFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISetToken",
        name: "_setToken",
        type: "address",
      },
    ],
    name: "feeStates",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "feeRecipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maxStreamingFeePercentage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "streamingFeePercentage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastStreamingFeeTimestamp",
            type: "uint256",
          },
        ],
        internalType: "struct IStreamingFeeModule.FeeState",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISetToken",
        name: "_setToken",
        type: "address",
      },
    ],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISetToken",
        name: "_setToken",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "feeRecipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maxStreamingFeePercentage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "streamingFeePercentage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastStreamingFeeTimestamp",
            type: "uint256",
          },
        ],
        internalType: "struct IStreamingFeeModule.FeeState",
        name: "_settings",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISetToken",
        name: "_setToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_newFeeRecipient",
        type: "address",
      },
    ],
    name: "updateFeeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISetToken",
        name: "_setToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "updateStreamingFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IStreamingFeeModule__factory {
  static readonly abi = _abi;
  static createInterface(): IStreamingFeeModuleInterface {
    return new utils.Interface(_abi) as IStreamingFeeModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IStreamingFeeModule {
    return new Contract(address, _abi, signerOrProvider) as IStreamingFeeModule;
  }
}
