/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Region, RegionInterface } from "../Region";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiaryVault",
        type: "address",
      },
      {
        internalType: "contract IContractRegistry",
        name: "_contractRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "region",
        type: "bytes32",
      },
    ],
    name: "RegionAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "region_",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_beneficiaryVault",
        type: "address",
      },
    ],
    name: "addRegion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "beneficiaryVaults",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractRegistry",
    outputs: [
      {
        internalType: "contract IContractRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultRegion",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllRegions",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllVaults",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "regionExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "regionVaults",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "regions",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040526000805160206107d983398151915260805234801561002257600080fd5b506040516107f93803806107f983398101604081905261004191610153565b6001805480820182556000805160206107d98339815191527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69091018190557f0274da8a205877ac920aec8ef3375edaefd079413524fbe4f632e0ab00902533805460ff1916831790556002805492830190557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90910180546001600160a01b03199081166001600160a01b03958616908117909255600092835260046020527f403a34c2059516b9732659234ecdd926a14c20f483214bc448c3c7e65ff47c3e805482169092179091558154169190921617905561018d565b6001600160a01b038116811461015057600080fd5b50565b6000806040838503121561016657600080fd5b82516101718161013b565b60208401519092506101828161013b565b809150509250929050565b6080516106316101a8600039600061013101526106316000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c8063132abfb6146100885780635c2cc7ae146100ae57806366c76ad9146100ef57806397331bf914610104578063abf410e514610119578063aed621c01461012c578063b5a4a87614610153578063be856eda14610166578063d40feef814610199575b600080fd5b61009b6100963660046104f1565b6101ae565b6040519081526020015b60405180910390f35b6100d76100bc3660046104f1565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100a5565b6100f76101cf565b6040516100a5919061050a565b61010c610227565b6040516100a5919061054e565b6000546100d7906001600160a01b031681565b61009b7f000000000000000000000000000000000000000000000000000000000000000081565b6100d76101613660046104f1565b610288565b6101896101743660046104f1565b60036020526000908152604090205460ff1681565b60405190151581526020016100a5565b6101ac6101a73660046105a7565b6102b2565b005b600181815481106101be57600080fd5b600091825260209091200154905081565b6060600180548060200260200160405190810160405280929190818152602001828054801561021d57602002820191906000526020600020905b815481526020019060010190808311610209575b5050505050905090565b6060600280548060200260200160405190810160405280929190818152602001828054801561021d57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610261575050505050905090565b6002818154811061029857600080fd5b6000918252602090912001546001600160a01b0316905081565b600054604051631c2d8fb360e31b81527f15fa0125f52e5705da1148bfcf00974823c4381bee4314203ede255f9477b73e60048201526001600160a01b039091169063e16c7d9890602401602060405180830381865afa15801561031a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033e91906105d7565b60405163d09a20c560e01b81527fd0a4ad96d49edb1c33461cebc6fb2609190f32c904e3c3f5877edb4488dee91e60048201523360248201526001600160a01b03919091169063d09a20c59060440160006040518083038186803b1580156103a557600080fd5b505afa1580156103b9573d6000803e3d6000fd5b50505060008381526003602052604090205460ff161590506104195760405162461bcd60e51b8152602060048201526015602482015274726567696f6e20616c72656164792065786973747360581b604482015260640160405180910390fd5b6001805480820182557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6018390556000838152600360209081526040808320805460ff1916851790556002805494850190557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90930180546001600160a01b0386166001600160a01b03199182168117909255600483529284902080549093161790915590518381527fd256121956711d0e11c5a41d66b9d462e3a2b312a43489d8d408945ddf6a8a72910160405180910390a15050565b60006020828403121561050357600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561054257835183529284019291840191600101610526565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156105425783516001600160a01b03168352928401929184019160010161056a565b6001600160a01b03811681146105a457600080fd5b50565b600080604083850312156105ba57600080fd5b8235915060208301356105cc8161058f565b809150509250929050565b6000602082840312156105e957600080fd5b81516105f48161058f565b939250505056fea264697066735822122058284fdeeaa3727211ac69d76b2fca993a48f400b5d85e5056699749935a7d4f64736f6c63430008110033f2208c967df089f60420785795c0a9ba8896b0f6f1867fa7f1f12ad6f79c1a18";

export class Region__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _beneficiaryVault: string,
    _contractRegistry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Region> {
    return super.deploy(
      _beneficiaryVault,
      _contractRegistry,
      overrides || {}
    ) as Promise<Region>;
  }
  getDeployTransaction(
    _beneficiaryVault: string,
    _contractRegistry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _beneficiaryVault,
      _contractRegistry,
      overrides || {}
    );
  }
  attach(address: string): Region {
    return super.attach(address) as Region;
  }
  connect(signer: Signer): Region__factory {
    return super.connect(signer) as Region__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RegionInterface {
    return new utils.Interface(_abi) as RegionInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Region {
    return new Contract(address, _abi, signerOrProvider) as Region;
  }
}
