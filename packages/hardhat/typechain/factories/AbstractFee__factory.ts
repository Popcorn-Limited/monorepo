/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { AbstractFee, AbstractFeeInterface } from "../AbstractFee";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "feeType",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRedemptionFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newFeeRecipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "toke",
        type: "address",
      },
    ],
    name: "FeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "feeType",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "FeesClaimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "feeType",
        type: "bytes32",
      },
    ],
    name: "claimFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "feeTypes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "fees",
    outputs: [
      {
        internalType: "uint256",
        name: "accumulated",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bps",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "feeType",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bps",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class AbstractFee__factory {
  static readonly abi = _abi;
  static createInterface(): AbstractFeeInterface {
    return new utils.Interface(_abi) as AbstractFeeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AbstractFee {
    return new Contract(address, _abi, signerOrProvider) as AbstractFee;
  }
}
