/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StakingDefendedHelper,
  StakingDefendedHelperInterface,
} from "../StakingDefendedHelper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "contract GovStaking",
        name: "_staking",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "staking",
    outputs: [
      {
        internalType: "contract GovStaking",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516102ba3803806102ba83398101604081905261002f91610078565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100b2565b6001600160a01b038116811461007557600080fd5b50565b6000806040838503121561008b57600080fd5b825161009681610060565b60208401519092506100a781610060565b809150509250929050565b6101f9806100c16000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80634cf088d914610046578063a694fc3a14610075578063fc0c546a1461008a575b600080fd5b600154610059906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b610088610083366004610181565b61009d565b005b600054610059906001600160a01b031681565b60005460015460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905291169063095ea7b3906044016020604051808303816000875af11580156100f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610116919061019a565b506001546040516307b0472f60e41b81526004810183905262093a8060248201526001600160a01b0390911690637b0472f090604401600060405180830381600087803b15801561016657600080fd5b505af115801561017a573d6000803e3d6000fd5b5050505050565b60006020828403121561019357600080fd5b5035919050565b6000602082840312156101ac57600080fd5b815180151581146101bc57600080fd5b939250505056fea26469706673582212203b8b1ab2a8d87c22a08fb21c97506ec00cf073598aadc1a6e97b97e270dbdfde64736f6c63430008110033";

export class StakingDefendedHelper__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _token: string,
    _staking: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StakingDefendedHelper> {
    return super.deploy(
      _token,
      _staking,
      overrides || {}
    ) as Promise<StakingDefendedHelper>;
  }
  getDeployTransaction(
    _token: string,
    _staking: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, _staking, overrides || {});
  }
  attach(address: string): StakingDefendedHelper {
    return super.attach(address) as StakingDefendedHelper;
  }
  connect(signer: Signer): StakingDefendedHelper__factory {
    return super.connect(signer) as StakingDefendedHelper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingDefendedHelperInterface {
    return new utils.Interface(_abi) as StakingDefendedHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingDefendedHelper {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as StakingDefendedHelper;
  }
}
