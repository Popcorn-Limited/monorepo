/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockIbAMM, MockIbAMMInterface } from "../MockIbAMM";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_dai",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ibEUR",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ibGBP",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eurInUSD",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_gbpInUSD",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buy_quote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dai",
    outputs: [
      {
        internalType: "contract MockERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516106cf3803806106cf83398101604081905261002f916100b1565b600080546001600160a01b039687166001600160a01b031991821617825594861680825260016020908152604080842080548916841790559590971680835285832080549097168117909655815260029095528285209190915591835290912055610107565b80516001600160a01b03811681146100ac57600080fd5b919050565b600080600080600060a086880312156100c957600080fd5b6100d286610095565b94506100e060208701610095565b93506100ee60408701610095565b6060870151608090970151959894975095949392505050565b6105b9806101166000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063cce7ec1314610046578063e6bfc3091461006e578063f4b9fa751461008f575b600080fd5b61005961005436600461046f565b6100ba565b60405190151581526020015b60405180910390f35b61008161007c36600461046f565b610167565b604051908152602001610065565b6000546100a2906001600160a01b031681565b6040516001600160a01b039091168152602001610065565b600080546100d3906001600160a01b03163330856101a3565b6001600160a01b03808416600090815260016020526040902054166340c10f19336100fe8686610167565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561014457600080fd5b505af1158015610158573d6000803e3d6000fd5b50505050600190505b92915050565b6001600160a01b03821660009081526002602052604081205461019283670de0b6b3a76400006104a7565b61019c91906104cc565b9392505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526101fd908590610203565b50505050565b6000610258826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166102df9092919063ffffffff16565b8051909150156102da578080602001905181019061027691906104ee565b6102da5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b505050565b60606102ee84846000856102f6565b949350505050565b6060824710156103575760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016102d1565b600080866001600160a01b031685876040516103739190610534565b60006040518083038185875af1925050503d80600081146103b0576040519150601f19603f3d011682016040523d82523d6000602084013e6103b5565b606091505b50915091506103c6878383876103d1565b979650505050505050565b60608315610440578251600003610439576001600160a01b0385163b6104395760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102d1565b50816102ee565b6102ee83838151156104555781518083602001fd5b8060405162461bcd60e51b81526004016102d19190610550565b6000806040838503121561048257600080fd5b82356001600160a01b038116811461049957600080fd5b946020939093013593505050565b808202811582820484141761016157634e487b7160e01b600052601160045260246000fd5b6000826104e957634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561050057600080fd5b8151801515811461019c57600080fd5b60005b8381101561052b578181015183820152602001610513565b50506000910152565b60008251610546818460208701610510565b9190910192915050565b602081526000825180602084015261056f816040850160208701610510565b601f01601f1916919091016040019291505056fea2646970667358221220e292a586dbe85ae43fcc1757143f999fd6e0d7cf94c8aaa65d918caa4757f2a864736f6c63430008110033";

export class MockIbAMM__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _dai: string,
    _ibEUR: string,
    _ibGBP: string,
    _eurInUSD: BigNumberish,
    _gbpInUSD: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockIbAMM> {
    return super.deploy(
      _dai,
      _ibEUR,
      _ibGBP,
      _eurInUSD,
      _gbpInUSD,
      overrides || {}
    ) as Promise<MockIbAMM>;
  }
  getDeployTransaction(
    _dai: string,
    _ibEUR: string,
    _ibGBP: string,
    _eurInUSD: BigNumberish,
    _gbpInUSD: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _dai,
      _ibEUR,
      _ibGBP,
      _eurInUSD,
      _gbpInUSD,
      overrides || {}
    );
  }
  attach(address: string): MockIbAMM {
    return super.attach(address) as MockIbAMM;
  }
  connect(signer: Signer): MockIbAMM__factory {
    return super.connect(signer) as MockIbAMM__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockIbAMMInterface {
    return new utils.Interface(_abi) as MockIbAMMInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockIbAMM {
    return new Contract(address, _abi, signerOrProvider) as MockIbAMM;
  }
}
