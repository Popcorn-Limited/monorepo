/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockBasicIssuanceModule,
  MockBasicIssuanceModuleInterface,
} from "../MockBasicIssuanceModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "underlying_",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "quantities_",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "setToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "SetIssued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "setToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "SetRedeemed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_setToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
    ],
    name: "getRequiredComponentUnitsForIssue",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_setToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "issue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "quantities",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_setToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "underlying",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000cc938038062000cc9833981016040819052620000349162000209565b81516200004990600090602085019062000068565b5080516200005f906001906020840190620000d2565b505050620002e7565b828054828255906000526020600020908101928215620000c0579160200282015b82811115620000c057825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000089565b50620000ce92915062000110565b5090565b828054828255906000526020600020908101928215620000c0579160200282015b82811115620000c0578251825591602001919060010190620000f3565b5b80821115620000ce576000815560010162000111565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171562000168576200016862000127565b604052919050565b60006001600160401b038211156200018c576200018c62000127565b5060051b60200190565b600082601f830112620001a857600080fd5b81516020620001c1620001bb8362000170565b6200013d565b82815260059290921b84018101918181019086841115620001e157600080fd5b8286015b84811015620001fe5780518352918301918301620001e5565b509695505050505050565b600080604083850312156200021d57600080fd5b82516001600160401b03808211156200023557600080fd5b818501915085601f8301126200024a57600080fd5b815160206200025d620001bb8362000170565b82815260059290921b840181019181810190898411156200027d57600080fd5b948201945b83861015620002b45785516001600160a01b0381168114620002a45760008081fd5b8252948201949082019062000282565b91880151919650909350505080821115620002ce57600080fd5b50620002dd8582860162000196565b9150509250929050565b6109d280620002f76000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80635c833bfd1461005c5780636d78f47a146100715780637a4ffd0314610084578063a4125403146100ae578063f8fdeb68146100cf575b600080fd5b61006f61006a36600461076b565b6100ef565b005b61006f61007f36600461076b565b610390565b6100976100923660046107a7565b6105e6565b6040516100a59291906107d1565b60405180910390f35b6100c16100bc366004610855565b610704565b6040519081526020016100a5565b6100e26100dd366004610855565b610725565b6040516100a5919061086e565b6040516370a0823160e01b815282906001600160a01b038516906370a082319061011d90339060040161086e565b602060405180830381865afa15801561013a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015e9190610882565b101561016957600080fd5b6040516323b872dd60e01b81526001600160a01b038416906323b872dd906101999033903090879060040161089b565b6020604051808303816000875af11580156101b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101dc91906108bf565b5060005b60005481101561034f576000600182815481106101ff576101ff6108e8565b9060005260206000200154846102159190610914565b90506000828154811061022a5761022a6108e8565b60009182526020909120015460405163095ea7b360e01b81526001600160a01b039091169063095ea7b3906102659030908590600401610931565b6020604051808303816000875af1158015610284573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a891906108bf565b50600082815481106102bc576102bc6108e8565b60009182526020909120015460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906102f79086908590600401610931565b6020604051808303816000875af1158015610316573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033a91906108bf565b505080806103479061094a565b9150506101e0565b507fc97fb56e31f7331d616610489789145b415cfcca68179fc31d318b1454d0644183833360405161038393929190610963565b60405180910390a1505050565b60005b600054811015610552576000600182815481106103b2576103b26108e8565b9060005260206000200154846103c89190610914565b905080600083815481106103de576103de6108e8565b6000918252602090912001546040516370a0823160e01b81526001600160a01b03909116906370a082319061041790339060040161086e565b602060405180830381865afa158015610434573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104589190610882565b10156104aa5760405162461bcd60e51b815260206004820152601b60248201527f6e6f7420656e6f75676820756e6465726c79696e6720746f6b656e0000000000604482015260640160405180910390fd5b600082815481106104bd576104bd6108e8565b6000918252602090912001546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906104fa9033903090869060040161089b565b6020604051808303816000875af1158015610519573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053d91906108bf565b5050808061054a9061094a565b915050610393565b506040516340c10f1960e01b81526001600160a01b038416906340c10f19906105819084908690600401610931565b600060405180830381600087803b15801561059b57600080fd5b505af11580156105af573d6000803e3d6000fd5b505050507f2d6442756b2b5e0b490f8d418d863a5d874591fe29a2ac6bad98834a9ec34a7983838360405161038393929190610963565b60008054606091829167ffffffffffffffff81111561060757610607610986565b604051908082528060200260200182016040528015610630578160200160208202803683370190505b50905060005b6000548110156106985760018181548110610653576106536108e8565b9060005260206000200154856106699190610914565b82828151811061067b5761067b6108e8565b6020908102919091010152806106908161094a565b915050610636565b50600081818054806020026020016040519081016040528092919081815260200182805480156106f157602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116106d3575b5050505050915092509250509250929050565b6001818154811061071457600080fd5b600091825260209091200154905081565b6000818154811061073557600080fd5b6000918252602090912001546001600160a01b0316905081565b80356001600160a01b038116811461076657600080fd5b919050565b60008060006060848603121561078057600080fd5b6107898461074f565b92506020840135915061079e6040850161074f565b90509250925092565b600080604083850312156107ba57600080fd5b6107c38361074f565b946020939093013593505050565b604080825283519082018190526000906020906060840190828701845b828110156108135781516001600160a01b0316845292840192908401906001016107ee565b5050508381038285015284518082528583019183019060005b818110156108485783518352928401929184019160010161082c565b5090979650505050505050565b60006020828403121561086757600080fd5b5035919050565b6001600160a01b0391909116815260200190565b60006020828403121561089457600080fd5b5051919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6000602082840312156108d157600080fd5b815180151581146108e157600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761092b5761092b6108fe565b92915050565b6001600160a01b03929092168252602082015260400190565b60006001820161095c5761095c6108fe565b5060010190565b6001600160a01b0393841681526020810192909252909116604082015260600190565b634e487b7160e01b600052604160045260246000fdfea26469706673582212207fbfa9b29ff453f433299fcff272a1ddd38f6b1e1cf478323fc390b8ae5c0e0564736f6c63430008110033";

export class MockBasicIssuanceModule__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    underlying_: string[],
    quantities_: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockBasicIssuanceModule> {
    return super.deploy(
      underlying_,
      quantities_,
      overrides || {}
    ) as Promise<MockBasicIssuanceModule>;
  }
  getDeployTransaction(
    underlying_: string[],
    quantities_: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      underlying_,
      quantities_,
      overrides || {}
    );
  }
  attach(address: string): MockBasicIssuanceModule {
    return super.attach(address) as MockBasicIssuanceModule;
  }
  connect(signer: Signer): MockBasicIssuanceModule__factory {
    return super.connect(signer) as MockBasicIssuanceModule__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockBasicIssuanceModuleInterface {
    return new utils.Interface(_abi) as MockBasicIssuanceModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockBasicIssuanceModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockBasicIssuanceModule;
  }
}
