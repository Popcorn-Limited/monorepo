/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BeneficiaryGovernance,
  BeneficiaryGovernanceInterface,
} from "../BeneficiaryGovernance";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IContractRegistry",
        name: "_contractRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
    ],
    name: "BeneficiaryExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_region",
        type: "bytes32",
      },
    ],
    name: "RegionDoesNotExist",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BondWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "Finalize",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "applicationCid",
        type: "string",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
    ],
    name: "Vote",
    type: "event",
  },
  {
    inputs: [],
    name: "DefaultConfigurations",
    outputs: [
      {
        internalType: "uint256",
        name: "votingPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vetoPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "proposalBond",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "beneficiaryProposals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
    ],
    name: "claimBond",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractRegistry",
    outputs: [
      {
        internalType: "contract IContractRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_region",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "_applicationCid",
        type: "string",
      },
      {
        internalType: "enum BeneficiaryGovernance.ProposalType",
        name: "_type",
        type: "uint8",
      },
    ],
    name: "createProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
    ],
    name: "finalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum BeneficiaryGovernance.ProposalType",
        name: "_type",
        type: "uint8",
      },
    ],
    name: "getNumberOfProposals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
    ],
    name: "getNumberOfVoters",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
    ],
    name: "getStatus",
    outputs: [
      {
        internalType: "enum BeneficiaryGovernance.ProposalStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nominations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "enum BeneficiaryGovernance.ProposalStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "string",
        name: "applicationCid",
        type: "string",
      },
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "region",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "yesCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "noCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "voterCount",
        type: "uint256",
      },
      {
        internalType: "enum BeneficiaryGovernance.ProposalType",
        name: "proposalType",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "votingPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vetoPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalBond",
            type: "uint256",
          },
        ],
        internalType: "struct BeneficiaryGovernance.ConfigurationOptions",
        name: "configurationOptions",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "vaultId",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
    ],
    name: "refreshState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_votingPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_vetoPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_proposalBond",
        type: "uint256",
      },
    ],
    name: "setConfiguration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "takedowns",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
      {
        internalType: "enum BeneficiaryGovernance.VoteOption",
        name: "_vote",
        type: "uint8",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620026e2380380620026e2833981016040819052620000349162000067565b6001600160a01b038116608052620000606202a3006005819055600655686c6b935b8bbd400000600755565b5062000099565b6000602082840312156200007a57600080fd5b81516001600160a01b03811681146200009257600080fd5b9392505050565b6080516125d26200011060003960008181610289015281816105250152818161078b0152818161087a01528181610a7a01528181610df301528181610f93015281816110f50152818161123f015281816113e3015281816117330152818161185d015281816119cf0152611b3701526125d26000f3fe608060405234801561001057600080fd5b50600436106100eb5760003560e01c8063438596321161009257806343859632146101c65780635c622a0e146101e95780635ddb48c214610209578063757509291461021c57806375d0c0dc14610249578063943e82161461025e578063aa74cb3f14610271578063abf410e514610284578063f2f7233f146102b857600080fd5b8063013cf08b146100f057806305261aea14610124578063196b89b3146101395780631afb276f1461015a5780631c08c08e1461017a57806326f347821461018d5780632aff3e3b146101a0578063426f8c41146101b3575b600080fd5b6101036100fe366004611f16565b6102cb565b60405161011b9c9b9a99989796959493929190611fa9565b60405180910390f35b610137610132366004611f16565b610400565b005b61014c610147366004611f16565b61063e565b60405190815260200161011b565b61014c610168366004612065565b60016020526000908152604090205481565b610137610188366004611f16565b61065f565b61014c61019b366004611f16565b610964565b61014c6101ae366004611f16565b610992565b61014c6101c1366004612096565b6109a2565b6101d96101d43660046120b3565b6109cc565b604051901515815260200161011b565b6101fc6101f7366004611f16565b610a16565b60405161011b91906120e3565b6101376102173660046120f1565b610a45565b60055460065460075461022e92919083565b6040805193845260208401929092529082015260600161011b565b61014c60008051602061255d83398151915281565b61013761026c36600461211d565b610b7d565b61014c61027f366004612142565b610f1f565b6102ab7f000000000000000000000000000000000000000000000000000000000000000081565b60405161011b91906121e6565b6101376102c6366004611f16565b6115b1565b600281815481106102db57600080fd5b60009182526020909120600e90910201805460028201805460ff831694506101009092046001600160a01b03169291610313906121fa565b80601f016020809104026020016040519081016040528092919081815260200182805461033f906121fa565b801561038c5780601f106103615761010080835404028352916020019161038c565b820191906000526020600020905b81548152906001019060200180831161036f57829003601f168201915b50505060038401546004850154600586015460068701546007880154600889015460098a015460408051606081018252600a8d01548152600b8d01546020820152600c8d015491810191909152600d909b0154999a6001600160a01b039097169995985093965091949093919260ff16918c565b60006002828154811061041557610415612234565b90600052602060002090600e0201905061042e816115e3565b6002815460ff16600481111561044657610446611f2f565b146104935760405162461bcd60e51b8152602060048201526018602482015277119a5b985b1a5e985d1a5bdb881b9bdd08185b1b1bddd95960421b60448201526064015b60405180910390fd5b80600701548160060154116104ae57805460ff191660041781555b8060070154816006015411156104d257805460ff191660031781556104d2816116f0565b805461010090046001600160a01b03166000908152602081905260409020805460ff19169055600d8101541561060f57604051631c2d8fb360e31b815260008051602061253d83398151915260048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e16c7d9890602401602060405180830381865afa158015610574573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610598919061224a565b600d82015460405163efff46dd60e01b815260008051602061255d833981519152600482015260248101919091526001600160a01b03919091169063efff46dd90604401600060405180830381600087803b1580156105f657600080fd5b505af115801561060a573d6000803e3d6000fd5b505050505b60405182907f5ab25e4916e9bcbaf83240dae72af1ebdcbe16d0bf417681ecbadab3ce031b9690600090a25050565b6004818154811061064e57600080fd5b600091825260209091200154905081565b60006002828154811061067457610674612234565b60009182526020909120600e9091020160038101549091506001600160a01b031633146106f45760405162461bcd60e51b815260206004820152602860248201527f6f6e6c79207468652070726f706f736572206d61792063616c6c207468697320604482015267333ab731ba34b7b760c11b606482015260840161048a565b6003815460ff16600481111561070c5761070c611f2f565b146107635760405162461bcd60e51b815260206004820152602160248201527f50726f706f73616c206661696c6564206f722069732070726f63657373696e676044820152602160f81b606482015260840161048a565b600c810154604051631c2d8fb360e31b815260008051602061257d83398151915260048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e16c7d9890602401602060405180830381865afa1580156107da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fe919061224a565b60405163095ea7b360e01b8152306004820152602481018390526001600160a01b03919091169063095ea7b3906044016020604051808303816000875af115801561084d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108719190612277565b506109263033837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e16c7d9860008051602061257d8339815191526040518263ffffffff1660e01b81526004016108d491815260200190565b602060405180830381865afa1580156108f1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610915919061224a565b6001600160a01b031692919061193d565b60408051338152602081018390527f0d41118e36df44efb77a471fc49fb9c0be0406d802ef95520e9fbf606e65b455910160405180910390a1505050565b60006002828154811061097957610979612234565b90600052602060002090600e0201600801549050919050565b6003818154811061064e57600080fd5b6000808260018111156109b7576109b7611f2f565b036109c457505060035490565b505060045490565b6000600283815481106109e1576109e1612234565b600091825260208083206001600160a01b03861684526001600e90930201919091019052604090205460ff1690505b92915050565b600060028281548110610a2b57610a2b612234565b60009182526020909120600e909102015460ff1692915050565b604051631c2d8fb360e31b81527f15fa0125f52e5705da1148bfcf00974823c4381bee4314203ede255f9477b73e60048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e16c7d9890602401602060405180830381865afa158015610ac9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aed919061224a565b60405163d09a20c560e01b81527fd0a4ad96d49edb1c33461cebc6fb2609190f32c904e3c3f5877edb4488dee91e60048201523360248201526001600160a01b03919091169063d09a20c59060440160006040518083038186803b158015610b5457600080fd5b505afa158015610b68573d6000803e3d6000fd5b50505060059390935560069190915560075550565b600060028381548110610b9257610b92612234565b90600052602060002090600e02019050610bab816115e3565b6000815460ff166004811115610bc357610bc3611f2f565b1480610be457506001815460ff166004811115610be257610be2611f2f565b145b610c3f5760405162461bcd60e51b815260206004820152602660248201527f50726f706f73616c206973206e6f206c6f6e67657220696e20766f74696e67206044820152651c195c9a5bd960d21b606482015260840161048a565b33600090815260018201602052604090205460ff1615610cb05760405162461bcd60e51b815260206004820152602660248201527f6164647265737320616c726561647920766f74656420666f72207468652070726044820152651bdc1bdcd85b60d21b606482015260840161048a565b6000610cbb33611997565b33600090815260018481016020526040909120805460ff1916821790556008840154919250610cea9190612292565b60088301556000836001811115610d0357610d03611f2f565b03610d97576000825460ff166004811115610d2057610d20611f2f565b14610d815760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c20766f74696e6720706572696f642068617320616c7265616460448201526a792066696e69736865642160a81b606482015260840161048a565b808260060154610d919190612292565b60068301555b6001836001811115610dab57610dab611f2f565b03610dc657808260070154610dc09190612292565b60078301555b600d82015415610eea57604051631c2d8fb360e31b815260008051602061253d83398151915260048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e16c7d9890602401602060405180830381865afa158015610e42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e66919061224a565b600d830154604051630db4dc5f60e41b815260008051602061255d83398151915260048201526024810191909152336044820152606481018390526001600160a01b03919091169063db4dc5f090608401600060405180830381600087803b158015610ed157600080fd5b505af1158015610ee5573d6000803e3d6000fd5b505050505b6040518190339086907f710b36627495d2e7af3a196c85bf3e51efd906f54516753e5e801b3a22b18f7890600090a450505050565b6000856001600160a01b038116610f6a5760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964206164647265737360881b604482015260640161048a565b600754604051631c2d8fb360e31b815260008051602061257d83398151915260048201523391907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e16c7d9890602401602060405180830381865afa158015610fe2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611006919061224a565b6001600160a01b03166370a08231836040518263ffffffff1660e01b815260040161103191906121e6565b602060405180830381865afa15801561104e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107291906122b3565b10156110c05760405162461bcd60e51b815260206004820152601b60248201527f70726f706f73616c20626f6e64206973206e6f7420656e6f7567680000000000604482015260640161048a565b604051631c2d8fb360e31b81527f169c5aa5b339507e0d95e149f6ebeaf527bb9067f2601a2d762aec9d5850b8b160048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e16c7d9890602401602060405180830381865afa158015611144573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611168919061224a565b6001600160a01b031663be856eda886040518263ffffffff1660e01b815260040161119591815260200190565b602060405180830381865afa1580156111b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d69190612277565b6111f657604051631159f0dd60e01b81526004810188905260240161048a565b6112008489611b11565b6007541561126e57600754604051631c2d8fb360e31b815260008051602061257d833981519152600482015261126e9133913091906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e16c7d98906024016108d4565b6002805460018101825560009182529085600181111561129057611290611f2f565b036112cf57600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01819055611305565b600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b018190555b60006002828154811061131a5761131a612234565b60009182526020909120600e9091020180546001600160a81b03191660ff196001600160a01b038d16610100021617815590506002810161135c888a83612330565b506003810180546001600160a01b031916331790554260048201556005810189905560098101805487919060ff19166001838181111561139e5761139e611f2f565b0217905550600554600a820155600654600b820155600754600c820155604051631c2d8fb360e31b815260008051602061253d833981519152600482015260009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e16c7d9890602401602060405180830381865afa158015611432573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611456919061224a565b6001600160a01b03166366308e1360008051602061255d833981519152864260405160200161148f929190918252602082015260400190565b60408051601f1981840301815291905280516020909101206005546114b49042612292565b6040516001600160e01b031960e086901b16815260048101939093526024830191909152604482015260640160408051808303816000875af11580156114fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152291906123f0565b91509150811561153457600d83018190555b6001600160a01b038c16600081815260208181526040808320805460ff191660019081179091556002549252918290205551339086907fbf0fcd54b591a07a1943cf5eaf6fdd64e31bc7b4c469e9ba81fb00e21fd859f590611599908f908f9061241c565b60405180910390a450919a9950505050505050505050565b6000600282815481106115c6576115c6612234565b90600052602060002090600e020190506115df816115e3565b5050565b6004815460ff1660048111156115fb576115fb611f2f565b148061161c57506003815460ff16600481111561161a5761161a611f2f565b145b156116245750565b600a810154600b820154600061163a8284612292565b905082846004015461164c9190612292565b421015801561166957508084600401546116669190612292565b42105b156116c1576001845460ff16600481111561168657611686611f2f565b146116c1578360070154846006015410156116b5578354600290859060ff19166001835b021790555050505050565b835460ff191660011784555b8084600401546116d19190612292565b42106116ea578354600290859060ff19166001836116aa565b50505050565b6000600982015460ff16600181111561170b5761170b611f2f565b0361181a57604051631c2d8fb360e31b815260008051602061251d83398151915260048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e16c7d9890602401602060405180830381865afa158015611782573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a6919061224a565b815460058301546040516376d2186160e01b81526001600160a01b03938416936376d21861936117e79361010090910490911691600287019060040161244b565b600060405180830381600087803b15801561180157600080fd5b505af1158015611815573d6000803e3d6000fd5b505050505b6001600982015460ff16600181111561183557611835611f2f565b0361193a57604051631c2d8fb360e31b815260008051602061251d83398151915260048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e16c7d9890602401602060405180830381865afa1580156118ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d0919061224a565b81546040516346dd6fcd60e01b81526001600160a01b03928316926346dd6fcd9261190792610100909104909116906004016121e6565b600060405180830381600087803b15801561192157600080fd5b505af1158015611935573d6000803e3d6000fd5b505050505b50565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526116ea908590611cb4565b604051631c2d8fb360e31b81527ff37dd4f43b28365f4f2451b8fd1ee60086db7e9f30577d1fc1280a3f1d57bbfe60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e16c7d9890602401602060405180830381865afa158015611a1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a42919061224a565b6001600160a01b031663034f98e5836040518263ffffffff1660e01b8152600401611a6d91906121e6565b602060405180830381865afa158015611a8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aae91906122b3565b905060008111611b0c5760405162461bcd60e51b8152602060048201526024808201527f6d757374206861766520766f69636520637265646974732066726f6d207374616044820152636b696e6760e01b606482015260840161048a565b919050565b604051631c2d8fb360e31b815260008051602061251d83398151915260048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e16c7d9890602401602060405180830381865afa158015611b86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611baa919061224a565b6001600160a01b03166375e71d6d836040518263ffffffff1660e01b8152600401611bd591906121e6565b602060405180830381865afa158015611bf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c169190612277565b9050826001811115611c2a57611c2a611f2f565b600103611c515780611c5157816040516331a1981b60e01b815260040161048a91906121e6565b826001811115611c6357611c63611f2f565b600003611caf576001600160a01b03821660009081526020819052604090205460ff168015611c8f5750805b15611caf57816040516331a1981b60e01b815260040161048a91906121e6565b505050565b6000611d09826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611d869092919063ffffffff16565b805190915015611caf5780806020019051810190611d279190612277565b611caf5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161048a565b6060611d958484600085611d9d565b949350505050565b606082471015611dfe5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161048a565b600080866001600160a01b03168587604051611e1a91906124ed565b60006040518083038185875af1925050503d8060008114611e57576040519150601f19603f3d011682016040523d82523d6000602084013e611e5c565b606091505b5091509150611e6d87838387611e78565b979650505050505050565b60608315611ee7578251600003611ee0576001600160a01b0385163b611ee05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161048a565b5081611d95565b611d958383815115611efc5781518083602001fd5b8060405162461bcd60e51b815260040161048a9190612509565b600060208284031215611f2857600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60058110611f5557611f55611f2f565b9052565b60005b83811015611f74578181015183820152602001611f5c565b50506000910152565b60008151808452611f95816020860160208601611f59565b601f01601f19169290920160200192915050565b611fb3818e611f45565b600060018060a01b03808e1660208401526101c06040840152611fda6101c084018e611f7d565b9150808c166060840152508960808301528860a08301528760c08301528660e0830152856101008301526002851061201457612014611f2f565b610120820194909452825161014082015260208301516101608201526040909201516101808301526101a0909101529998505050505050505050565b6001600160a01b038116811461193a57600080fd5b60006020828403121561207757600080fd5b813561208281612050565b9392505050565b6002811061193a57600080fd5b6000602082840312156120a857600080fd5b813561208281612089565b600080604083850312156120c657600080fd5b8235915060208301356120d881612050565b809150509250929050565b60208101610a108284611f45565b60008060006060848603121561210657600080fd5b505081359360208301359350604090920135919050565b6000806040838503121561213057600080fd5b8235915060208301356120d881612089565b60008060008060006080868803121561215a57600080fd5b853561216581612050565b945060208601359350604086013567ffffffffffffffff8082111561218957600080fd5b818801915088601f83011261219d57600080fd5b8135818111156121ac57600080fd5b8960208285010111156121be57600080fd5b60208301955080945050505060608601356121d881612089565b809150509295509295909350565b6001600160a01b0391909116815260200190565b600181811c9082168061220e57607f821691505b60208210810361222e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561225c57600080fd5b815161208281612050565b80518015158114611b0c57600080fd5b60006020828403121561228957600080fd5b61208282612267565b80820180821115610a1057634e487b7160e01b600052601160045260246000fd5b6000602082840312156122c557600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b601f821115611caf57600081815260208120601f850160051c810160208610156123095750805b601f850160051c820191505b8181101561232857828155600101612315565b505050505050565b67ffffffffffffffff831115612348576123486122cc565b61235c8361235683546121fa565b836122e2565b6000601f84116001811461239057600085156123785750838201355b600019600387901b1c1916600186901b178355611935565b600083815260209020601f19861690835b828110156123c157868501358255602094850194600190920191016123a1565b50868210156123de5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b6000806040838503121561240357600080fd5b61240c83612267565b9150602083015190509250929050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b60018060a01b03841681526000602084818401526060604084015260008454612473816121fa565b806060870152608060018084166000811461249557600181146124af576124dd565b60ff1985168984015283151560051b8901830195506124dd565b896000528660002060005b858110156124d55781548b82018601529083019088016124ba565b8a0184019650505b50939a9950505050505050505050565b600082516124ff818460208701611f59565b9190910192915050565b6020815260006120826020830184611f7d56fec06005761aecdce9d8037400137cccfbffed4be85bf152e41fc11b29e23182e79bdd3bade36b8fa56237528cbb4c98556891be00a9524cd32bef9dfd5c2a5b4b8c76b2d2fc4ae4e9d0199f96be776a295610c24a3241321fd18909fa728e145369e547947a4514871bf84679401f91758bd0fe92e4c005143f6d0e5213dab0cba2646970667358221220efa0825ab805643df2e9883b123211578632d47a1f9cdad7a15c32424dc75be164736f6c63430008110033";

export class BeneficiaryGovernance__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _contractRegistry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BeneficiaryGovernance> {
    return super.deploy(
      _contractRegistry,
      overrides || {}
    ) as Promise<BeneficiaryGovernance>;
  }
  getDeployTransaction(
    _contractRegistry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_contractRegistry, overrides || {});
  }
  attach(address: string): BeneficiaryGovernance {
    return super.attach(address) as BeneficiaryGovernance;
  }
  connect(signer: Signer): BeneficiaryGovernance__factory {
    return super.connect(signer) as BeneficiaryGovernance__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BeneficiaryGovernanceInterface {
    return new utils.Interface(_abi) as BeneficiaryGovernanceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BeneficiaryGovernance {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BeneficiaryGovernance;
  }
}
