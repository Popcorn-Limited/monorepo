/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IButterBatchProcessing,
  IButterBatchProcessingInterface,
} from "../IButterBatchProcessing";

const _abi = [
  {
    inputs: [],
    name: "batchRedeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "batchId",
        type: "bytes32",
      },
    ],
    name: "batches",
    outputs: [
      {
        components: [
          {
            internalType: "enum BatchType",
            name: "batchType",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "batchId",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "claimable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "unclaimedShares",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "suppliedTokenBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimableTokenBalance",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "suppliedTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "claimableTokenAddress",
            type: "address",
          },
        ],
        internalType: "struct Batch",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "batchId_",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "claim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimRedemptionFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRedeemBatchId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "depositForMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "depositForRedeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastRedeemedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeRate",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "setRedemptionFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "batchId_",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amountToWithdraw_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "withdrawFromBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IButterBatchProcessing__factory {
  static readonly abi = _abi;
  static createInterface(): IButterBatchProcessingInterface {
    return new utils.Interface(_abi) as IButterBatchProcessingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IButterBatchProcessing {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IButterBatchProcessing;
  }
}
