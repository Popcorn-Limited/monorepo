/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IMerkleOrchard,
  IMerkleOrchardInterface,
} from "../IMerkleOrchard";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "distributionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "distributor",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenIndex",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "merkleProof",
            type: "bytes32[]",
          },
        ],
        internalType: "struct IMerkleOrchard.Claim[]",
        name: "claims",
        type: "tuple[]",
      },
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "claimDistributions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "distributionId",
        type: "uint256",
      },
    ],
    name: "createDistribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "distributor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "distributionId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "claimedBalance",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "verifyClaim",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IMerkleOrchard__factory {
  static readonly abi = _abi;
  static createInterface(): IMerkleOrchardInterface {
    return new utils.Interface(_abi) as IMerkleOrchardInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMerkleOrchard {
    return new Contract(address, _abi, signerOrProvider) as IMerkleOrchard;
  }
}
